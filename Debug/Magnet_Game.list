
Magnet_Game.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005608  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000118  080056c8  080056c8  000066c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080057e0  080057e0  0000707c  2**0
                  CONTENTS
  4 .ARM          00000000  080057e0  080057e0  0000707c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080057e0  080057e0  0000707c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080057e0  080057e0  000067e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080057e4  080057e4  000067e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000007c  20000000  080057e8  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003ac  20000080  08005864  00007080  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  2000042c  08005864  0000742c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000707c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000f1bf  00000000  00000000  000070a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002abe  00000000  00000000  00016263  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e88  00000000  00000000  00018d28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000b44  00000000  00000000  00019bb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012414  00000000  00000000  0001a6f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00012e5e  00000000  00000000  0002cb08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00067c8d  00000000  00000000  0003f966  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a75f3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003ce8  00000000  00000000  000a7638  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  000ab320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000080 	.word	0x20000080
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080056b0 	.word	0x080056b0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000084 	.word	0x20000084
 8000104:	080056b0 	.word	0x080056b0

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f8f0 	bl	8000404 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__divsi3>:
 8000230:	4603      	mov	r3, r0
 8000232:	430b      	orrs	r3, r1
 8000234:	d47f      	bmi.n	8000336 <__divsi3+0x106>
 8000236:	2200      	movs	r2, #0
 8000238:	0843      	lsrs	r3, r0, #1
 800023a:	428b      	cmp	r3, r1
 800023c:	d374      	bcc.n	8000328 <__divsi3+0xf8>
 800023e:	0903      	lsrs	r3, r0, #4
 8000240:	428b      	cmp	r3, r1
 8000242:	d35f      	bcc.n	8000304 <__divsi3+0xd4>
 8000244:	0a03      	lsrs	r3, r0, #8
 8000246:	428b      	cmp	r3, r1
 8000248:	d344      	bcc.n	80002d4 <__divsi3+0xa4>
 800024a:	0b03      	lsrs	r3, r0, #12
 800024c:	428b      	cmp	r3, r1
 800024e:	d328      	bcc.n	80002a2 <__divsi3+0x72>
 8000250:	0c03      	lsrs	r3, r0, #16
 8000252:	428b      	cmp	r3, r1
 8000254:	d30d      	bcc.n	8000272 <__divsi3+0x42>
 8000256:	22ff      	movs	r2, #255	@ 0xff
 8000258:	0209      	lsls	r1, r1, #8
 800025a:	ba12      	rev	r2, r2
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d302      	bcc.n	8000268 <__divsi3+0x38>
 8000262:	1212      	asrs	r2, r2, #8
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	d065      	beq.n	8000334 <__divsi3+0x104>
 8000268:	0b03      	lsrs	r3, r0, #12
 800026a:	428b      	cmp	r3, r1
 800026c:	d319      	bcc.n	80002a2 <__divsi3+0x72>
 800026e:	e000      	b.n	8000272 <__divsi3+0x42>
 8000270:	0a09      	lsrs	r1, r1, #8
 8000272:	0bc3      	lsrs	r3, r0, #15
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x4c>
 8000278:	03cb      	lsls	r3, r1, #15
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b83      	lsrs	r3, r0, #14
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x58>
 8000284:	038b      	lsls	r3, r1, #14
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b43      	lsrs	r3, r0, #13
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x64>
 8000290:	034b      	lsls	r3, r1, #13
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b03      	lsrs	r3, r0, #12
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x70>
 800029c:	030b      	lsls	r3, r1, #12
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0ac3      	lsrs	r3, r0, #11
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x7c>
 80002a8:	02cb      	lsls	r3, r1, #11
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a83      	lsrs	r3, r0, #10
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x88>
 80002b4:	028b      	lsls	r3, r1, #10
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a43      	lsrs	r3, r0, #9
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x94>
 80002c0:	024b      	lsls	r3, r1, #9
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a03      	lsrs	r3, r0, #8
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0xa0>
 80002cc:	020b      	lsls	r3, r1, #8
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	d2cd      	bcs.n	8000270 <__divsi3+0x40>
 80002d4:	09c3      	lsrs	r3, r0, #7
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xae>
 80002da:	01cb      	lsls	r3, r1, #7
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0983      	lsrs	r3, r0, #6
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xba>
 80002e6:	018b      	lsls	r3, r1, #6
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0943      	lsrs	r3, r0, #5
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xc6>
 80002f2:	014b      	lsls	r3, r1, #5
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0903      	lsrs	r3, r0, #4
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xd2>
 80002fe:	010b      	lsls	r3, r1, #4
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	08c3      	lsrs	r3, r0, #3
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xde>
 800030a:	00cb      	lsls	r3, r1, #3
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0883      	lsrs	r3, r0, #2
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xea>
 8000316:	008b      	lsls	r3, r1, #2
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0843      	lsrs	r3, r0, #1
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xf6>
 8000322:	004b      	lsls	r3, r1, #1
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	1a41      	subs	r1, r0, r1
 800032a:	d200      	bcs.n	800032e <__divsi3+0xfe>
 800032c:	4601      	mov	r1, r0
 800032e:	4152      	adcs	r2, r2
 8000330:	4610      	mov	r0, r2
 8000332:	4770      	bx	lr
 8000334:	e05d      	b.n	80003f2 <__divsi3+0x1c2>
 8000336:	0fca      	lsrs	r2, r1, #31
 8000338:	d000      	beq.n	800033c <__divsi3+0x10c>
 800033a:	4249      	negs	r1, r1
 800033c:	1003      	asrs	r3, r0, #32
 800033e:	d300      	bcc.n	8000342 <__divsi3+0x112>
 8000340:	4240      	negs	r0, r0
 8000342:	4053      	eors	r3, r2
 8000344:	2200      	movs	r2, #0
 8000346:	469c      	mov	ip, r3
 8000348:	0903      	lsrs	r3, r0, #4
 800034a:	428b      	cmp	r3, r1
 800034c:	d32d      	bcc.n	80003aa <__divsi3+0x17a>
 800034e:	0a03      	lsrs	r3, r0, #8
 8000350:	428b      	cmp	r3, r1
 8000352:	d312      	bcc.n	800037a <__divsi3+0x14a>
 8000354:	22fc      	movs	r2, #252	@ 0xfc
 8000356:	0189      	lsls	r1, r1, #6
 8000358:	ba12      	rev	r2, r2
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d30c      	bcc.n	800037a <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d308      	bcc.n	800037a <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	1192      	asrs	r2, r2, #6
 800036c:	428b      	cmp	r3, r1
 800036e:	d304      	bcc.n	800037a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	d03a      	beq.n	80003ea <__divsi3+0x1ba>
 8000374:	1192      	asrs	r2, r2, #6
 8000376:	e000      	b.n	800037a <__divsi3+0x14a>
 8000378:	0989      	lsrs	r1, r1, #6
 800037a:	09c3      	lsrs	r3, r0, #7
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x154>
 8000380:	01cb      	lsls	r3, r1, #7
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0983      	lsrs	r3, r0, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x160>
 800038c:	018b      	lsls	r3, r1, #6
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0943      	lsrs	r3, r0, #5
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x16c>
 8000398:	014b      	lsls	r3, r1, #5
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0903      	lsrs	r3, r0, #4
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x178>
 80003a4:	010b      	lsls	r3, r1, #4
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	08c3      	lsrs	r3, r0, #3
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x184>
 80003b0:	00cb      	lsls	r3, r1, #3
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0883      	lsrs	r3, r0, #2
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x190>
 80003bc:	008b      	lsls	r3, r1, #2
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	d2d9      	bcs.n	8000378 <__divsi3+0x148>
 80003c4:	0843      	lsrs	r3, r0, #1
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d301      	bcc.n	80003ce <__divsi3+0x19e>
 80003ca:	004b      	lsls	r3, r1, #1
 80003cc:	1ac0      	subs	r0, r0, r3
 80003ce:	4152      	adcs	r2, r2
 80003d0:	1a41      	subs	r1, r0, r1
 80003d2:	d200      	bcs.n	80003d6 <__divsi3+0x1a6>
 80003d4:	4601      	mov	r1, r0
 80003d6:	4663      	mov	r3, ip
 80003d8:	4152      	adcs	r2, r2
 80003da:	105b      	asrs	r3, r3, #1
 80003dc:	4610      	mov	r0, r2
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x1b4>
 80003e0:	4240      	negs	r0, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d500      	bpl.n	80003e8 <__divsi3+0x1b8>
 80003e6:	4249      	negs	r1, r1
 80003e8:	4770      	bx	lr
 80003ea:	4663      	mov	r3, ip
 80003ec:	105b      	asrs	r3, r3, #1
 80003ee:	d300      	bcc.n	80003f2 <__divsi3+0x1c2>
 80003f0:	4240      	negs	r0, r0
 80003f2:	b501      	push	{r0, lr}
 80003f4:	2000      	movs	r0, #0
 80003f6:	f000 f805 	bl	8000404 <__aeabi_idiv0>
 80003fa:	bd02      	pop	{r1, pc}

080003fc <__aeabi_idivmod>:
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d0f8      	beq.n	80003f2 <__divsi3+0x1c2>
 8000400:	e716      	b.n	8000230 <__divsi3>
 8000402:	4770      	bx	lr

08000404 <__aeabi_idiv0>:
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			@ (mov r8, r8)

08000408 <__aeabi_lmul>:
 8000408:	b5f0      	push	{r4, r5, r6, r7, lr}
 800040a:	46ce      	mov	lr, r9
 800040c:	4699      	mov	r9, r3
 800040e:	0c03      	lsrs	r3, r0, #16
 8000410:	469c      	mov	ip, r3
 8000412:	0413      	lsls	r3, r2, #16
 8000414:	4647      	mov	r7, r8
 8000416:	0c1b      	lsrs	r3, r3, #16
 8000418:	001d      	movs	r5, r3
 800041a:	000e      	movs	r6, r1
 800041c:	4661      	mov	r1, ip
 800041e:	0404      	lsls	r4, r0, #16
 8000420:	0c24      	lsrs	r4, r4, #16
 8000422:	b580      	push	{r7, lr}
 8000424:	0007      	movs	r7, r0
 8000426:	0c10      	lsrs	r0, r2, #16
 8000428:	434b      	muls	r3, r1
 800042a:	4365      	muls	r5, r4
 800042c:	4341      	muls	r1, r0
 800042e:	4360      	muls	r0, r4
 8000430:	0c2c      	lsrs	r4, r5, #16
 8000432:	18c0      	adds	r0, r0, r3
 8000434:	1824      	adds	r4, r4, r0
 8000436:	468c      	mov	ip, r1
 8000438:	42a3      	cmp	r3, r4
 800043a:	d903      	bls.n	8000444 <__aeabi_lmul+0x3c>
 800043c:	2380      	movs	r3, #128	@ 0x80
 800043e:	025b      	lsls	r3, r3, #9
 8000440:	4698      	mov	r8, r3
 8000442:	44c4      	add	ip, r8
 8000444:	4649      	mov	r1, r9
 8000446:	4379      	muls	r1, r7
 8000448:	4356      	muls	r6, r2
 800044a:	0c23      	lsrs	r3, r4, #16
 800044c:	042d      	lsls	r5, r5, #16
 800044e:	0c2d      	lsrs	r5, r5, #16
 8000450:	1989      	adds	r1, r1, r6
 8000452:	4463      	add	r3, ip
 8000454:	0424      	lsls	r4, r4, #16
 8000456:	1960      	adds	r0, r4, r5
 8000458:	18c9      	adds	r1, r1, r3
 800045a:	bcc0      	pop	{r6, r7}
 800045c:	46b9      	mov	r9, r7
 800045e:	46b0      	mov	r8, r6
 8000460:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000462:	46c0      	nop			@ (mov r8, r8)

08000464 <Send_cmd>:
 8000464:	b590      	push	{r4, r7, lr}
 8000466:	b087      	sub	sp, #28
 8000468:	af00      	add	r7, sp, #0
 800046a:	0004      	movs	r4, r0
 800046c:	0008      	movs	r0, r1
 800046e:	0011      	movs	r1, r2
 8000470:	1dfb      	adds	r3, r7, #7
 8000472:	1c22      	adds	r2, r4, #0
 8000474:	701a      	strb	r2, [r3, #0]
 8000476:	1dbb      	adds	r3, r7, #6
 8000478:	1c02      	adds	r2, r0, #0
 800047a:	701a      	strb	r2, [r3, #0]
 800047c:	1d7b      	adds	r3, r7, #5
 800047e:	1c0a      	adds	r2, r1, #0
 8000480:	701a      	strb	r2, [r3, #0]
 8000482:	1dfb      	adds	r3, r7, #7
 8000484:	781b      	ldrb	r3, [r3, #0]
 8000486:	b29a      	uxth	r2, r3
 8000488:	1dbb      	adds	r3, r7, #6
 800048a:	781b      	ldrb	r3, [r3, #0]
 800048c:	b29b      	uxth	r3, r3
 800048e:	18d3      	adds	r3, r2, r3
 8000490:	b29a      	uxth	r2, r3
 8000492:	1d7b      	adds	r3, r7, #5
 8000494:	781b      	ldrb	r3, [r3, #0]
 8000496:	b29b      	uxth	r3, r3
 8000498:	18d3      	adds	r3, r2, r3
 800049a:	b29a      	uxth	r2, r3
 800049c:	2016      	movs	r0, #22
 800049e:	183b      	adds	r3, r7, r0
 80004a0:	3206      	adds	r2, #6
 80004a2:	32ff      	adds	r2, #255	@ 0xff
 80004a4:	801a      	strh	r2, [r3, #0]
 80004a6:	183b      	adds	r3, r7, r0
 80004a8:	183a      	adds	r2, r7, r0
 80004aa:	8812      	ldrh	r2, [r2, #0]
 80004ac:	4252      	negs	r2, r2
 80004ae:	801a      	strh	r2, [r3, #0]
 80004b0:	210c      	movs	r1, #12
 80004b2:	187b      	adds	r3, r7, r1
 80004b4:	227e      	movs	r2, #126	@ 0x7e
 80004b6:	701a      	strb	r2, [r3, #0]
 80004b8:	187b      	adds	r3, r7, r1
 80004ba:	22ff      	movs	r2, #255	@ 0xff
 80004bc:	705a      	strb	r2, [r3, #1]
 80004be:	187b      	adds	r3, r7, r1
 80004c0:	2206      	movs	r2, #6
 80004c2:	709a      	strb	r2, [r3, #2]
 80004c4:	187b      	adds	r3, r7, r1
 80004c6:	1dfa      	adds	r2, r7, #7
 80004c8:	7812      	ldrb	r2, [r2, #0]
 80004ca:	70da      	strb	r2, [r3, #3]
 80004cc:	187b      	adds	r3, r7, r1
 80004ce:	2200      	movs	r2, #0
 80004d0:	711a      	strb	r2, [r3, #4]
 80004d2:	187b      	adds	r3, r7, r1
 80004d4:	1dba      	adds	r2, r7, #6
 80004d6:	7812      	ldrb	r2, [r2, #0]
 80004d8:	715a      	strb	r2, [r3, #5]
 80004da:	187b      	adds	r3, r7, r1
 80004dc:	1d7a      	adds	r2, r7, #5
 80004de:	7812      	ldrb	r2, [r2, #0]
 80004e0:	719a      	strb	r2, [r3, #6]
 80004e2:	183b      	adds	r3, r7, r0
 80004e4:	881b      	ldrh	r3, [r3, #0]
 80004e6:	0a1b      	lsrs	r3, r3, #8
 80004e8:	b29b      	uxth	r3, r3
 80004ea:	b2da      	uxtb	r2, r3
 80004ec:	187b      	adds	r3, r7, r1
 80004ee:	71da      	strb	r2, [r3, #7]
 80004f0:	183b      	adds	r3, r7, r0
 80004f2:	881b      	ldrh	r3, [r3, #0]
 80004f4:	b2da      	uxtb	r2, r3
 80004f6:	187b      	adds	r3, r7, r1
 80004f8:	721a      	strb	r2, [r3, #8]
 80004fa:	187b      	adds	r3, r7, r1
 80004fc:	22ef      	movs	r2, #239	@ 0xef
 80004fe:	725a      	strb	r2, [r3, #9]
 8000500:	2301      	movs	r3, #1
 8000502:	425b      	negs	r3, r3
 8000504:	1879      	adds	r1, r7, r1
 8000506:	4804      	ldr	r0, [pc, #16]	@ (8000518 <Send_cmd+0xb4>)
 8000508:	220a      	movs	r2, #10
 800050a:	f003 fc63 	bl	8003dd4 <HAL_UART_Transmit>
 800050e:	46c0      	nop			@ (mov r8, r8)
 8000510:	46bd      	mov	sp, r7
 8000512:	b007      	add	sp, #28
 8000514:	bd90      	pop	{r4, r7, pc}
 8000516:	46c0      	nop			@ (mov r8, r8)
 8000518:	20000234 	.word	0x20000234

0800051c <DF_Choose>:
 800051c:	b580      	push	{r7, lr}
 800051e:	b082      	sub	sp, #8
 8000520:	af00      	add	r7, sp, #0
 8000522:	0002      	movs	r2, r0
 8000524:	1dfb      	adds	r3, r7, #7
 8000526:	701a      	strb	r2, [r3, #0]
 8000528:	1dfb      	adds	r3, r7, #7
 800052a:	781b      	ldrb	r3, [r3, #0]
 800052c:	001a      	movs	r2, r3
 800052e:	2100      	movs	r1, #0
 8000530:	2003      	movs	r0, #3
 8000532:	f7ff ff97 	bl	8000464 <Send_cmd>
 8000536:	20c8      	movs	r0, #200	@ 0xc8
 8000538:	f001 fe7e 	bl	8002238 <HAL_Delay>
 800053c:	46c0      	nop			@ (mov r8, r8)
 800053e:	46bd      	mov	sp, r7
 8000540:	b002      	add	sp, #8
 8000542:	bd80      	pop	{r7, pc}

08000544 <DF_Init>:
 8000544:	b580      	push	{r7, lr}
 8000546:	b082      	sub	sp, #8
 8000548:	af00      	add	r7, sp, #0
 800054a:	0002      	movs	r2, r0
 800054c:	1dfb      	adds	r3, r7, #7
 800054e:	701a      	strb	r2, [r3, #0]
 8000550:	2202      	movs	r2, #2
 8000552:	2100      	movs	r1, #0
 8000554:	203f      	movs	r0, #63	@ 0x3f
 8000556:	f7ff ff85 	bl	8000464 <Send_cmd>
 800055a:	20c8      	movs	r0, #200	@ 0xc8
 800055c:	f001 fe6c 	bl	8002238 <HAL_Delay>
 8000560:	1dfb      	adds	r3, r7, #7
 8000562:	781b      	ldrb	r3, [r3, #0]
 8000564:	001a      	movs	r2, r3
 8000566:	2100      	movs	r1, #0
 8000568:	2006      	movs	r0, #6
 800056a:	f7ff ff7b 	bl	8000464 <Send_cmd>
 800056e:	23fa      	movs	r3, #250	@ 0xfa
 8000570:	005b      	lsls	r3, r3, #1
 8000572:	0018      	movs	r0, r3
 8000574:	f001 fe60 	bl	8002238 <HAL_Delay>
 8000578:	46c0      	nop			@ (mov r8, r8)
 800057a:	46bd      	mov	sp, r7
 800057c:	b002      	add	sp, #8
 800057e:	bd80      	pop	{r7, pc}

08000580 <DF_Pause>:
 8000580:	b580      	push	{r7, lr}
 8000582:	af00      	add	r7, sp, #0
 8000584:	2200      	movs	r2, #0
 8000586:	2100      	movs	r1, #0
 8000588:	200e      	movs	r0, #14
 800058a:	f7ff ff6b 	bl	8000464 <Send_cmd>
 800058e:	20c8      	movs	r0, #200	@ 0xc8
 8000590:	f001 fe52 	bl	8002238 <HAL_Delay>
 8000594:	46c0      	nop			@ (mov r8, r8)
 8000596:	46bd      	mov	sp, r7
 8000598:	bd80      	pop	{r7, pc}
	...

0800059c <GetPage>:
 800059c:	b580      	push	{r7, lr}
 800059e:	b084      	sub	sp, #16
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	6078      	str	r0, [r7, #4]
 80005a4:	2300      	movs	r3, #0
 80005a6:	60fb      	str	r3, [r7, #12]
 80005a8:	e01a      	b.n	80005e0 <GetPage+0x44>
 80005aa:	68fb      	ldr	r3, [r7, #12]
 80005ac:	4a10      	ldr	r2, [pc, #64]	@ (80005f0 <GetPage+0x54>)
 80005ae:	4694      	mov	ip, r2
 80005b0:	4463      	add	r3, ip
 80005b2:	029b      	lsls	r3, r3, #10
 80005b4:	687a      	ldr	r2, [r7, #4]
 80005b6:	429a      	cmp	r2, r3
 80005b8:	d20f      	bcs.n	80005da <GetPage+0x3e>
 80005ba:	68fb      	ldr	r3, [r7, #12]
 80005bc:	2280      	movs	r2, #128	@ 0x80
 80005be:	0292      	lsls	r2, r2, #10
 80005c0:	4694      	mov	ip, r2
 80005c2:	4463      	add	r3, ip
 80005c4:	029b      	lsls	r3, r3, #10
 80005c6:	687a      	ldr	r2, [r7, #4]
 80005c8:	429a      	cmp	r2, r3
 80005ca:	d306      	bcc.n	80005da <GetPage+0x3e>
 80005cc:	68fb      	ldr	r3, [r7, #12]
 80005ce:	2280      	movs	r2, #128	@ 0x80
 80005d0:	0292      	lsls	r2, r2, #10
 80005d2:	4694      	mov	ip, r2
 80005d4:	4463      	add	r3, ip
 80005d6:	029b      	lsls	r3, r3, #10
 80005d8:	e006      	b.n	80005e8 <GetPage+0x4c>
 80005da:	68fb      	ldr	r3, [r7, #12]
 80005dc:	3301      	adds	r3, #1
 80005de:	60fb      	str	r3, [r7, #12]
 80005e0:	68fb      	ldr	r3, [r7, #12]
 80005e2:	2b7f      	cmp	r3, #127	@ 0x7f
 80005e4:	dde1      	ble.n	80005aa <GetPage+0xe>
 80005e6:	2300      	movs	r3, #0
 80005e8:	0018      	movs	r0, r3
 80005ea:	46bd      	mov	sp, r7
 80005ec:	b004      	add	sp, #16
 80005ee:	bd80      	pop	{r7, pc}
 80005f0:	00020001 	.word	0x00020001

080005f4 <Flash_Write_Data>:
 80005f4:	b5b0      	push	{r4, r5, r7, lr}
 80005f6:	b08a      	sub	sp, #40	@ 0x28
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	60f8      	str	r0, [r7, #12]
 80005fc:	60b9      	str	r1, [r7, #8]
 80005fe:	1dbb      	adds	r3, r7, #6
 8000600:	801a      	strh	r2, [r3, #0]
 8000602:	2300      	movs	r3, #0
 8000604:	627b      	str	r3, [r7, #36]	@ 0x24
 8000606:	f001 ffaf 	bl	8002568 <HAL_FLASH_Unlock>
 800060a:	68fb      	ldr	r3, [r7, #12]
 800060c:	0018      	movs	r0, r3
 800060e:	f7ff ffc5 	bl	800059c <GetPage>
 8000612:	0003      	movs	r3, r0
 8000614:	623b      	str	r3, [r7, #32]
 8000616:	1dbb      	adds	r3, r7, #6
 8000618:	881b      	ldrh	r3, [r3, #0]
 800061a:	009b      	lsls	r3, r3, #2
 800061c:	001a      	movs	r2, r3
 800061e:	68fb      	ldr	r3, [r7, #12]
 8000620:	189b      	adds	r3, r3, r2
 8000622:	61fb      	str	r3, [r7, #28]
 8000624:	69fb      	ldr	r3, [r7, #28]
 8000626:	0018      	movs	r0, r3
 8000628:	f7ff ffb8 	bl	800059c <GetPage>
 800062c:	0003      	movs	r3, r0
 800062e:	61bb      	str	r3, [r7, #24]
 8000630:	4b20      	ldr	r3, [pc, #128]	@ (80006b4 <Flash_Write_Data+0xc0>)
 8000632:	2200      	movs	r2, #0
 8000634:	601a      	str	r2, [r3, #0]
 8000636:	4b1f      	ldr	r3, [pc, #124]	@ (80006b4 <Flash_Write_Data+0xc0>)
 8000638:	6a3a      	ldr	r2, [r7, #32]
 800063a:	605a      	str	r2, [r3, #4]
 800063c:	69ba      	ldr	r2, [r7, #24]
 800063e:	6a3b      	ldr	r3, [r7, #32]
 8000640:	1ad3      	subs	r3, r2, r3
 8000642:	0a9b      	lsrs	r3, r3, #10
 8000644:	1c5a      	adds	r2, r3, #1
 8000646:	4b1b      	ldr	r3, [pc, #108]	@ (80006b4 <Flash_Write_Data+0xc0>)
 8000648:	609a      	str	r2, [r3, #8]
 800064a:	2314      	movs	r3, #20
 800064c:	18fa      	adds	r2, r7, r3
 800064e:	4b19      	ldr	r3, [pc, #100]	@ (80006b4 <Flash_Write_Data+0xc0>)
 8000650:	0011      	movs	r1, r2
 8000652:	0018      	movs	r0, r3
 8000654:	f002 f852 	bl	80026fc <HAL_FLASHEx_Erase>
 8000658:	1e03      	subs	r3, r0, #0
 800065a:	d01e      	beq.n	800069a <Flash_Write_Data+0xa6>
 800065c:	f001 ffb8 	bl	80025d0 <HAL_FLASH_GetError>
 8000660:	0003      	movs	r3, r0
 8000662:	e022      	b.n	80006aa <Flash_Write_Data+0xb6>
 8000664:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000666:	009b      	lsls	r3, r3, #2
 8000668:	68ba      	ldr	r2, [r7, #8]
 800066a:	18d3      	adds	r3, r2, r3
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	001c      	movs	r4, r3
 8000670:	2300      	movs	r3, #0
 8000672:	001d      	movs	r5, r3
 8000674:	68f9      	ldr	r1, [r7, #12]
 8000676:	0022      	movs	r2, r4
 8000678:	002b      	movs	r3, r5
 800067a:	2002      	movs	r0, #2
 800067c:	f001 fede 	bl	800243c <HAL_FLASH_Program>
 8000680:	1e03      	subs	r3, r0, #0
 8000682:	d106      	bne.n	8000692 <Flash_Write_Data+0x9e>
 8000684:	68fb      	ldr	r3, [r7, #12]
 8000686:	3304      	adds	r3, #4
 8000688:	60fb      	str	r3, [r7, #12]
 800068a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800068c:	3301      	adds	r3, #1
 800068e:	627b      	str	r3, [r7, #36]	@ 0x24
 8000690:	e003      	b.n	800069a <Flash_Write_Data+0xa6>
 8000692:	f001 ff9d 	bl	80025d0 <HAL_FLASH_GetError>
 8000696:	0003      	movs	r3, r0
 8000698:	e007      	b.n	80006aa <Flash_Write_Data+0xb6>
 800069a:	1dbb      	adds	r3, r7, #6
 800069c:	881b      	ldrh	r3, [r3, #0]
 800069e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80006a0:	429a      	cmp	r2, r3
 80006a2:	dbdf      	blt.n	8000664 <Flash_Write_Data+0x70>
 80006a4:	f001 ff86 	bl	80025b4 <HAL_FLASH_Lock>
 80006a8:	2300      	movs	r3, #0
 80006aa:	0018      	movs	r0, r3
 80006ac:	46bd      	mov	sp, r7
 80006ae:	b00a      	add	sp, #40	@ 0x28
 80006b0:	bdb0      	pop	{r4, r5, r7, pc}
 80006b2:	46c0      	nop			@ (mov r8, r8)
 80006b4:	2000009c 	.word	0x2000009c

080006b8 <Flash_Read_Data>:
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b084      	sub	sp, #16
 80006bc:	af00      	add	r7, sp, #0
 80006be:	60f8      	str	r0, [r7, #12]
 80006c0:	60b9      	str	r1, [r7, #8]
 80006c2:	1dbb      	adds	r3, r7, #6
 80006c4:	801a      	strh	r2, [r3, #0]
 80006c6:	68fb      	ldr	r3, [r7, #12]
 80006c8:	681a      	ldr	r2, [r3, #0]
 80006ca:	68bb      	ldr	r3, [r7, #8]
 80006cc:	601a      	str	r2, [r3, #0]
 80006ce:	68fb      	ldr	r3, [r7, #12]
 80006d0:	3304      	adds	r3, #4
 80006d2:	60fb      	str	r3, [r7, #12]
 80006d4:	68bb      	ldr	r3, [r7, #8]
 80006d6:	3304      	adds	r3, #4
 80006d8:	60bb      	str	r3, [r7, #8]
 80006da:	1dbb      	adds	r3, r7, #6
 80006dc:	881b      	ldrh	r3, [r3, #0]
 80006de:	1dba      	adds	r2, r7, #6
 80006e0:	1e59      	subs	r1, r3, #1
 80006e2:	8011      	strh	r1, [r2, #0]
 80006e4:	2b00      	cmp	r3, #0
 80006e6:	d000      	beq.n	80006ea <Flash_Read_Data+0x32>
 80006e8:	e7ed      	b.n	80006c6 <Flash_Read_Data+0xe>
 80006ea:	46c0      	nop			@ (mov r8, r8)
 80006ec:	46c0      	nop			@ (mov r8, r8)
 80006ee:	46bd      	mov	sp, r7
 80006f0:	b004      	add	sp, #16
 80006f2:	bd80      	pop	{r7, pc}

080006f4 <ask_init>:
#include <string.h>

  
//###########################################################################################################
void ask_init(ask_t *rf, GPIO_TypeDef  *gpio, uint16_t  pin)
{
 80006f4:	b580      	push	{r7, lr}
 80006f6:	b084      	sub	sp, #16
 80006f8:	af00      	add	r7, sp, #0
 80006fa:	60f8      	str	r0, [r7, #12]
 80006fc:	60b9      	str	r1, [r7, #8]
 80006fe:	1dbb      	adds	r3, r7, #6
 8000700:	801a      	strh	r2, [r3, #0]
  if (rf == NULL)
 8000702:	68fb      	ldr	r3, [r7, #12]
 8000704:	2b00      	cmp	r3, #0
 8000706:	d01a      	beq.n	800073e <ask_init+0x4a>
    return;
  memset(rf, 0, sizeof(ask_t));
 8000708:	68fb      	ldr	r3, [r7, #12]
 800070a:	2254      	movs	r2, #84	@ 0x54
 800070c:	2100      	movs	r1, #0
 800070e:	0018      	movs	r0, r3
 8000710:	f004 f8fc 	bl	800490c <memset>
  rf->gpio = gpio;
 8000714:	68fb      	ldr	r3, [r7, #12]
 8000716:	68ba      	ldr	r2, [r7, #8]
 8000718:	601a      	str	r2, [r3, #0]
  rf->pin = pin; 
 800071a:	68fb      	ldr	r3, [r7, #12]
 800071c:	1dba      	adds	r2, r7, #6
 800071e:	8812      	ldrh	r2, [r2, #0]
 8000720:	809a      	strh	r2, [r3, #4]
  _ASK_TIM.Instance->ARR = 0xFFFF;
 8000722:	4b09      	ldr	r3, [pc, #36]	@ (8000748 <ask_init+0x54>)
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	4a09      	ldr	r2, [pc, #36]	@ (800074c <ask_init+0x58>)
 8000728:	62da      	str	r2, [r3, #44]	@ 0x2c
  rf->lastPinChangeTimeMs = HAL_GetTick(); 
 800072a:	f001 fd7b 	bl	8002224 <HAL_GetTick>
 800072e:	0002      	movs	r2, r0
 8000730:	68fb      	ldr	r3, [r7, #12]
 8000732:	609a      	str	r2, [r3, #8]
  HAL_TIM_Base_Start(&_ASK_TIM);  
 8000734:	4b04      	ldr	r3, [pc, #16]	@ (8000748 <ask_init+0x54>)
 8000736:	0018      	movs	r0, r3
 8000738:	f002 ff00 	bl	800353c <HAL_TIM_Base_Start>
 800073c:	e000      	b.n	8000740 <ask_init+0x4c>
    return;
 800073e:	46c0      	nop			@ (mov r8, r8)
}
 8000740:	46bd      	mov	sp, r7
 8000742:	b004      	add	sp, #16
 8000744:	bd80      	pop	{r7, pc}
 8000746:	46c0      	nop			@ (mov r8, r8)
 8000748:	2000015c 	.word	0x2000015c
 800074c:	0000ffff 	.word	0x0000ffff

08000750 <ask_callBackPinChange>:
//###########################################################################################################
void ask_callBackPinChange(ask_t *rf)
{
 8000750:	b580      	push	{r7, lr}
 8000752:	b082      	sub	sp, #8
 8000754:	af00      	add	r7, sp, #0
 8000756:	6078      	str	r0, [r7, #4]
  if (rf == NULL)
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d100      	bne.n	8000760 <ask_callBackPinChange+0x10>
 800075e:	e073      	b.n	8000848 <ask_callBackPinChange+0xf8>
    return;
  if ((rf->newFrame == 1) && (rf->endFrame == 0))
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	7b9b      	ldrb	r3, [r3, #14]
 8000764:	2b01      	cmp	r3, #1
 8000766:	d13d      	bne.n	80007e4 <ask_callBackPinChange+0x94>
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	7bdb      	ldrb	r3, [r3, #15]
 800076c:	2b00      	cmp	r3, #0
 800076e:	d139      	bne.n	80007e4 <ask_callBackPinChange+0x94>
  {
    rf->dataRaw[rf->index] = _ASK_TIM.Instance->CNT - rf->lastCNT;
 8000770:	4b37      	ldr	r3, [pc, #220]	@ (8000850 <ask_callBackPinChange+0x100>)
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000776:	b2da      	uxtb	r2, r3
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	899b      	ldrh	r3, [r3, #12]
 800077c:	b2db      	uxtb	r3, r3
 800077e:	6879      	ldr	r1, [r7, #4]
 8000780:	7c09      	ldrb	r1, [r1, #16]
 8000782:	1ad3      	subs	r3, r2, r3
 8000784:	b2da      	uxtb	r2, r3
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	185b      	adds	r3, r3, r1
 800078a:	751a      	strb	r2, [r3, #20]
    if (rf->index < _ASK_EDGE)
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	7c1b      	ldrb	r3, [r3, #16]
 8000790:	2b31      	cmp	r3, #49	@ 0x31
 8000792:	d805      	bhi.n	80007a0 <ask_callBackPinChange+0x50>
      rf->index++;
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	7c1b      	ldrb	r3, [r3, #16]
 8000798:	3301      	adds	r3, #1
 800079a:	b2da      	uxtb	r2, r3
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	741a      	strb	r2, [r3, #16]
    if ((HAL_GetTick() - rf->lastPinChangeTimeMs > _ASK_MINIMUM_STAY_IN_LOW_STATE_TO_DETECT_NEW_FRAME_IN_MS)\
 80007a0:	f001 fd40 	bl	8002224 <HAL_GetTick>
 80007a4:	0002      	movs	r2, r0
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	689b      	ldr	r3, [r3, #8]
 80007aa:	1ad3      	subs	r3, r2, r3
 80007ac:	2b05      	cmp	r3, #5
 80007ae:	d93e      	bls.n	800082e <ask_callBackPinChange+0xde>
      && (HAL_GPIO_ReadPin(rf->gpio, rf->pin) == GPIO_PIN_SET))
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	681a      	ldr	r2, [r3, #0]
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	889b      	ldrh	r3, [r3, #4]
 80007b8:	0019      	movs	r1, r3
 80007ba:	0010      	movs	r0, r2
 80007bc:	f002 f9ba 	bl	8002b34 <HAL_GPIO_ReadPin>
 80007c0:	0003      	movs	r3, r0
 80007c2:	2b01      	cmp	r3, #1
 80007c4:	d133      	bne.n	800082e <ask_callBackPinChange+0xde>
    {
      rf->endFrame = 1;
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	2201      	movs	r2, #1
 80007ca:	73da      	strb	r2, [r3, #15]
      rf->dataRawEnd = _ASK_TIM.Instance->CNT - rf->lastCNT;
 80007cc:	4b20      	ldr	r3, [pc, #128]	@ (8000850 <ask_callBackPinChange+0x100>)
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80007d2:	b29a      	uxth	r2, r3
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	899b      	ldrh	r3, [r3, #12]
 80007d8:	1ad3      	subs	r3, r2, r3
 80007da:	b299      	uxth	r1, r3
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	2246      	movs	r2, #70	@ 0x46
 80007e0:	5299      	strh	r1, [r3, r2]
    if ((HAL_GetTick() - rf->lastPinChangeTimeMs > _ASK_MINIMUM_STAY_IN_LOW_STATE_TO_DETECT_NEW_FRAME_IN_MS)\
 80007e2:	e024      	b.n	800082e <ask_callBackPinChange+0xde>
    }
  }
  else if ((rf->newFrame == 0) && (HAL_GetTick() - rf->lastPinChangeTimeMs > _ASK_MINIMUM_STAY_IN_LOW_STATE_TO_DETECT_NEW_FRAME_IN_MS)\
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	7b9b      	ldrb	r3, [r3, #14]
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	d121      	bne.n	8000830 <ask_callBackPinChange+0xe0>
 80007ec:	f001 fd1a 	bl	8002224 <HAL_GetTick>
 80007f0:	0002      	movs	r2, r0
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	689b      	ldr	r3, [r3, #8]
 80007f6:	1ad3      	subs	r3, r2, r3
 80007f8:	2b05      	cmp	r3, #5
 80007fa:	d919      	bls.n	8000830 <ask_callBackPinChange+0xe0>
    && (HAL_GPIO_ReadPin(rf->gpio, rf->pin) == GPIO_PIN_SET))
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	681a      	ldr	r2, [r3, #0]
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	889b      	ldrh	r3, [r3, #4]
 8000804:	0019      	movs	r1, r3
 8000806:	0010      	movs	r0, r2
 8000808:	f002 f994 	bl	8002b34 <HAL_GPIO_ReadPin>
 800080c:	0003      	movs	r3, r0
 800080e:	2b01      	cmp	r3, #1
 8000810:	d10e      	bne.n	8000830 <ask_callBackPinChange+0xe0>
  {
    rf->newFrame = 1;
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	2201      	movs	r2, #1
 8000816:	739a      	strb	r2, [r3, #14]
    rf->dataRawStart = _ASK_TIM.Instance->CNT - rf->lastCNT;
 8000818:	4b0d      	ldr	r3, [pc, #52]	@ (8000850 <ask_callBackPinChange+0x100>)
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800081e:	b29a      	uxth	r2, r3
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	899b      	ldrh	r3, [r3, #12]
 8000824:	1ad3      	subs	r3, r2, r3
 8000826:	b29a      	uxth	r2, r3
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	825a      	strh	r2, [r3, #18]
 800082c:	e000      	b.n	8000830 <ask_callBackPinChange+0xe0>
    if ((HAL_GetTick() - rf->lastPinChangeTimeMs > _ASK_MINIMUM_STAY_IN_LOW_STATE_TO_DETECT_NEW_FRAME_IN_MS)\
 800082e:	46c0      	nop			@ (mov r8, r8)
  }
  rf->lastCNT = _ASK_TIM.Instance->CNT;
 8000830:	4b07      	ldr	r3, [pc, #28]	@ (8000850 <ask_callBackPinChange+0x100>)
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000836:	b29a      	uxth	r2, r3
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	819a      	strh	r2, [r3, #12]
  rf->lastPinChangeTimeMs = HAL_GetTick();
 800083c:	f001 fcf2 	bl	8002224 <HAL_GetTick>
 8000840:	0002      	movs	r2, r0
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	609a      	str	r2, [r3, #8]
 8000846:	e000      	b.n	800084a <ask_callBackPinChange+0xfa>
    return;
 8000848:	46c0      	nop			@ (mov r8, r8)
}
 800084a:	46bd      	mov	sp, r7
 800084c:	b002      	add	sp, #8
 800084e:	bd80      	pop	{r7, pc}
 8000850:	2000015c 	.word	0x2000015c

08000854 <ask_loop>:
//###########################################################################################################
void ask_loop(ask_t *rf)
{
 8000854:	b590      	push	{r4, r7, lr}
 8000856:	b085      	sub	sp, #20
 8000858:	af00      	add	r7, sp, #0
 800085a:	6078      	str	r0, [r7, #4]
  if (rf == NULL)
 800085c:	687b      	ldr	r3, [r7, #4]
 800085e:	2b00      	cmp	r3, #0
 8000860:	d100      	bne.n	8000864 <ask_loop+0x10>
 8000862:	e181      	b.n	8000b68 <ask_loop+0x314>
    return;
  if ((rf->newFrame == 1) && (rf->endFrame == 0) && (HAL_GetTick() - rf->lastPinChangeTimeMs > _ASK_TIMEOUT_TO_DETECT_NEW_FRAME_IN_MS))
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	7b9b      	ldrb	r3, [r3, #14]
 8000868:	2b01      	cmp	r3, #1
 800086a:	d115      	bne.n	8000898 <ask_loop+0x44>
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	7bdb      	ldrb	r3, [r3, #15]
 8000870:	2b00      	cmp	r3, #0
 8000872:	d111      	bne.n	8000898 <ask_loop+0x44>
 8000874:	f001 fcd6 	bl	8002224 <HAL_GetTick>
 8000878:	0002      	movs	r2, r0
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	689b      	ldr	r3, [r3, #8]
 800087e:	1ad3      	subs	r3, r2, r3
 8000880:	2b32      	cmp	r3, #50	@ 0x32
 8000882:	d909      	bls.n	8000898 <ask_loop+0x44>
  {
    rf->index = 0;
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	2200      	movs	r2, #0
 8000888:	741a      	strb	r2, [r3, #16]
    rf->newFrame = 0;
 800088a:	687b      	ldr	r3, [r7, #4]
 800088c:	2200      	movs	r2, #0
 800088e:	739a      	strb	r2, [r3, #14]
    rf->endFrame = 0;      
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	2200      	movs	r2, #0
 8000894:	73da      	strb	r2, [r3, #15]
 8000896:	e168      	b.n	8000b6a <ask_loop+0x316>
  }
  else if (rf->endFrame == 1)
 8000898:	687b      	ldr	r3, [r7, #4]
 800089a:	7bdb      	ldrb	r3, [r3, #15]
 800089c:	2b01      	cmp	r3, #1
 800089e:	d000      	beq.n	80008a2 <ask_loop+0x4e>
 80008a0:	e163      	b.n	8000b6a <ask_loop+0x316>
  {
    // +++ decode
    do
    {
      if ((rf->dataRawStart < (rf->dataRawEnd - rf->dataRawEnd * _ASK_TOLERANCE_IN_PERCENT / 100))\
 80008a2:	687b      	ldr	r3, [r7, #4]
 80008a4:	8a5b      	ldrh	r3, [r3, #18]
 80008a6:	0019      	movs	r1, r3
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	2246      	movs	r2, #70	@ 0x46
 80008ac:	5a9b      	ldrh	r3, [r3, r2]
 80008ae:	0018      	movs	r0, r3
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	2246      	movs	r2, #70	@ 0x46
 80008b4:	5a9b      	ldrh	r3, [r3, r2]
 80008b6:	2b00      	cmp	r3, #0
 80008b8:	da00      	bge.n	80008bc <ask_loop+0x68>
 80008ba:	3303      	adds	r3, #3
 80008bc:	109b      	asrs	r3, r3, #2
 80008be:	425b      	negs	r3, r3
 80008c0:	18c3      	adds	r3, r0, r3
 80008c2:	4299      	cmp	r1, r3
 80008c4:	da00      	bge.n	80008c8 <ask_loop+0x74>
 80008c6:	e145      	b.n	8000b54 <ask_loop+0x300>
        || (rf->dataRawStart > (rf->dataRawEnd + rf->dataRawEnd * _ASK_TOLERANCE_IN_PERCENT / 100)))
 80008c8:	687b      	ldr	r3, [r7, #4]
 80008ca:	8a5b      	ldrh	r3, [r3, #18]
 80008cc:	0019      	movs	r1, r3
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	2246      	movs	r2, #70	@ 0x46
 80008d2:	5a9b      	ldrh	r3, [r3, r2]
 80008d4:	0018      	movs	r0, r3
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	2246      	movs	r2, #70	@ 0x46
 80008da:	5a9b      	ldrh	r3, [r3, r2]
 80008dc:	2b00      	cmp	r3, #0
 80008de:	da00      	bge.n	80008e2 <ask_loop+0x8e>
 80008e0:	3303      	adds	r3, #3
 80008e2:	109b      	asrs	r3, r3, #2
 80008e4:	18c3      	adds	r3, r0, r3
 80008e6:	4299      	cmp	r1, r3
 80008e8:	dd00      	ble.n	80008ec <ask_loop+0x98>
 80008ea:	e133      	b.n	8000b54 <ask_loop+0x300>
        break;
      uint8_t signalSum = rf->dataRawStart / 8;
 80008ec:	687b      	ldr	r3, [r7, #4]
 80008ee:	8a5b      	ldrh	r3, [r3, #18]
 80008f0:	08db      	lsrs	r3, r3, #3
 80008f2:	b29a      	uxth	r2, r3
 80008f4:	240c      	movs	r4, #12
 80008f6:	193b      	adds	r3, r7, r4
 80008f8:	701a      	strb	r2, [r3, #0]
      uint8_t signalH = signalSum * 75 / 100;
 80008fa:	193b      	adds	r3, r7, r4
 80008fc:	781a      	ldrb	r2, [r3, #0]
 80008fe:	0013      	movs	r3, r2
 8000900:	009b      	lsls	r3, r3, #2
 8000902:	189b      	adds	r3, r3, r2
 8000904:	011a      	lsls	r2, r3, #4
 8000906:	1ad3      	subs	r3, r2, r3
 8000908:	2164      	movs	r1, #100	@ 0x64
 800090a:	0018      	movs	r0, r3
 800090c:	f7ff fc90 	bl	8000230 <__divsi3>
 8000910:	0003      	movs	r3, r0
 8000912:	001a      	movs	r2, r3
 8000914:	230b      	movs	r3, #11
 8000916:	18fb      	adds	r3, r7, r3
 8000918:	701a      	strb	r2, [r3, #0]
      uint8_t signalL = signalSum * 25 / 100;
 800091a:	193b      	adds	r3, r7, r4
 800091c:	781b      	ldrb	r3, [r3, #0]
 800091e:	2b00      	cmp	r3, #0
 8000920:	da00      	bge.n	8000924 <ask_loop+0xd0>
 8000922:	3303      	adds	r3, #3
 8000924:	109b      	asrs	r3, r3, #2
 8000926:	001a      	movs	r2, r3
 8000928:	230a      	movs	r3, #10
 800092a:	18fb      	adds	r3, r7, r3
 800092c:	701a      	strb	r2, [r3, #0]
      int8_t bit = 7,byte = 0;
 800092e:	230f      	movs	r3, #15
 8000930:	18fb      	adds	r3, r7, r3
 8000932:	2207      	movs	r2, #7
 8000934:	701a      	strb	r2, [r3, #0]
 8000936:	230e      	movs	r3, #14
 8000938:	18fb      	adds	r3, r7, r3
 800093a:	2200      	movs	r2, #0
 800093c:	701a      	strb	r2, [r3, #0]
      memset(rf->data,0,sizeof(rf->data));
 800093e:	687b      	ldr	r3, [r7, #4]
 8000940:	3348      	adds	r3, #72	@ 0x48
 8000942:	2203      	movs	r2, #3
 8000944:	2100      	movs	r1, #0
 8000946:	0018      	movs	r0, r3
 8000948:	f003 ffe0 	bl	800490c <memset>
      rf->dataLen = 0;
 800094c:	687b      	ldr	r3, [r7, #4]
 800094e:	224e      	movs	r2, #78	@ 0x4e
 8000950:	2100      	movs	r1, #0
 8000952:	5499      	strb	r1, [r3, r2]
      for (uint8_t i=0; i<rf->index ; i+=2)
 8000954:	230d      	movs	r3, #13
 8000956:	18fb      	adds	r3, r7, r3
 8000958:	2200      	movs	r2, #0
 800095a:	701a      	strb	r2, [r3, #0]
 800095c:	e0de      	b.n	8000b1c <ask_loop+0x2c8>
      {
        if ((rf->dataRaw[i] >= (signalH - signalH * _ASK_TOLERANCE_IN_PERCENT / 100))\
 800095e:	230d      	movs	r3, #13
 8000960:	18fb      	adds	r3, r7, r3
 8000962:	781b      	ldrb	r3, [r3, #0]
 8000964:	687a      	ldr	r2, [r7, #4]
 8000966:	18d3      	adds	r3, r2, r3
 8000968:	7d1b      	ldrb	r3, [r3, #20]
 800096a:	0019      	movs	r1, r3
 800096c:	200b      	movs	r0, #11
 800096e:	183b      	adds	r3, r7, r0
 8000970:	781a      	ldrb	r2, [r3, #0]
 8000972:	183b      	adds	r3, r7, r0
 8000974:	781b      	ldrb	r3, [r3, #0]
 8000976:	2b00      	cmp	r3, #0
 8000978:	da00      	bge.n	800097c <ask_loop+0x128>
 800097a:	3303      	adds	r3, #3
 800097c:	109b      	asrs	r3, r3, #2
 800097e:	425b      	negs	r3, r3
 8000980:	18d3      	adds	r3, r2, r3
 8000982:	4299      	cmp	r1, r3
 8000984:	db5a      	blt.n	8000a3c <ask_loop+0x1e8>
          && (rf->dataRaw[i] <= (signalH + signalH * _ASK_TOLERANCE_IN_PERCENT / 100))\
 8000986:	230d      	movs	r3, #13
 8000988:	18fb      	adds	r3, r7, r3
 800098a:	781b      	ldrb	r3, [r3, #0]
 800098c:	687a      	ldr	r2, [r7, #4]
 800098e:	18d3      	adds	r3, r2, r3
 8000990:	7d1b      	ldrb	r3, [r3, #20]
 8000992:	0019      	movs	r1, r3
 8000994:	200b      	movs	r0, #11
 8000996:	183b      	adds	r3, r7, r0
 8000998:	781a      	ldrb	r2, [r3, #0]
 800099a:	183b      	adds	r3, r7, r0
 800099c:	781b      	ldrb	r3, [r3, #0]
 800099e:	2b00      	cmp	r3, #0
 80009a0:	da00      	bge.n	80009a4 <ask_loop+0x150>
 80009a2:	3303      	adds	r3, #3
 80009a4:	109b      	asrs	r3, r3, #2
 80009a6:	18d3      	adds	r3, r2, r3
 80009a8:	4299      	cmp	r1, r3
 80009aa:	dc47      	bgt.n	8000a3c <ask_loop+0x1e8>
          && (rf->dataRaw[i+1] >= (signalL - signalL * _ASK_TOLERANCE_IN_PERCENT / 100))\
 80009ac:	230d      	movs	r3, #13
 80009ae:	18fb      	adds	r3, r7, r3
 80009b0:	781b      	ldrb	r3, [r3, #0]
 80009b2:	3301      	adds	r3, #1
 80009b4:	687a      	ldr	r2, [r7, #4]
 80009b6:	18d3      	adds	r3, r2, r3
 80009b8:	7d1b      	ldrb	r3, [r3, #20]
 80009ba:	0019      	movs	r1, r3
 80009bc:	200a      	movs	r0, #10
 80009be:	183b      	adds	r3, r7, r0
 80009c0:	781a      	ldrb	r2, [r3, #0]
 80009c2:	183b      	adds	r3, r7, r0
 80009c4:	781b      	ldrb	r3, [r3, #0]
 80009c6:	2b00      	cmp	r3, #0
 80009c8:	da00      	bge.n	80009cc <ask_loop+0x178>
 80009ca:	3303      	adds	r3, #3
 80009cc:	109b      	asrs	r3, r3, #2
 80009ce:	425b      	negs	r3, r3
 80009d0:	18d3      	adds	r3, r2, r3
 80009d2:	4299      	cmp	r1, r3
 80009d4:	db32      	blt.n	8000a3c <ask_loop+0x1e8>
          && (rf->dataRaw[i+1] <= (signalL + signalL * _ASK_TOLERANCE_IN_PERCENT / 100)))
 80009d6:	230d      	movs	r3, #13
 80009d8:	18fb      	adds	r3, r7, r3
 80009da:	781b      	ldrb	r3, [r3, #0]
 80009dc:	3301      	adds	r3, #1
 80009de:	687a      	ldr	r2, [r7, #4]
 80009e0:	18d3      	adds	r3, r2, r3
 80009e2:	7d1b      	ldrb	r3, [r3, #20]
 80009e4:	0019      	movs	r1, r3
 80009e6:	200a      	movs	r0, #10
 80009e8:	183b      	adds	r3, r7, r0
 80009ea:	781a      	ldrb	r2, [r3, #0]
 80009ec:	183b      	adds	r3, r7, r0
 80009ee:	781b      	ldrb	r3, [r3, #0]
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	da00      	bge.n	80009f6 <ask_loop+0x1a2>
 80009f4:	3303      	adds	r3, #3
 80009f6:	109b      	asrs	r3, r3, #2
 80009f8:	18d3      	adds	r3, r2, r3
 80009fa:	4299      	cmp	r1, r3
 80009fc:	dc1e      	bgt.n	8000a3c <ask_loop+0x1e8>
        {
          rf->data[byte] |= (1 << bit);          
 80009fe:	200e      	movs	r0, #14
 8000a00:	183b      	adds	r3, r7, r0
 8000a02:	781b      	ldrb	r3, [r3, #0]
 8000a04:	b25b      	sxtb	r3, r3
 8000a06:	687a      	ldr	r2, [r7, #4]
 8000a08:	2148      	movs	r1, #72	@ 0x48
 8000a0a:	18d3      	adds	r3, r2, r3
 8000a0c:	185b      	adds	r3, r3, r1
 8000a0e:	781b      	ldrb	r3, [r3, #0]
 8000a10:	b25a      	sxtb	r2, r3
 8000a12:	230f      	movs	r3, #15
 8000a14:	18fb      	adds	r3, r7, r3
 8000a16:	781b      	ldrb	r3, [r3, #0]
 8000a18:	b25b      	sxtb	r3, r3
 8000a1a:	2101      	movs	r1, #1
 8000a1c:	4099      	lsls	r1, r3
 8000a1e:	000b      	movs	r3, r1
 8000a20:	b25b      	sxtb	r3, r3
 8000a22:	4313      	orrs	r3, r2
 8000a24:	b25a      	sxtb	r2, r3
 8000a26:	183b      	adds	r3, r7, r0
 8000a28:	781b      	ldrb	r3, [r3, #0]
 8000a2a:	b25b      	sxtb	r3, r3
 8000a2c:	b2d0      	uxtb	r0, r2
 8000a2e:	687a      	ldr	r2, [r7, #4]
 8000a30:	2148      	movs	r1, #72	@ 0x48
 8000a32:	18d3      	adds	r3, r2, r3
 8000a34:	185b      	adds	r3, r3, r1
 8000a36:	1c02      	adds	r2, r0, #0
 8000a38:	701a      	strb	r2, [r3, #0]
 8000a3a:	e050      	b.n	8000ade <ask_loop+0x28a>
        }
        else if ((rf->dataRaw[i] >= (signalL - signalL * _ASK_TOLERANCE_IN_PERCENT / 100))\
 8000a3c:	230d      	movs	r3, #13
 8000a3e:	18fb      	adds	r3, r7, r3
 8000a40:	781b      	ldrb	r3, [r3, #0]
 8000a42:	687a      	ldr	r2, [r7, #4]
 8000a44:	18d3      	adds	r3, r2, r3
 8000a46:	7d1b      	ldrb	r3, [r3, #20]
 8000a48:	0019      	movs	r1, r3
 8000a4a:	200a      	movs	r0, #10
 8000a4c:	183b      	adds	r3, r7, r0
 8000a4e:	781a      	ldrb	r2, [r3, #0]
 8000a50:	183b      	adds	r3, r7, r0
 8000a52:	781b      	ldrb	r3, [r3, #0]
 8000a54:	2b00      	cmp	r3, #0
 8000a56:	da00      	bge.n	8000a5a <ask_loop+0x206>
 8000a58:	3303      	adds	r3, #3
 8000a5a:	109b      	asrs	r3, r3, #2
 8000a5c:	425b      	negs	r3, r3
 8000a5e:	18d3      	adds	r3, r2, r3
 8000a60:	4299      	cmp	r1, r3
 8000a62:	db63      	blt.n	8000b2c <ask_loop+0x2d8>
          && (rf->dataRaw[i] <= (signalL + signalL * _ASK_TOLERANCE_IN_PERCENT / 100))\
 8000a64:	230d      	movs	r3, #13
 8000a66:	18fb      	adds	r3, r7, r3
 8000a68:	781b      	ldrb	r3, [r3, #0]
 8000a6a:	687a      	ldr	r2, [r7, #4]
 8000a6c:	18d3      	adds	r3, r2, r3
 8000a6e:	7d1b      	ldrb	r3, [r3, #20]
 8000a70:	0019      	movs	r1, r3
 8000a72:	200a      	movs	r0, #10
 8000a74:	183b      	adds	r3, r7, r0
 8000a76:	781a      	ldrb	r2, [r3, #0]
 8000a78:	183b      	adds	r3, r7, r0
 8000a7a:	781b      	ldrb	r3, [r3, #0]
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	da00      	bge.n	8000a82 <ask_loop+0x22e>
 8000a80:	3303      	adds	r3, #3
 8000a82:	109b      	asrs	r3, r3, #2
 8000a84:	18d3      	adds	r3, r2, r3
 8000a86:	4299      	cmp	r1, r3
 8000a88:	dc50      	bgt.n	8000b2c <ask_loop+0x2d8>
          && (rf->dataRaw[i+1] >= (signalH - signalH * _ASK_TOLERANCE_IN_PERCENT / 100))\
 8000a8a:	230d      	movs	r3, #13
 8000a8c:	18fb      	adds	r3, r7, r3
 8000a8e:	781b      	ldrb	r3, [r3, #0]
 8000a90:	3301      	adds	r3, #1
 8000a92:	687a      	ldr	r2, [r7, #4]
 8000a94:	18d3      	adds	r3, r2, r3
 8000a96:	7d1b      	ldrb	r3, [r3, #20]
 8000a98:	0019      	movs	r1, r3
 8000a9a:	200b      	movs	r0, #11
 8000a9c:	183b      	adds	r3, r7, r0
 8000a9e:	781a      	ldrb	r2, [r3, #0]
 8000aa0:	183b      	adds	r3, r7, r0
 8000aa2:	781b      	ldrb	r3, [r3, #0]
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	da00      	bge.n	8000aaa <ask_loop+0x256>
 8000aa8:	3303      	adds	r3, #3
 8000aaa:	109b      	asrs	r3, r3, #2
 8000aac:	425b      	negs	r3, r3
 8000aae:	18d3      	adds	r3, r2, r3
 8000ab0:	4299      	cmp	r1, r3
 8000ab2:	db3b      	blt.n	8000b2c <ask_loop+0x2d8>
          && (rf->dataRaw[i+1] <= (signalH + signalH * _ASK_TOLERANCE_IN_PERCENT / 100)))
 8000ab4:	230d      	movs	r3, #13
 8000ab6:	18fb      	adds	r3, r7, r3
 8000ab8:	781b      	ldrb	r3, [r3, #0]
 8000aba:	3301      	adds	r3, #1
 8000abc:	687a      	ldr	r2, [r7, #4]
 8000abe:	18d3      	adds	r3, r2, r3
 8000ac0:	7d1b      	ldrb	r3, [r3, #20]
 8000ac2:	0019      	movs	r1, r3
 8000ac4:	200b      	movs	r0, #11
 8000ac6:	183b      	adds	r3, r7, r0
 8000ac8:	781a      	ldrb	r2, [r3, #0]
 8000aca:	183b      	adds	r3, r7, r0
 8000acc:	781b      	ldrb	r3, [r3, #0]
 8000ace:	2b00      	cmp	r3, #0
 8000ad0:	da00      	bge.n	8000ad4 <ask_loop+0x280>
 8000ad2:	3303      	adds	r3, #3
 8000ad4:	109b      	asrs	r3, r3, #2
 8000ad6:	18d3      	adds	r3, r2, r3
 8000ad8:	4299      	cmp	r1, r3
 8000ada:	dc27      	bgt.n	8000b2c <ask_loop+0x2d8>
        {
          __NOP();
 8000adc:	46c0      	nop			@ (mov r8, r8)
        }
        else
          break;        
        bit--;
 8000ade:	210f      	movs	r1, #15
 8000ae0:	187b      	adds	r3, r7, r1
 8000ae2:	781b      	ldrb	r3, [r3, #0]
 8000ae4:	b25b      	sxtb	r3, r3
 8000ae6:	b2db      	uxtb	r3, r3
 8000ae8:	3b01      	subs	r3, #1
 8000aea:	b2da      	uxtb	r2, r3
 8000aec:	187b      	adds	r3, r7, r1
 8000aee:	701a      	strb	r2, [r3, #0]
        if (bit < 0)
 8000af0:	187b      	adds	r3, r7, r1
 8000af2:	781b      	ldrb	r3, [r3, #0]
 8000af4:	2b7f      	cmp	r3, #127	@ 0x7f
 8000af6:	d90b      	bls.n	8000b10 <ask_loop+0x2bc>
        {
          byte++;
 8000af8:	200e      	movs	r0, #14
 8000afa:	183b      	adds	r3, r7, r0
 8000afc:	781b      	ldrb	r3, [r3, #0]
 8000afe:	b25b      	sxtb	r3, r3
 8000b00:	b2db      	uxtb	r3, r3
 8000b02:	3301      	adds	r3, #1
 8000b04:	b2da      	uxtb	r2, r3
 8000b06:	183b      	adds	r3, r7, r0
 8000b08:	701a      	strb	r2, [r3, #0]
          bit = 7;
 8000b0a:	187b      	adds	r3, r7, r1
 8000b0c:	2207      	movs	r2, #7
 8000b0e:	701a      	strb	r2, [r3, #0]
      for (uint8_t i=0; i<rf->index ; i+=2)
 8000b10:	220d      	movs	r2, #13
 8000b12:	18bb      	adds	r3, r7, r2
 8000b14:	18ba      	adds	r2, r7, r2
 8000b16:	7812      	ldrb	r2, [r2, #0]
 8000b18:	3202      	adds	r2, #2
 8000b1a:	701a      	strb	r2, [r3, #0]
 8000b1c:	687b      	ldr	r3, [r7, #4]
 8000b1e:	7c1b      	ldrb	r3, [r3, #16]
 8000b20:	220d      	movs	r2, #13
 8000b22:	18ba      	adds	r2, r7, r2
 8000b24:	7812      	ldrb	r2, [r2, #0]
 8000b26:	429a      	cmp	r2, r3
 8000b28:	d200      	bcs.n	8000b2c <ask_loop+0x2d8>
 8000b2a:	e718      	b.n	800095e <ask_loop+0x10a>
        }        
      }
      rf->dataLen = byte;
 8000b2c:	230e      	movs	r3, #14
 8000b2e:	18fb      	adds	r3, r7, r3
 8000b30:	7819      	ldrb	r1, [r3, #0]
 8000b32:	687b      	ldr	r3, [r7, #4]
 8000b34:	224e      	movs	r2, #78	@ 0x4e
 8000b36:	5499      	strb	r1, [r3, r2]
      if ((rf->dataLen >= _ASK_MIN_DATA_BYTE) && (rf->dataLen <= _ASK_MAX_DATA_BYTE)) 
 8000b38:	687b      	ldr	r3, [r7, #4]
 8000b3a:	224e      	movs	r2, #78	@ 0x4e
 8000b3c:	5c9b      	ldrb	r3, [r3, r2]
 8000b3e:	2b02      	cmp	r3, #2
 8000b40:	d908      	bls.n	8000b54 <ask_loop+0x300>
 8000b42:	687b      	ldr	r3, [r7, #4]
 8000b44:	224e      	movs	r2, #78	@ 0x4e
 8000b46:	5c9b      	ldrb	r3, [r3, r2]
 8000b48:	2b03      	cmp	r3, #3
 8000b4a:	d803      	bhi.n	8000b54 <ask_loop+0x300>
        rf->dataAvailable = 1;  
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	224f      	movs	r2, #79	@ 0x4f
 8000b50:	2101      	movs	r1, #1
 8000b52:	5499      	strb	r1, [r3, r2]
    }
    while (0);
    // --- decode
    rf->index = 0;
 8000b54:	687b      	ldr	r3, [r7, #4]
 8000b56:	2200      	movs	r2, #0
 8000b58:	741a      	strb	r2, [r3, #16]
    rf->newFrame = 0;
 8000b5a:	687b      	ldr	r3, [r7, #4]
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	739a      	strb	r2, [r3, #14]
    rf->endFrame = 0; 
 8000b60:	687b      	ldr	r3, [r7, #4]
 8000b62:	2200      	movs	r2, #0
 8000b64:	73da      	strb	r2, [r3, #15]
 8000b66:	e000      	b.n	8000b6a <ask_loop+0x316>
    return;
 8000b68:	46c0      	nop			@ (mov r8, r8)
  }
}
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	b005      	add	sp, #20
 8000b6e:	bd90      	pop	{r4, r7, pc}

08000b70 <ask_available>:
//###########################################################################################################
bool ask_available(ask_t *rf)
{
 8000b70:	b580      	push	{r7, lr}
 8000b72:	b082      	sub	sp, #8
 8000b74:	af00      	add	r7, sp, #0
 8000b76:	6078      	str	r0, [r7, #4]
  if (rf == NULL)
 8000b78:	687b      	ldr	r3, [r7, #4]
 8000b7a:	2b00      	cmp	r3, #0
 8000b7c:	d101      	bne.n	8000b82 <ask_available+0x12>
    return false;
 8000b7e:	2300      	movs	r3, #0
 8000b80:	e01c      	b.n	8000bbc <ask_available+0x4c>
  if (rf->dataAvailable == 1)
 8000b82:	687b      	ldr	r3, [r7, #4]
 8000b84:	224f      	movs	r2, #79	@ 0x4f
 8000b86:	5c9b      	ldrb	r3, [r3, r2]
 8000b88:	2b01      	cmp	r3, #1
 8000b8a:	d105      	bne.n	8000b98 <ask_available+0x28>
  {
    rf->dataAvailable = 0;
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	224f      	movs	r2, #79	@ 0x4f
 8000b90:	2100      	movs	r1, #0
 8000b92:	5499      	strb	r1, [r3, r2]
    return true;
 8000b94:	2301      	movs	r3, #1
 8000b96:	e011      	b.n	8000bbc <ask_available+0x4c>
  }
  else
  {
    if (HAL_GetTick() - rf->dataTime > _ASK_HOLD_LAST_FRAME_IN_MS)
 8000b98:	f001 fb44 	bl	8002224 <HAL_GetTick>
 8000b9c:	0002      	movs	r2, r0
 8000b9e:	687b      	ldr	r3, [r7, #4]
 8000ba0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8000ba2:	1ad2      	subs	r2, r2, r3
 8000ba4:	23fa      	movs	r3, #250	@ 0xfa
 8000ba6:	005b      	lsls	r3, r3, #1
 8000ba8:	429a      	cmp	r2, r3
 8000baa:	d906      	bls.n	8000bba <ask_available+0x4a>
      memset(rf->dataLast, 0, sizeof(rf->dataLast));        
 8000bac:	687b      	ldr	r3, [r7, #4]
 8000bae:	334b      	adds	r3, #75	@ 0x4b
 8000bb0:	2203      	movs	r2, #3
 8000bb2:	2100      	movs	r1, #0
 8000bb4:	0018      	movs	r0, r3
 8000bb6:	f003 fea9 	bl	800490c <memset>
    return false; 
 8000bba:	2300      	movs	r3, #0
  }
}
 8000bbc:	0018      	movs	r0, r3
 8000bbe:	46bd      	mov	sp, r7
 8000bc0:	b002      	add	sp, #8
 8000bc2:	bd80      	pop	{r7, pc}

08000bc4 <ask_read>:
//###########################################################################################################
bool ask_read(ask_t *rf, uint8_t *code, uint8_t *codeLenInByte, uint8_t *syncTime_us)
{
 8000bc4:	b580      	push	{r7, lr}
 8000bc6:	b086      	sub	sp, #24
 8000bc8:	af00      	add	r7, sp, #0
 8000bca:	60f8      	str	r0, [r7, #12]
 8000bcc:	60b9      	str	r1, [r7, #8]
 8000bce:	607a      	str	r2, [r7, #4]
 8000bd0:	603b      	str	r3, [r7, #0]
  if (rf == NULL)
 8000bd2:	68fb      	ldr	r3, [r7, #12]
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	d101      	bne.n	8000bdc <ask_read+0x18>
    return false;
 8000bd8:	2300      	movs	r3, #0
 8000bda:	e04c      	b.n	8000c76 <ask_read+0xb2>
  bool  isNew = false;
 8000bdc:	2317      	movs	r3, #23
 8000bde:	18fb      	adds	r3, r7, r3
 8000be0:	2200      	movs	r2, #0
 8000be2:	701a      	strb	r2, [r3, #0]
  if (code != NULL)
 8000be4:	68bb      	ldr	r3, [r7, #8]
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	d00a      	beq.n	8000c00 <ask_read+0x3c>
    memcpy(code, rf->data, rf->dataLen);
 8000bea:	68fb      	ldr	r3, [r7, #12]
 8000bec:	3348      	adds	r3, #72	@ 0x48
 8000bee:	0019      	movs	r1, r3
 8000bf0:	68fb      	ldr	r3, [r7, #12]
 8000bf2:	224e      	movs	r2, #78	@ 0x4e
 8000bf4:	5c9b      	ldrb	r3, [r3, r2]
 8000bf6:	001a      	movs	r2, r3
 8000bf8:	68bb      	ldr	r3, [r7, #8]
 8000bfa:	0018      	movs	r0, r3
 8000bfc:	f003 ff09 	bl	8004a12 <memcpy>
  if (codeLenInByte != NULL)
 8000c00:	687b      	ldr	r3, [r7, #4]
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	d004      	beq.n	8000c10 <ask_read+0x4c>
    *codeLenInByte = rf->dataLen;
 8000c06:	68fb      	ldr	r3, [r7, #12]
 8000c08:	224e      	movs	r2, #78	@ 0x4e
 8000c0a:	5c9a      	ldrb	r2, [r3, r2]
 8000c0c:	687b      	ldr	r3, [r7, #4]
 8000c0e:	701a      	strb	r2, [r3, #0]
  if (syncTime_us != NULL)
 8000c10:	683b      	ldr	r3, [r7, #0]
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d009      	beq.n	8000c2a <ask_read+0x66>
    *syncTime_us = rf->dataRawStart * 10;    
 8000c16:	68fb      	ldr	r3, [r7, #12]
 8000c18:	8a5b      	ldrh	r3, [r3, #18]
 8000c1a:	b2db      	uxtb	r3, r3
 8000c1c:	1c1a      	adds	r2, r3, #0
 8000c1e:	0092      	lsls	r2, r2, #2
 8000c20:	18d3      	adds	r3, r2, r3
 8000c22:	18db      	adds	r3, r3, r3
 8000c24:	b2da      	uxtb	r2, r3
 8000c26:	683b      	ldr	r3, [r7, #0]
 8000c28:	701a      	strb	r2, [r3, #0]
  if (memcmp(rf->dataLast, rf->data, rf->dataLen) != 0)
 8000c2a:	68fb      	ldr	r3, [r7, #12]
 8000c2c:	334b      	adds	r3, #75	@ 0x4b
 8000c2e:	0018      	movs	r0, r3
 8000c30:	68fb      	ldr	r3, [r7, #12]
 8000c32:	3348      	adds	r3, #72	@ 0x48
 8000c34:	0019      	movs	r1, r3
 8000c36:	68fb      	ldr	r3, [r7, #12]
 8000c38:	224e      	movs	r2, #78	@ 0x4e
 8000c3a:	5c9b      	ldrb	r3, [r3, r2]
 8000c3c:	001a      	movs	r2, r3
 8000c3e:	f003 fe57 	bl	80048f0 <memcmp>
 8000c42:	1e03      	subs	r3, r0, #0
 8000c44:	d003      	beq.n	8000c4e <ask_read+0x8a>
    isNew = true;
 8000c46:	2317      	movs	r3, #23
 8000c48:	18fb      	adds	r3, r7, r3
 8000c4a:	2201      	movs	r2, #1
 8000c4c:	701a      	strb	r2, [r3, #0]
  memcpy(rf->dataLast, rf->data, rf->dataLen);
 8000c4e:	68fb      	ldr	r3, [r7, #12]
 8000c50:	334b      	adds	r3, #75	@ 0x4b
 8000c52:	0018      	movs	r0, r3
 8000c54:	68fb      	ldr	r3, [r7, #12]
 8000c56:	3348      	adds	r3, #72	@ 0x48
 8000c58:	0019      	movs	r1, r3
 8000c5a:	68fb      	ldr	r3, [r7, #12]
 8000c5c:	224e      	movs	r2, #78	@ 0x4e
 8000c5e:	5c9b      	ldrb	r3, [r3, r2]
 8000c60:	001a      	movs	r2, r3
 8000c62:	f003 fed6 	bl	8004a12 <memcpy>
  rf->dataTime = HAL_GetTick();
 8000c66:	f001 fadd 	bl	8002224 <HAL_GetTick>
 8000c6a:	0002      	movs	r2, r0
 8000c6c:	68fb      	ldr	r3, [r7, #12]
 8000c6e:	651a      	str	r2, [r3, #80]	@ 0x50
  return isNew;
 8000c70:	2317      	movs	r3, #23
 8000c72:	18fb      	adds	r3, r7, r3
 8000c74:	781b      	ldrb	r3, [r3, #0]
}
 8000c76:	0018      	movs	r0, r3
 8000c78:	46bd      	mov	sp, r7
 8000c7a:	b006      	add	sp, #24
 8000c7c:	bd80      	pop	{r7, pc}
	...

08000c80 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000c80:	b590      	push	{r4, r7, lr}
 8000c82:	b08b      	sub	sp, #44	@ 0x2c
 8000c84:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c86:	2414      	movs	r4, #20
 8000c88:	193b      	adds	r3, r7, r4
 8000c8a:	0018      	movs	r0, r3
 8000c8c:	2314      	movs	r3, #20
 8000c8e:	001a      	movs	r2, r3
 8000c90:	2100      	movs	r1, #0
 8000c92:	f003 fe3b 	bl	800490c <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c96:	4b85      	ldr	r3, [pc, #532]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000c98:	695a      	ldr	r2, [r3, #20]
 8000c9a:	4b84      	ldr	r3, [pc, #528]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000c9c:	2180      	movs	r1, #128	@ 0x80
 8000c9e:	0309      	lsls	r1, r1, #12
 8000ca0:	430a      	orrs	r2, r1
 8000ca2:	615a      	str	r2, [r3, #20]
 8000ca4:	4b81      	ldr	r3, [pc, #516]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000ca6:	695a      	ldr	r2, [r3, #20]
 8000ca8:	2380      	movs	r3, #128	@ 0x80
 8000caa:	031b      	lsls	r3, r3, #12
 8000cac:	4013      	ands	r3, r2
 8000cae:	613b      	str	r3, [r7, #16]
 8000cb0:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000cb2:	4b7e      	ldr	r3, [pc, #504]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cb4:	695a      	ldr	r2, [r3, #20]
 8000cb6:	4b7d      	ldr	r3, [pc, #500]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cb8:	2180      	movs	r1, #128	@ 0x80
 8000cba:	03c9      	lsls	r1, r1, #15
 8000cbc:	430a      	orrs	r2, r1
 8000cbe:	615a      	str	r2, [r3, #20]
 8000cc0:	4b7a      	ldr	r3, [pc, #488]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cc2:	695a      	ldr	r2, [r3, #20]
 8000cc4:	2380      	movs	r3, #128	@ 0x80
 8000cc6:	03db      	lsls	r3, r3, #15
 8000cc8:	4013      	ands	r3, r2
 8000cca:	60fb      	str	r3, [r7, #12]
 8000ccc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cce:	4b77      	ldr	r3, [pc, #476]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cd0:	695a      	ldr	r2, [r3, #20]
 8000cd2:	4b76      	ldr	r3, [pc, #472]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cd4:	2180      	movs	r1, #128	@ 0x80
 8000cd6:	0289      	lsls	r1, r1, #10
 8000cd8:	430a      	orrs	r2, r1
 8000cda:	615a      	str	r2, [r3, #20]
 8000cdc:	4b73      	ldr	r3, [pc, #460]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cde:	695a      	ldr	r2, [r3, #20]
 8000ce0:	2380      	movs	r3, #128	@ 0x80
 8000ce2:	029b      	lsls	r3, r3, #10
 8000ce4:	4013      	ands	r3, r2
 8000ce6:	60bb      	str	r3, [r7, #8]
 8000ce8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000cea:	4b70      	ldr	r3, [pc, #448]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cec:	695a      	ldr	r2, [r3, #20]
 8000cee:	4b6f      	ldr	r3, [pc, #444]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cf0:	2180      	movs	r1, #128	@ 0x80
 8000cf2:	02c9      	lsls	r1, r1, #11
 8000cf4:	430a      	orrs	r2, r1
 8000cf6:	615a      	str	r2, [r3, #20]
 8000cf8:	4b6c      	ldr	r3, [pc, #432]	@ (8000eac <MX_GPIO_Init+0x22c>)
 8000cfa:	695a      	ldr	r2, [r3, #20]
 8000cfc:	2380      	movs	r3, #128	@ 0x80
 8000cfe:	02db      	lsls	r3, r3, #11
 8000d00:	4013      	ands	r3, r2
 8000d02:	607b      	str	r3, [r7, #4]
 8000d04:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, SER_Pin|LATCH_Pin|CLK_Pin, GPIO_PIN_RESET);
 8000d06:	23e0      	movs	r3, #224	@ 0xe0
 8000d08:	021b      	lsls	r3, r3, #8
 8000d0a:	4869      	ldr	r0, [pc, #420]	@ (8000eb0 <MX_GPIO_Init+0x230>)
 8000d0c:	2200      	movs	r2, #0
 8000d0e:	0019      	movs	r1, r3
 8000d10:	f001 ff2d 	bl	8002b6e <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(MR_GPIO_Port, MR_Pin, GPIO_PIN_RESET);
 8000d14:	4b67      	ldr	r3, [pc, #412]	@ (8000eb4 <MX_GPIO_Init+0x234>)
 8000d16:	2200      	movs	r2, #0
 8000d18:	2101      	movs	r1, #1
 8000d1a:	0018      	movs	r0, r3
 8000d1c:	f001 ff27 	bl	8002b6e <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Ext_IO1_Pin|MCU_LED_Pin|G_Pin|F_Pin, GPIO_PIN_RESET);
 8000d20:	23d8      	movs	r3, #216	@ 0xd8
 8000d22:	021b      	lsls	r3, r3, #8
 8000d24:	4864      	ldr	r0, [pc, #400]	@ (8000eb8 <MX_GPIO_Init+0x238>)
 8000d26:	2200      	movs	r2, #0
 8000d28:	0019      	movs	r1, r3
 8000d2a:	f001 ff20 	bl	8002b6e <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, E_Pin|D_Pin|C_Pin|B_Pin
 8000d2e:	23f8      	movs	r3, #248	@ 0xf8
 8000d30:	0159      	lsls	r1, r3, #5
 8000d32:	2390      	movs	r3, #144	@ 0x90
 8000d34:	05db      	lsls	r3, r3, #23
 8000d36:	2200      	movs	r2, #0
 8000d38:	0018      	movs	r0, r3
 8000d3a:	f001 ff18 	bl	8002b6e <HAL_GPIO_WritePin>
                          |A_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : PCPin PCPin PCPin */
  GPIO_InitStruct.Pin = SER_Pin|LATCH_Pin|CLK_Pin;
 8000d3e:	193b      	adds	r3, r7, r4
 8000d40:	22e0      	movs	r2, #224	@ 0xe0
 8000d42:	0212      	lsls	r2, r2, #8
 8000d44:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d46:	193b      	adds	r3, r7, r4
 8000d48:	2201      	movs	r2, #1
 8000d4a:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d4c:	193b      	adds	r3, r7, r4
 8000d4e:	2200      	movs	r2, #0
 8000d50:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d52:	193b      	adds	r3, r7, r4
 8000d54:	2200      	movs	r2, #0
 8000d56:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d58:	193b      	adds	r3, r7, r4
 8000d5a:	4a55      	ldr	r2, [pc, #340]	@ (8000eb0 <MX_GPIO_Init+0x230>)
 8000d5c:	0019      	movs	r1, r3
 8000d5e:	0010      	movs	r0, r2
 8000d60:	f001 fd78 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = MR_Pin;
 8000d64:	193b      	adds	r3, r7, r4
 8000d66:	2201      	movs	r2, #1
 8000d68:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d6a:	193b      	adds	r3, r7, r4
 8000d6c:	2201      	movs	r2, #1
 8000d6e:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d70:	193b      	adds	r3, r7, r4
 8000d72:	2200      	movs	r2, #0
 8000d74:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d76:	193b      	adds	r3, r7, r4
 8000d78:	2200      	movs	r2, #0
 8000d7a:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(MR_GPIO_Port, &GPIO_InitStruct);
 8000d7c:	193b      	adds	r3, r7, r4
 8000d7e:	4a4d      	ldr	r2, [pc, #308]	@ (8000eb4 <MX_GPIO_Init+0x234>)
 8000d80:	0019      	movs	r1, r3
 8000d82:	0010      	movs	r0, r2
 8000d84:	f001 fd66 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Ext_BTN_Pin;
 8000d88:	193b      	adds	r3, r7, r4
 8000d8a:	2202      	movs	r2, #2
 8000d8c:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d8e:	193b      	adds	r3, r7, r4
 8000d90:	2200      	movs	r2, #0
 8000d92:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d94:	193b      	adds	r3, r7, r4
 8000d96:	2201      	movs	r2, #1
 8000d98:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(Ext_BTN_GPIO_Port, &GPIO_InitStruct);
 8000d9a:	193b      	adds	r3, r7, r4
 8000d9c:	4a45      	ldr	r2, [pc, #276]	@ (8000eb4 <MX_GPIO_Init+0x234>)
 8000d9e:	0019      	movs	r1, r3
 8000da0:	0010      	movs	r0, r2
 8000da2:	f001 fd57 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = ASK_IN_SIG_Pin;
 8000da6:	193b      	adds	r3, r7, r4
 8000da8:	2202      	movs	r2, #2
 8000daa:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8000dac:	193b      	adds	r3, r7, r4
 8000dae:	22c4      	movs	r2, #196	@ 0xc4
 8000db0:	0392      	lsls	r2, r2, #14
 8000db2:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000db4:	193b      	adds	r3, r7, r4
 8000db6:	2200      	movs	r2, #0
 8000db8:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(ASK_IN_SIG_GPIO_Port, &GPIO_InitStruct);
 8000dba:	193a      	adds	r2, r7, r4
 8000dbc:	2390      	movs	r3, #144	@ 0x90
 8000dbe:	05db      	lsls	r3, r3, #23
 8000dc0:	0011      	movs	r1, r2
 8000dc2:	0018      	movs	r0, r3
 8000dc4:	f001 fd46 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Ext_IO4_Pin;
 8000dc8:	193b      	adds	r3, r7, r4
 8000dca:	2202      	movs	r2, #2
 8000dcc:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000dce:	193b      	adds	r3, r7, r4
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dd4:	193b      	adds	r3, r7, r4
 8000dd6:	2200      	movs	r2, #0
 8000dd8:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(Ext_IO4_GPIO_Port, &GPIO_InitStruct);
 8000dda:	193b      	adds	r3, r7, r4
 8000ddc:	4a36      	ldr	r2, [pc, #216]	@ (8000eb8 <MX_GPIO_Init+0x238>)
 8000dde:	0019      	movs	r1, r3
 8000de0:	0010      	movs	r0, r2
 8000de2:	f001 fd37 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Ext_IO3_Pin;
 8000de6:	0021      	movs	r1, r4
 8000de8:	187b      	adds	r3, r7, r1
 8000dea:	2204      	movs	r2, #4
 8000dec:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000dee:	187b      	adds	r3, r7, r1
 8000df0:	2284      	movs	r2, #132	@ 0x84
 8000df2:	0392      	lsls	r2, r2, #14
 8000df4:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000df6:	187b      	adds	r3, r7, r1
 8000df8:	2201      	movs	r2, #1
 8000dfa:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(Ext_IO3_GPIO_Port, &GPIO_InitStruct);
 8000dfc:	000c      	movs	r4, r1
 8000dfe:	187b      	adds	r3, r7, r1
 8000e00:	4a2d      	ldr	r2, [pc, #180]	@ (8000eb8 <MX_GPIO_Init+0x238>)
 8000e02:	0019      	movs	r1, r3
 8000e04:	0010      	movs	r0, r2
 8000e06:	f001 fd25 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin */
  GPIO_InitStruct.Pin = Ext_IO2_Pin|Coin_Reader_Pin;
 8000e0a:	0021      	movs	r1, r4
 8000e0c:	187b      	adds	r3, r7, r1
 8000e0e:	2290      	movs	r2, #144	@ 0x90
 8000e10:	0192      	lsls	r2, r2, #6
 8000e12:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e14:	000c      	movs	r4, r1
 8000e16:	193b      	adds	r3, r7, r4
 8000e18:	2200      	movs	r2, #0
 8000e1a:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e1c:	193b      	adds	r3, r7, r4
 8000e1e:	2201      	movs	r2, #1
 8000e20:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e22:	193b      	adds	r3, r7, r4
 8000e24:	4a24      	ldr	r2, [pc, #144]	@ (8000eb8 <MX_GPIO_Init+0x238>)
 8000e26:	0019      	movs	r1, r3
 8000e28:	0010      	movs	r0, r2
 8000e2a:	f001 fd13 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = Ext_IO1_Pin|MCU_LED_Pin|G_Pin|F_Pin;
 8000e2e:	0021      	movs	r1, r4
 8000e30:	187b      	adds	r3, r7, r1
 8000e32:	22d8      	movs	r2, #216	@ 0xd8
 8000e34:	0212      	lsls	r2, r2, #8
 8000e36:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e38:	000c      	movs	r4, r1
 8000e3a:	193b      	adds	r3, r7, r4
 8000e3c:	2201      	movs	r2, #1
 8000e3e:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e40:	193b      	adds	r3, r7, r4
 8000e42:	2200      	movs	r2, #0
 8000e44:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e46:	193b      	adds	r3, r7, r4
 8000e48:	2200      	movs	r2, #0
 8000e4a:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e4c:	193b      	adds	r3, r7, r4
 8000e4e:	4a1a      	ldr	r2, [pc, #104]	@ (8000eb8 <MX_GPIO_Init+0x238>)
 8000e50:	0019      	movs	r1, r3
 8000e52:	0010      	movs	r0, r2
 8000e54:	f001 fcfe 	bl	8002854 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin
                           PAPin */
  GPIO_InitStruct.Pin = E_Pin|D_Pin|C_Pin|B_Pin
 8000e58:	0021      	movs	r1, r4
 8000e5a:	187b      	adds	r3, r7, r1
 8000e5c:	22f8      	movs	r2, #248	@ 0xf8
 8000e5e:	0152      	lsls	r2, r2, #5
 8000e60:	601a      	str	r2, [r3, #0]
                          |A_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e62:	187b      	adds	r3, r7, r1
 8000e64:	2201      	movs	r2, #1
 8000e66:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e68:	187b      	adds	r3, r7, r1
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e6e:	187b      	adds	r3, r7, r1
 8000e70:	2200      	movs	r2, #0
 8000e72:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e74:	187a      	adds	r2, r7, r1
 8000e76:	2390      	movs	r3, #144	@ 0x90
 8000e78:	05db      	lsls	r3, r3, #23
 8000e7a:	0011      	movs	r1, r2
 8000e7c:	0018      	movs	r0, r3
 8000e7e:	f001 fce9 	bl	8002854 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_1_IRQn, 0, 0);
 8000e82:	2200      	movs	r2, #0
 8000e84:	2100      	movs	r1, #0
 8000e86:	2005      	movs	r0, #5
 8000e88:	f001 faa6 	bl	80023d8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_1_IRQn);
 8000e8c:	2005      	movs	r0, #5
 8000e8e:	f001 fab8 	bl	8002402 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI2_3_IRQn, 0, 0);
 8000e92:	2200      	movs	r2, #0
 8000e94:	2100      	movs	r1, #0
 8000e96:	2006      	movs	r0, #6
 8000e98:	f001 fa9e 	bl	80023d8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 8000e9c:	2006      	movs	r0, #6
 8000e9e:	f001 fab0 	bl	8002402 <HAL_NVIC_EnableIRQ>

}
 8000ea2:	46c0      	nop			@ (mov r8, r8)
 8000ea4:	46bd      	mov	sp, r7
 8000ea6:	b00b      	add	sp, #44	@ 0x2c
 8000ea8:	bd90      	pop	{r4, r7, pc}
 8000eaa:	46c0      	nop			@ (mov r8, r8)
 8000eac:	40021000 	.word	0x40021000
 8000eb0:	48000800 	.word	0x48000800
 8000eb4:	48001400 	.word	0x48001400
 8000eb8:	48000400 	.word	0x48000400

08000ebc <HAL_GPIO_EXTI_Callback>:

void ShiftOut(uint16_t data);
void DF_Choose(uint8_t);

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_PIN)
{
 8000ebc:	b580      	push	{r7, lr}
 8000ebe:	b082      	sub	sp, #8
 8000ec0:	af00      	add	r7, sp, #0
 8000ec2:	0002      	movs	r2, r0
 8000ec4:	1dbb      	adds	r3, r7, #6
 8000ec6:	801a      	strh	r2, [r3, #0]
		if(!HAL_GPIO_ReadPin(Ext_IO3_GPIO_Port, Ext_IO3_Pin))
 8000ec8:	4b08      	ldr	r3, [pc, #32]	@ (8000eec <HAL_GPIO_EXTI_Callback+0x30>)
 8000eca:	2104      	movs	r1, #4
 8000ecc:	0018      	movs	r0, r3
 8000ece:	f001 fe31 	bl	8002b34 <HAL_GPIO_ReadPin>
 8000ed2:	1e03      	subs	r3, r0, #0
 8000ed4:	d106      	bne.n	8000ee4 <HAL_GPIO_EXTI_Callback+0x28>
			if(remote_pressed==1)
 8000ed6:	4b06      	ldr	r3, [pc, #24]	@ (8000ef0 <HAL_GPIO_EXTI_Callback+0x34>)
 8000ed8:	781b      	ldrb	r3, [r3, #0]
 8000eda:	2b01      	cmp	r3, #1
 8000edc:	d102      	bne.n	8000ee4 <HAL_GPIO_EXTI_Callback+0x28>
				game_State = button_Clicked;
 8000ede:	4b05      	ldr	r3, [pc, #20]	@ (8000ef4 <HAL_GPIO_EXTI_Callback+0x38>)
 8000ee0:	2201      	movs	r2, #1
 8000ee2:	701a      	strb	r2, [r3, #0]


}
 8000ee4:	46c0      	nop			@ (mov r8, r8)
 8000ee6:	46bd      	mov	sp, r7
 8000ee8:	b002      	add	sp, #8
 8000eea:	bd80      	pop	{r7, pc}
 8000eec:	48000400 	.word	0x48000400
 8000ef0:	200000b3 	.word	0x200000b3
 8000ef4:	200000a9 	.word	0x200000a9

08000ef8 <reset_Shift_Register>:

void reset_Shift_Register()
{
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(MR_GPIO_Port, MR_Pin, 0);
 8000efc:	4b0b      	ldr	r3, [pc, #44]	@ (8000f2c <reset_Shift_Register+0x34>)
 8000efe:	2200      	movs	r2, #0
 8000f00:	2101      	movs	r1, #1
 8000f02:	0018      	movs	r0, r3
 8000f04:	f001 fe33 	bl	8002b6e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LATCH_GPIO_Port, LATCH_Pin, 1);
 8000f08:	2380      	movs	r3, #128	@ 0x80
 8000f0a:	01db      	lsls	r3, r3, #7
 8000f0c:	4808      	ldr	r0, [pc, #32]	@ (8000f30 <reset_Shift_Register+0x38>)
 8000f0e:	2201      	movs	r2, #1
 8000f10:	0019      	movs	r1, r3
 8000f12:	f001 fe2c 	bl	8002b6e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LATCH_GPIO_Port, LATCH_Pin, 0);
 8000f16:	2380      	movs	r3, #128	@ 0x80
 8000f18:	01db      	lsls	r3, r3, #7
 8000f1a:	4805      	ldr	r0, [pc, #20]	@ (8000f30 <reset_Shift_Register+0x38>)
 8000f1c:	2200      	movs	r2, #0
 8000f1e:	0019      	movs	r1, r3
 8000f20:	f001 fe25 	bl	8002b6e <HAL_GPIO_WritePin>
}
 8000f24:	46c0      	nop			@ (mov r8, r8)
 8000f26:	46bd      	mov	sp, r7
 8000f28:	bd80      	pop	{r7, pc}
 8000f2a:	46c0      	nop			@ (mov r8, r8)
 8000f2c:	48001400 	.word	0x48001400
 8000f30:	48000800 	.word	0x48000800

08000f34 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000f34:	b580      	push	{r7, lr}
 8000f36:	b082      	sub	sp, #8
 8000f38:	af00      	add	r7, sp, #0
 8000f3a:	6078      	str	r0, [r7, #4]
	reset_Shift_Register();
 8000f3c:	f7ff ffdc 	bl	8000ef8 <reset_Shift_Register>
	HAL_GPIO_WritePin(MR_GPIO_Port, MR_Pin, 1);
 8000f40:	4b0d      	ldr	r3, [pc, #52]	@ (8000f78 <HAL_TIM_PeriodElapsedCallback+0x44>)
 8000f42:	2201      	movs	r2, #1
 8000f44:	2101      	movs	r1, #1
 8000f46:	0018      	movs	r0, r3
 8000f48:	f001 fe11 	bl	8002b6e <HAL_GPIO_WritePin>


	if(x)
 8000f4c:	4b0b      	ldr	r3, [pc, #44]	@ (8000f7c <HAL_TIM_PeriodElapsedCallback+0x48>)
 8000f4e:	781b      	ldrb	r3, [r3, #0]
 8000f50:	2b00      	cmp	r3, #0
 8000f52:	d008      	beq.n	8000f66 <HAL_TIM_PeriodElapsedCallback+0x32>
	{
		ShiftOut(data);
 8000f54:	4b0a      	ldr	r3, [pc, #40]	@ (8000f80 <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8000f56:	881b      	ldrh	r3, [r3, #0]
 8000f58:	0018      	movs	r0, r3
 8000f5a:	f000 fb97 	bl	800168c <ShiftOut>
		x=0;
 8000f5e:	4b07      	ldr	r3, [pc, #28]	@ (8000f7c <HAL_TIM_PeriodElapsedCallback+0x48>)
 8000f60:	2200      	movs	r2, #0
 8000f62:	701a      	strb	r2, [r3, #0]
	{
		reset_Shift_Register();
		x=1;
	}

}
 8000f64:	e004      	b.n	8000f70 <HAL_TIM_PeriodElapsedCallback+0x3c>
		reset_Shift_Register();
 8000f66:	f7ff ffc7 	bl	8000ef8 <reset_Shift_Register>
		x=1;
 8000f6a:	4b04      	ldr	r3, [pc, #16]	@ (8000f7c <HAL_TIM_PeriodElapsedCallback+0x48>)
 8000f6c:	2201      	movs	r2, #1
 8000f6e:	701a      	strb	r2, [r3, #0]
}
 8000f70:	46c0      	nop			@ (mov r8, r8)
 8000f72:	46bd      	mov	sp, r7
 8000f74:	b002      	add	sp, #8
 8000f76:	bd80      	pop	{r7, pc}
 8000f78:	48001400 	.word	0x48001400
 8000f7c:	200000b0 	.word	0x200000b0
 8000f80:	20000010 	.word	0x20000010

08000f84 <segment_Update>:

void segment_Update(int num)
{
 8000f84:	b580      	push	{r7, lr}
 8000f86:	b082      	sub	sp, #8
 8000f88:	af00      	add	r7, sp, #0
 8000f8a:	6078      	str	r0, [r7, #4]
	if(num==0)
 8000f8c:	687b      	ldr	r3, [r7, #4]
 8000f8e:	2b00      	cmp	r3, #0
 8000f90:	d136      	bne.n	8001000 <segment_Update+0x7c>
	{
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 8000f92:	2380      	movs	r3, #128	@ 0x80
 8000f94:	0159      	lsls	r1, r3, #5
 8000f96:	2390      	movs	r3, #144	@ 0x90
 8000f98:	05db      	lsls	r3, r3, #23
 8000f9a:	2201      	movs	r2, #1
 8000f9c:	0018      	movs	r0, r3
 8000f9e:	f001 fde6 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 8000fa2:	2380      	movs	r3, #128	@ 0x80
 8000fa4:	0119      	lsls	r1, r3, #4
 8000fa6:	2390      	movs	r3, #144	@ 0x90
 8000fa8:	05db      	lsls	r3, r3, #23
 8000faa:	2201      	movs	r2, #1
 8000fac:	0018      	movs	r0, r3
 8000fae:	f001 fdde 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 8000fb2:	2380      	movs	r3, #128	@ 0x80
 8000fb4:	00d9      	lsls	r1, r3, #3
 8000fb6:	2390      	movs	r3, #144	@ 0x90
 8000fb8:	05db      	lsls	r3, r3, #23
 8000fba:	2201      	movs	r2, #1
 8000fbc:	0018      	movs	r0, r3
 8000fbe:	f001 fdd6 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 8000fc2:	2380      	movs	r3, #128	@ 0x80
 8000fc4:	0099      	lsls	r1, r3, #2
 8000fc6:	2390      	movs	r3, #144	@ 0x90
 8000fc8:	05db      	lsls	r3, r3, #23
 8000fca:	2201      	movs	r2, #1
 8000fcc:	0018      	movs	r0, r3
 8000fce:	f001 fdce 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,1);
 8000fd2:	2380      	movs	r3, #128	@ 0x80
 8000fd4:	0059      	lsls	r1, r3, #1
 8000fd6:	2390      	movs	r3, #144	@ 0x90
 8000fd8:	05db      	lsls	r3, r3, #23
 8000fda:	2201      	movs	r2, #1
 8000fdc:	0018      	movs	r0, r3
 8000fde:	f001 fdc6 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,1);
 8000fe2:	2380      	movs	r3, #128	@ 0x80
 8000fe4:	021b      	lsls	r3, r3, #8
 8000fe6:	48ee      	ldr	r0, [pc, #952]	@ (80013a0 <segment_Update+0x41c>)
 8000fe8:	2201      	movs	r2, #1
 8000fea:	0019      	movs	r1, r3
 8000fec:	f001 fdbf 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,0);
 8000ff0:	2380      	movs	r3, #128	@ 0x80
 8000ff2:	01db      	lsls	r3, r3, #7
 8000ff4:	48ea      	ldr	r0, [pc, #936]	@ (80013a0 <segment_Update+0x41c>)
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	0019      	movs	r1, r3
 8000ffa:	f001 fdb8 	bl	8002b6e <HAL_GPIO_WritePin>

			else if(state_Of_Segment==6)
				state_Of_Segment=0;
	}

}
 8000ffe:	e306      	b.n	800160e <segment_Update+0x68a>
	else if(num==1)
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	2b01      	cmp	r3, #1
 8001004:	d136      	bne.n	8001074 <segment_Update+0xf0>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,0);
 8001006:	2380      	movs	r3, #128	@ 0x80
 8001008:	0159      	lsls	r1, r3, #5
 800100a:	2390      	movs	r3, #144	@ 0x90
 800100c:	05db      	lsls	r3, r3, #23
 800100e:	2200      	movs	r2, #0
 8001010:	0018      	movs	r0, r3
 8001012:	f001 fdac 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 8001016:	2380      	movs	r3, #128	@ 0x80
 8001018:	0119      	lsls	r1, r3, #4
 800101a:	2390      	movs	r3, #144	@ 0x90
 800101c:	05db      	lsls	r3, r3, #23
 800101e:	2201      	movs	r2, #1
 8001020:	0018      	movs	r0, r3
 8001022:	f001 fda4 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 8001026:	2380      	movs	r3, #128	@ 0x80
 8001028:	00d9      	lsls	r1, r3, #3
 800102a:	2390      	movs	r3, #144	@ 0x90
 800102c:	05db      	lsls	r3, r3, #23
 800102e:	2201      	movs	r2, #1
 8001030:	0018      	movs	r0, r3
 8001032:	f001 fd9c 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,0);
 8001036:	2380      	movs	r3, #128	@ 0x80
 8001038:	0099      	lsls	r1, r3, #2
 800103a:	2390      	movs	r3, #144	@ 0x90
 800103c:	05db      	lsls	r3, r3, #23
 800103e:	2200      	movs	r2, #0
 8001040:	0018      	movs	r0, r3
 8001042:	f001 fd94 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 8001046:	2380      	movs	r3, #128	@ 0x80
 8001048:	0059      	lsls	r1, r3, #1
 800104a:	2390      	movs	r3, #144	@ 0x90
 800104c:	05db      	lsls	r3, r3, #23
 800104e:	2200      	movs	r2, #0
 8001050:	0018      	movs	r0, r3
 8001052:	f001 fd8c 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,0);
 8001056:	2380      	movs	r3, #128	@ 0x80
 8001058:	021b      	lsls	r3, r3, #8
 800105a:	48d1      	ldr	r0, [pc, #836]	@ (80013a0 <segment_Update+0x41c>)
 800105c:	2200      	movs	r2, #0
 800105e:	0019      	movs	r1, r3
 8001060:	f001 fd85 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,0);
 8001064:	2380      	movs	r3, #128	@ 0x80
 8001066:	01db      	lsls	r3, r3, #7
 8001068:	48cd      	ldr	r0, [pc, #820]	@ (80013a0 <segment_Update+0x41c>)
 800106a:	2200      	movs	r2, #0
 800106c:	0019      	movs	r1, r3
 800106e:	f001 fd7e 	bl	8002b6e <HAL_GPIO_WritePin>
}
 8001072:	e2cc      	b.n	800160e <segment_Update+0x68a>
	else if(num==2)
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	2b02      	cmp	r3, #2
 8001078:	d136      	bne.n	80010e8 <segment_Update+0x164>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 800107a:	2380      	movs	r3, #128	@ 0x80
 800107c:	0159      	lsls	r1, r3, #5
 800107e:	2390      	movs	r3, #144	@ 0x90
 8001080:	05db      	lsls	r3, r3, #23
 8001082:	2201      	movs	r2, #1
 8001084:	0018      	movs	r0, r3
 8001086:	f001 fd72 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 800108a:	2380      	movs	r3, #128	@ 0x80
 800108c:	0119      	lsls	r1, r3, #4
 800108e:	2390      	movs	r3, #144	@ 0x90
 8001090:	05db      	lsls	r3, r3, #23
 8001092:	2201      	movs	r2, #1
 8001094:	0018      	movs	r0, r3
 8001096:	f001 fd6a 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,0);
 800109a:	2380      	movs	r3, #128	@ 0x80
 800109c:	00d9      	lsls	r1, r3, #3
 800109e:	2390      	movs	r3, #144	@ 0x90
 80010a0:	05db      	lsls	r3, r3, #23
 80010a2:	2200      	movs	r2, #0
 80010a4:	0018      	movs	r0, r3
 80010a6:	f001 fd62 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 80010aa:	2380      	movs	r3, #128	@ 0x80
 80010ac:	0099      	lsls	r1, r3, #2
 80010ae:	2390      	movs	r3, #144	@ 0x90
 80010b0:	05db      	lsls	r3, r3, #23
 80010b2:	2201      	movs	r2, #1
 80010b4:	0018      	movs	r0, r3
 80010b6:	f001 fd5a 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,1);
 80010ba:	2380      	movs	r3, #128	@ 0x80
 80010bc:	0059      	lsls	r1, r3, #1
 80010be:	2390      	movs	r3, #144	@ 0x90
 80010c0:	05db      	lsls	r3, r3, #23
 80010c2:	2201      	movs	r2, #1
 80010c4:	0018      	movs	r0, r3
 80010c6:	f001 fd52 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,0);
 80010ca:	2380      	movs	r3, #128	@ 0x80
 80010cc:	021b      	lsls	r3, r3, #8
 80010ce:	48b4      	ldr	r0, [pc, #720]	@ (80013a0 <segment_Update+0x41c>)
 80010d0:	2200      	movs	r2, #0
 80010d2:	0019      	movs	r1, r3
 80010d4:	f001 fd4b 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 80010d8:	2380      	movs	r3, #128	@ 0x80
 80010da:	01db      	lsls	r3, r3, #7
 80010dc:	48b0      	ldr	r0, [pc, #704]	@ (80013a0 <segment_Update+0x41c>)
 80010de:	2201      	movs	r2, #1
 80010e0:	0019      	movs	r1, r3
 80010e2:	f001 fd44 	bl	8002b6e <HAL_GPIO_WritePin>
}
 80010e6:	e292      	b.n	800160e <segment_Update+0x68a>
	else if(num==3)
 80010e8:	687b      	ldr	r3, [r7, #4]
 80010ea:	2b03      	cmp	r3, #3
 80010ec:	d136      	bne.n	800115c <segment_Update+0x1d8>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 80010ee:	2380      	movs	r3, #128	@ 0x80
 80010f0:	0159      	lsls	r1, r3, #5
 80010f2:	2390      	movs	r3, #144	@ 0x90
 80010f4:	05db      	lsls	r3, r3, #23
 80010f6:	2201      	movs	r2, #1
 80010f8:	0018      	movs	r0, r3
 80010fa:	f001 fd38 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 80010fe:	2380      	movs	r3, #128	@ 0x80
 8001100:	0119      	lsls	r1, r3, #4
 8001102:	2390      	movs	r3, #144	@ 0x90
 8001104:	05db      	lsls	r3, r3, #23
 8001106:	2201      	movs	r2, #1
 8001108:	0018      	movs	r0, r3
 800110a:	f001 fd30 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 800110e:	2380      	movs	r3, #128	@ 0x80
 8001110:	00d9      	lsls	r1, r3, #3
 8001112:	2390      	movs	r3, #144	@ 0x90
 8001114:	05db      	lsls	r3, r3, #23
 8001116:	2201      	movs	r2, #1
 8001118:	0018      	movs	r0, r3
 800111a:	f001 fd28 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 800111e:	2380      	movs	r3, #128	@ 0x80
 8001120:	0099      	lsls	r1, r3, #2
 8001122:	2390      	movs	r3, #144	@ 0x90
 8001124:	05db      	lsls	r3, r3, #23
 8001126:	2201      	movs	r2, #1
 8001128:	0018      	movs	r0, r3
 800112a:	f001 fd20 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 800112e:	2380      	movs	r3, #128	@ 0x80
 8001130:	0059      	lsls	r1, r3, #1
 8001132:	2390      	movs	r3, #144	@ 0x90
 8001134:	05db      	lsls	r3, r3, #23
 8001136:	2200      	movs	r2, #0
 8001138:	0018      	movs	r0, r3
 800113a:	f001 fd18 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,0);
 800113e:	2380      	movs	r3, #128	@ 0x80
 8001140:	021b      	lsls	r3, r3, #8
 8001142:	4897      	ldr	r0, [pc, #604]	@ (80013a0 <segment_Update+0x41c>)
 8001144:	2200      	movs	r2, #0
 8001146:	0019      	movs	r1, r3
 8001148:	f001 fd11 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 800114c:	2380      	movs	r3, #128	@ 0x80
 800114e:	01db      	lsls	r3, r3, #7
 8001150:	4893      	ldr	r0, [pc, #588]	@ (80013a0 <segment_Update+0x41c>)
 8001152:	2201      	movs	r2, #1
 8001154:	0019      	movs	r1, r3
 8001156:	f001 fd0a 	bl	8002b6e <HAL_GPIO_WritePin>
}
 800115a:	e258      	b.n	800160e <segment_Update+0x68a>
	else if(num==4)
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	2b04      	cmp	r3, #4
 8001160:	d136      	bne.n	80011d0 <segment_Update+0x24c>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,0);
 8001162:	2380      	movs	r3, #128	@ 0x80
 8001164:	0159      	lsls	r1, r3, #5
 8001166:	2390      	movs	r3, #144	@ 0x90
 8001168:	05db      	lsls	r3, r3, #23
 800116a:	2200      	movs	r2, #0
 800116c:	0018      	movs	r0, r3
 800116e:	f001 fcfe 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 8001172:	2380      	movs	r3, #128	@ 0x80
 8001174:	0119      	lsls	r1, r3, #4
 8001176:	2390      	movs	r3, #144	@ 0x90
 8001178:	05db      	lsls	r3, r3, #23
 800117a:	2201      	movs	r2, #1
 800117c:	0018      	movs	r0, r3
 800117e:	f001 fcf6 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 8001182:	2380      	movs	r3, #128	@ 0x80
 8001184:	00d9      	lsls	r1, r3, #3
 8001186:	2390      	movs	r3, #144	@ 0x90
 8001188:	05db      	lsls	r3, r3, #23
 800118a:	2201      	movs	r2, #1
 800118c:	0018      	movs	r0, r3
 800118e:	f001 fcee 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,0);
 8001192:	2380      	movs	r3, #128	@ 0x80
 8001194:	0099      	lsls	r1, r3, #2
 8001196:	2390      	movs	r3, #144	@ 0x90
 8001198:	05db      	lsls	r3, r3, #23
 800119a:	2200      	movs	r2, #0
 800119c:	0018      	movs	r0, r3
 800119e:	f001 fce6 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 80011a2:	2380      	movs	r3, #128	@ 0x80
 80011a4:	0059      	lsls	r1, r3, #1
 80011a6:	2390      	movs	r3, #144	@ 0x90
 80011a8:	05db      	lsls	r3, r3, #23
 80011aa:	2200      	movs	r2, #0
 80011ac:	0018      	movs	r0, r3
 80011ae:	f001 fcde 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,1);
 80011b2:	2380      	movs	r3, #128	@ 0x80
 80011b4:	021b      	lsls	r3, r3, #8
 80011b6:	487a      	ldr	r0, [pc, #488]	@ (80013a0 <segment_Update+0x41c>)
 80011b8:	2201      	movs	r2, #1
 80011ba:	0019      	movs	r1, r3
 80011bc:	f001 fcd7 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 80011c0:	2380      	movs	r3, #128	@ 0x80
 80011c2:	01db      	lsls	r3, r3, #7
 80011c4:	4876      	ldr	r0, [pc, #472]	@ (80013a0 <segment_Update+0x41c>)
 80011c6:	2201      	movs	r2, #1
 80011c8:	0019      	movs	r1, r3
 80011ca:	f001 fcd0 	bl	8002b6e <HAL_GPIO_WritePin>
}
 80011ce:	e21e      	b.n	800160e <segment_Update+0x68a>
	else if(num==5)
 80011d0:	687b      	ldr	r3, [r7, #4]
 80011d2:	2b05      	cmp	r3, #5
 80011d4:	d136      	bne.n	8001244 <segment_Update+0x2c0>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 80011d6:	2380      	movs	r3, #128	@ 0x80
 80011d8:	0159      	lsls	r1, r3, #5
 80011da:	2390      	movs	r3, #144	@ 0x90
 80011dc:	05db      	lsls	r3, r3, #23
 80011de:	2201      	movs	r2, #1
 80011e0:	0018      	movs	r0, r3
 80011e2:	f001 fcc4 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,0);
 80011e6:	2380      	movs	r3, #128	@ 0x80
 80011e8:	0119      	lsls	r1, r3, #4
 80011ea:	2390      	movs	r3, #144	@ 0x90
 80011ec:	05db      	lsls	r3, r3, #23
 80011ee:	2200      	movs	r2, #0
 80011f0:	0018      	movs	r0, r3
 80011f2:	f001 fcbc 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 80011f6:	2380      	movs	r3, #128	@ 0x80
 80011f8:	00d9      	lsls	r1, r3, #3
 80011fa:	2390      	movs	r3, #144	@ 0x90
 80011fc:	05db      	lsls	r3, r3, #23
 80011fe:	2201      	movs	r2, #1
 8001200:	0018      	movs	r0, r3
 8001202:	f001 fcb4 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 8001206:	2380      	movs	r3, #128	@ 0x80
 8001208:	0099      	lsls	r1, r3, #2
 800120a:	2390      	movs	r3, #144	@ 0x90
 800120c:	05db      	lsls	r3, r3, #23
 800120e:	2201      	movs	r2, #1
 8001210:	0018      	movs	r0, r3
 8001212:	f001 fcac 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 8001216:	2380      	movs	r3, #128	@ 0x80
 8001218:	0059      	lsls	r1, r3, #1
 800121a:	2390      	movs	r3, #144	@ 0x90
 800121c:	05db      	lsls	r3, r3, #23
 800121e:	2200      	movs	r2, #0
 8001220:	0018      	movs	r0, r3
 8001222:	f001 fca4 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,1);
 8001226:	2380      	movs	r3, #128	@ 0x80
 8001228:	021b      	lsls	r3, r3, #8
 800122a:	485d      	ldr	r0, [pc, #372]	@ (80013a0 <segment_Update+0x41c>)
 800122c:	2201      	movs	r2, #1
 800122e:	0019      	movs	r1, r3
 8001230:	f001 fc9d 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 8001234:	2380      	movs	r3, #128	@ 0x80
 8001236:	01db      	lsls	r3, r3, #7
 8001238:	4859      	ldr	r0, [pc, #356]	@ (80013a0 <segment_Update+0x41c>)
 800123a:	2201      	movs	r2, #1
 800123c:	0019      	movs	r1, r3
 800123e:	f001 fc96 	bl	8002b6e <HAL_GPIO_WritePin>
}
 8001242:	e1e4      	b.n	800160e <segment_Update+0x68a>
	else if(num==6)
 8001244:	687b      	ldr	r3, [r7, #4]
 8001246:	2b06      	cmp	r3, #6
 8001248:	d136      	bne.n	80012b8 <segment_Update+0x334>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 800124a:	2380      	movs	r3, #128	@ 0x80
 800124c:	0159      	lsls	r1, r3, #5
 800124e:	2390      	movs	r3, #144	@ 0x90
 8001250:	05db      	lsls	r3, r3, #23
 8001252:	2201      	movs	r2, #1
 8001254:	0018      	movs	r0, r3
 8001256:	f001 fc8a 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 800125a:	2380      	movs	r3, #128	@ 0x80
 800125c:	0119      	lsls	r1, r3, #4
 800125e:	2390      	movs	r3, #144	@ 0x90
 8001260:	05db      	lsls	r3, r3, #23
 8001262:	2201      	movs	r2, #1
 8001264:	0018      	movs	r0, r3
 8001266:	f001 fc82 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 800126a:	2380      	movs	r3, #128	@ 0x80
 800126c:	00d9      	lsls	r1, r3, #3
 800126e:	2390      	movs	r3, #144	@ 0x90
 8001270:	05db      	lsls	r3, r3, #23
 8001272:	2201      	movs	r2, #1
 8001274:	0018      	movs	r0, r3
 8001276:	f001 fc7a 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 800127a:	2380      	movs	r3, #128	@ 0x80
 800127c:	0099      	lsls	r1, r3, #2
 800127e:	2390      	movs	r3, #144	@ 0x90
 8001280:	05db      	lsls	r3, r3, #23
 8001282:	2201      	movs	r2, #1
 8001284:	0018      	movs	r0, r3
 8001286:	f001 fc72 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,1);
 800128a:	2380      	movs	r3, #128	@ 0x80
 800128c:	0059      	lsls	r1, r3, #1
 800128e:	2390      	movs	r3, #144	@ 0x90
 8001290:	05db      	lsls	r3, r3, #23
 8001292:	2201      	movs	r2, #1
 8001294:	0018      	movs	r0, r3
 8001296:	f001 fc6a 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,0);
 800129a:	2380      	movs	r3, #128	@ 0x80
 800129c:	021b      	lsls	r3, r3, #8
 800129e:	4840      	ldr	r0, [pc, #256]	@ (80013a0 <segment_Update+0x41c>)
 80012a0:	2200      	movs	r2, #0
 80012a2:	0019      	movs	r1, r3
 80012a4:	f001 fc63 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 80012a8:	2380      	movs	r3, #128	@ 0x80
 80012aa:	01db      	lsls	r3, r3, #7
 80012ac:	483c      	ldr	r0, [pc, #240]	@ (80013a0 <segment_Update+0x41c>)
 80012ae:	2201      	movs	r2, #1
 80012b0:	0019      	movs	r1, r3
 80012b2:	f001 fc5c 	bl	8002b6e <HAL_GPIO_WritePin>
}
 80012b6:	e1aa      	b.n	800160e <segment_Update+0x68a>
	else if(num==7)
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	2b07      	cmp	r3, #7
 80012bc:	d136      	bne.n	800132c <segment_Update+0x3a8>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 80012be:	2380      	movs	r3, #128	@ 0x80
 80012c0:	0159      	lsls	r1, r3, #5
 80012c2:	2390      	movs	r3, #144	@ 0x90
 80012c4:	05db      	lsls	r3, r3, #23
 80012c6:	2201      	movs	r2, #1
 80012c8:	0018      	movs	r0, r3
 80012ca:	f001 fc50 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 80012ce:	2380      	movs	r3, #128	@ 0x80
 80012d0:	0119      	lsls	r1, r3, #4
 80012d2:	2390      	movs	r3, #144	@ 0x90
 80012d4:	05db      	lsls	r3, r3, #23
 80012d6:	2201      	movs	r2, #1
 80012d8:	0018      	movs	r0, r3
 80012da:	f001 fc48 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 80012de:	2380      	movs	r3, #128	@ 0x80
 80012e0:	00d9      	lsls	r1, r3, #3
 80012e2:	2390      	movs	r3, #144	@ 0x90
 80012e4:	05db      	lsls	r3, r3, #23
 80012e6:	2201      	movs	r2, #1
 80012e8:	0018      	movs	r0, r3
 80012ea:	f001 fc40 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,0);
 80012ee:	2380      	movs	r3, #128	@ 0x80
 80012f0:	0099      	lsls	r1, r3, #2
 80012f2:	2390      	movs	r3, #144	@ 0x90
 80012f4:	05db      	lsls	r3, r3, #23
 80012f6:	2200      	movs	r2, #0
 80012f8:	0018      	movs	r0, r3
 80012fa:	f001 fc38 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 80012fe:	2380      	movs	r3, #128	@ 0x80
 8001300:	0059      	lsls	r1, r3, #1
 8001302:	2390      	movs	r3, #144	@ 0x90
 8001304:	05db      	lsls	r3, r3, #23
 8001306:	2200      	movs	r2, #0
 8001308:	0018      	movs	r0, r3
 800130a:	f001 fc30 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,0);
 800130e:	2380      	movs	r3, #128	@ 0x80
 8001310:	021b      	lsls	r3, r3, #8
 8001312:	4823      	ldr	r0, [pc, #140]	@ (80013a0 <segment_Update+0x41c>)
 8001314:	2200      	movs	r2, #0
 8001316:	0019      	movs	r1, r3
 8001318:	f001 fc29 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,0);
 800131c:	2380      	movs	r3, #128	@ 0x80
 800131e:	01db      	lsls	r3, r3, #7
 8001320:	481f      	ldr	r0, [pc, #124]	@ (80013a0 <segment_Update+0x41c>)
 8001322:	2200      	movs	r2, #0
 8001324:	0019      	movs	r1, r3
 8001326:	f001 fc22 	bl	8002b6e <HAL_GPIO_WritePin>
}
 800132a:	e170      	b.n	800160e <segment_Update+0x68a>
	else if(num==8)
 800132c:	687b      	ldr	r3, [r7, #4]
 800132e:	2b08      	cmp	r3, #8
 8001330:	d138      	bne.n	80013a4 <segment_Update+0x420>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 8001332:	2380      	movs	r3, #128	@ 0x80
 8001334:	0159      	lsls	r1, r3, #5
 8001336:	2390      	movs	r3, #144	@ 0x90
 8001338:	05db      	lsls	r3, r3, #23
 800133a:	2201      	movs	r2, #1
 800133c:	0018      	movs	r0, r3
 800133e:	f001 fc16 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 8001342:	2380      	movs	r3, #128	@ 0x80
 8001344:	0119      	lsls	r1, r3, #4
 8001346:	2390      	movs	r3, #144	@ 0x90
 8001348:	05db      	lsls	r3, r3, #23
 800134a:	2201      	movs	r2, #1
 800134c:	0018      	movs	r0, r3
 800134e:	f001 fc0e 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 8001352:	2380      	movs	r3, #128	@ 0x80
 8001354:	00d9      	lsls	r1, r3, #3
 8001356:	2390      	movs	r3, #144	@ 0x90
 8001358:	05db      	lsls	r3, r3, #23
 800135a:	2201      	movs	r2, #1
 800135c:	0018      	movs	r0, r3
 800135e:	f001 fc06 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 8001362:	2380      	movs	r3, #128	@ 0x80
 8001364:	0099      	lsls	r1, r3, #2
 8001366:	2390      	movs	r3, #144	@ 0x90
 8001368:	05db      	lsls	r3, r3, #23
 800136a:	2201      	movs	r2, #1
 800136c:	0018      	movs	r0, r3
 800136e:	f001 fbfe 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,1);
 8001372:	2380      	movs	r3, #128	@ 0x80
 8001374:	0059      	lsls	r1, r3, #1
 8001376:	2390      	movs	r3, #144	@ 0x90
 8001378:	05db      	lsls	r3, r3, #23
 800137a:	2201      	movs	r2, #1
 800137c:	0018      	movs	r0, r3
 800137e:	f001 fbf6 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,1);
 8001382:	2380      	movs	r3, #128	@ 0x80
 8001384:	021b      	lsls	r3, r3, #8
 8001386:	4806      	ldr	r0, [pc, #24]	@ (80013a0 <segment_Update+0x41c>)
 8001388:	2201      	movs	r2, #1
 800138a:	0019      	movs	r1, r3
 800138c:	f001 fbef 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 8001390:	2380      	movs	r3, #128	@ 0x80
 8001392:	01db      	lsls	r3, r3, #7
 8001394:	4802      	ldr	r0, [pc, #8]	@ (80013a0 <segment_Update+0x41c>)
 8001396:	2201      	movs	r2, #1
 8001398:	0019      	movs	r1, r3
 800139a:	f001 fbe8 	bl	8002b6e <HAL_GPIO_WritePin>
}
 800139e:	e136      	b.n	800160e <segment_Update+0x68a>
 80013a0:	48000400 	.word	0x48000400
	else if(num==9)
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	2b09      	cmp	r3, #9
 80013a8:	d136      	bne.n	8001418 <segment_Update+0x494>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 80013aa:	2380      	movs	r3, #128	@ 0x80
 80013ac:	0159      	lsls	r1, r3, #5
 80013ae:	2390      	movs	r3, #144	@ 0x90
 80013b0:	05db      	lsls	r3, r3, #23
 80013b2:	2201      	movs	r2, #1
 80013b4:	0018      	movs	r0, r3
 80013b6:	f001 fbda 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 80013ba:	2380      	movs	r3, #128	@ 0x80
 80013bc:	0119      	lsls	r1, r3, #4
 80013be:	2390      	movs	r3, #144	@ 0x90
 80013c0:	05db      	lsls	r3, r3, #23
 80013c2:	2201      	movs	r2, #1
 80013c4:	0018      	movs	r0, r3
 80013c6:	f001 fbd2 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 80013ca:	2380      	movs	r3, #128	@ 0x80
 80013cc:	00d9      	lsls	r1, r3, #3
 80013ce:	2390      	movs	r3, #144	@ 0x90
 80013d0:	05db      	lsls	r3, r3, #23
 80013d2:	2201      	movs	r2, #1
 80013d4:	0018      	movs	r0, r3
 80013d6:	f001 fbca 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 80013da:	2380      	movs	r3, #128	@ 0x80
 80013dc:	0099      	lsls	r1, r3, #2
 80013de:	2390      	movs	r3, #144	@ 0x90
 80013e0:	05db      	lsls	r3, r3, #23
 80013e2:	2201      	movs	r2, #1
 80013e4:	0018      	movs	r0, r3
 80013e6:	f001 fbc2 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 80013ea:	2380      	movs	r3, #128	@ 0x80
 80013ec:	0059      	lsls	r1, r3, #1
 80013ee:	2390      	movs	r3, #144	@ 0x90
 80013f0:	05db      	lsls	r3, r3, #23
 80013f2:	2200      	movs	r2, #0
 80013f4:	0018      	movs	r0, r3
 80013f6:	f001 fbba 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,1);
 80013fa:	2380      	movs	r3, #128	@ 0x80
 80013fc:	021b      	lsls	r3, r3, #8
 80013fe:	4886      	ldr	r0, [pc, #536]	@ (8001618 <segment_Update+0x694>)
 8001400:	2201      	movs	r2, #1
 8001402:	0019      	movs	r1, r3
 8001404:	f001 fbb3 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 8001408:	2380      	movs	r3, #128	@ 0x80
 800140a:	01db      	lsls	r3, r3, #7
 800140c:	4882      	ldr	r0, [pc, #520]	@ (8001618 <segment_Update+0x694>)
 800140e:	2201      	movs	r2, #1
 8001410:	0019      	movs	r1, r3
 8001412:	f001 fbac 	bl	8002b6e <HAL_GPIO_WritePin>
}
 8001416:	e0fa      	b.n	800160e <segment_Update+0x68a>
	else if(num==P)
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	2b62      	cmp	r3, #98	@ 0x62
 800141c:	d136      	bne.n	800148c <segment_Update+0x508>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 800141e:	2380      	movs	r3, #128	@ 0x80
 8001420:	0159      	lsls	r1, r3, #5
 8001422:	2390      	movs	r3, #144	@ 0x90
 8001424:	05db      	lsls	r3, r3, #23
 8001426:	2201      	movs	r2, #1
 8001428:	0018      	movs	r0, r3
 800142a:	f001 fba0 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 800142e:	2380      	movs	r3, #128	@ 0x80
 8001430:	0119      	lsls	r1, r3, #4
 8001432:	2390      	movs	r3, #144	@ 0x90
 8001434:	05db      	lsls	r3, r3, #23
 8001436:	2201      	movs	r2, #1
 8001438:	0018      	movs	r0, r3
 800143a:	f001 fb98 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,0);
 800143e:	2380      	movs	r3, #128	@ 0x80
 8001440:	00d9      	lsls	r1, r3, #3
 8001442:	2390      	movs	r3, #144	@ 0x90
 8001444:	05db      	lsls	r3, r3, #23
 8001446:	2200      	movs	r2, #0
 8001448:	0018      	movs	r0, r3
 800144a:	f001 fb90 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,0);
 800144e:	2380      	movs	r3, #128	@ 0x80
 8001450:	0099      	lsls	r1, r3, #2
 8001452:	2390      	movs	r3, #144	@ 0x90
 8001454:	05db      	lsls	r3, r3, #23
 8001456:	2200      	movs	r2, #0
 8001458:	0018      	movs	r0, r3
 800145a:	f001 fb88 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,1);
 800145e:	2380      	movs	r3, #128	@ 0x80
 8001460:	0059      	lsls	r1, r3, #1
 8001462:	2390      	movs	r3, #144	@ 0x90
 8001464:	05db      	lsls	r3, r3, #23
 8001466:	2201      	movs	r2, #1
 8001468:	0018      	movs	r0, r3
 800146a:	f001 fb80 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,1);
 800146e:	2380      	movs	r3, #128	@ 0x80
 8001470:	021b      	lsls	r3, r3, #8
 8001472:	4869      	ldr	r0, [pc, #420]	@ (8001618 <segment_Update+0x694>)
 8001474:	2201      	movs	r2, #1
 8001476:	0019      	movs	r1, r3
 8001478:	f001 fb79 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,1);
 800147c:	2380      	movs	r3, #128	@ 0x80
 800147e:	01db      	lsls	r3, r3, #7
 8001480:	4865      	ldr	r0, [pc, #404]	@ (8001618 <segment_Update+0x694>)
 8001482:	2201      	movs	r2, #1
 8001484:	0019      	movs	r1, r3
 8001486:	f001 fb72 	bl	8002b6e <HAL_GPIO_WritePin>
}
 800148a:	e0c0      	b.n	800160e <segment_Update+0x68a>
	else if(num==NONE)
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	2b0a      	cmp	r3, #10
 8001490:	d136      	bne.n	8001500 <segment_Update+0x57c>
		HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,0);
 8001492:	2380      	movs	r3, #128	@ 0x80
 8001494:	0159      	lsls	r1, r3, #5
 8001496:	2390      	movs	r3, #144	@ 0x90
 8001498:	05db      	lsls	r3, r3, #23
 800149a:	2200      	movs	r2, #0
 800149c:	0018      	movs	r0, r3
 800149e:	f001 fb66 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,0);
 80014a2:	2380      	movs	r3, #128	@ 0x80
 80014a4:	0119      	lsls	r1, r3, #4
 80014a6:	2390      	movs	r3, #144	@ 0x90
 80014a8:	05db      	lsls	r3, r3, #23
 80014aa:	2200      	movs	r2, #0
 80014ac:	0018      	movs	r0, r3
 80014ae:	f001 fb5e 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,0);
 80014b2:	2380      	movs	r3, #128	@ 0x80
 80014b4:	00d9      	lsls	r1, r3, #3
 80014b6:	2390      	movs	r3, #144	@ 0x90
 80014b8:	05db      	lsls	r3, r3, #23
 80014ba:	2200      	movs	r2, #0
 80014bc:	0018      	movs	r0, r3
 80014be:	f001 fb56 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,0);
 80014c2:	2380      	movs	r3, #128	@ 0x80
 80014c4:	0099      	lsls	r1, r3, #2
 80014c6:	2390      	movs	r3, #144	@ 0x90
 80014c8:	05db      	lsls	r3, r3, #23
 80014ca:	2200      	movs	r2, #0
 80014cc:	0018      	movs	r0, r3
 80014ce:	f001 fb4e 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 80014d2:	2380      	movs	r3, #128	@ 0x80
 80014d4:	0059      	lsls	r1, r3, #1
 80014d6:	2390      	movs	r3, #144	@ 0x90
 80014d8:	05db      	lsls	r3, r3, #23
 80014da:	2200      	movs	r2, #0
 80014dc:	0018      	movs	r0, r3
 80014de:	f001 fb46 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,0);
 80014e2:	2380      	movs	r3, #128	@ 0x80
 80014e4:	021b      	lsls	r3, r3, #8
 80014e6:	484c      	ldr	r0, [pc, #304]	@ (8001618 <segment_Update+0x694>)
 80014e8:	2200      	movs	r2, #0
 80014ea:	0019      	movs	r1, r3
 80014ec:	f001 fb3f 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(G_GPIO_Port, G_Pin,0);
 80014f0:	2380      	movs	r3, #128	@ 0x80
 80014f2:	01db      	lsls	r3, r3, #7
 80014f4:	4848      	ldr	r0, [pc, #288]	@ (8001618 <segment_Update+0x694>)
 80014f6:	2200      	movs	r2, #0
 80014f8:	0019      	movs	r1, r3
 80014fa:	f001 fb38 	bl	8002b6e <HAL_GPIO_WritePin>
}
 80014fe:	e086      	b.n	800160e <segment_Update+0x68a>
	else if(num==E)
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	2b63      	cmp	r3, #99	@ 0x63
 8001504:	d000      	beq.n	8001508 <segment_Update+0x584>
 8001506:	e082      	b.n	800160e <segment_Update+0x68a>
			if(state_Of_Segment==0)
 8001508:	4b44      	ldr	r3, [pc, #272]	@ (800161c <segment_Update+0x698>)
 800150a:	781b      	ldrb	r3, [r3, #0]
 800150c:	2b00      	cmp	r3, #0
 800150e:	d110      	bne.n	8001532 <segment_Update+0x5ae>
				HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,0);
 8001510:	2380      	movs	r3, #128	@ 0x80
 8001512:	0159      	lsls	r1, r3, #5
 8001514:	2390      	movs	r3, #144	@ 0x90
 8001516:	05db      	lsls	r3, r3, #23
 8001518:	2200      	movs	r2, #0
 800151a:	0018      	movs	r0, r3
 800151c:	f001 fb27 	bl	8002b6e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,1);
 8001520:	2380      	movs	r3, #128	@ 0x80
 8001522:	0119      	lsls	r1, r3, #4
 8001524:	2390      	movs	r3, #144	@ 0x90
 8001526:	05db      	lsls	r3, r3, #23
 8001528:	2201      	movs	r2, #1
 800152a:	0018      	movs	r0, r3
 800152c:	f001 fb1f 	bl	8002b6e <HAL_GPIO_WritePin>
}
 8001530:	e06d      	b.n	800160e <segment_Update+0x68a>
			else if(state_Of_Segment==1)
 8001532:	4b3a      	ldr	r3, [pc, #232]	@ (800161c <segment_Update+0x698>)
 8001534:	781b      	ldrb	r3, [r3, #0]
 8001536:	2b01      	cmp	r3, #1
 8001538:	d110      	bne.n	800155c <segment_Update+0x5d8>
				HAL_GPIO_WritePin(B_GPIO_Port, B_Pin,0);
 800153a:	2380      	movs	r3, #128	@ 0x80
 800153c:	0119      	lsls	r1, r3, #4
 800153e:	2390      	movs	r3, #144	@ 0x90
 8001540:	05db      	lsls	r3, r3, #23
 8001542:	2200      	movs	r2, #0
 8001544:	0018      	movs	r0, r3
 8001546:	f001 fb12 	bl	8002b6e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,1);
 800154a:	2380      	movs	r3, #128	@ 0x80
 800154c:	00d9      	lsls	r1, r3, #3
 800154e:	2390      	movs	r3, #144	@ 0x90
 8001550:	05db      	lsls	r3, r3, #23
 8001552:	2201      	movs	r2, #1
 8001554:	0018      	movs	r0, r3
 8001556:	f001 fb0a 	bl	8002b6e <HAL_GPIO_WritePin>
}
 800155a:	e058      	b.n	800160e <segment_Update+0x68a>
			else if(state_Of_Segment==2)
 800155c:	4b2f      	ldr	r3, [pc, #188]	@ (800161c <segment_Update+0x698>)
 800155e:	781b      	ldrb	r3, [r3, #0]
 8001560:	2b02      	cmp	r3, #2
 8001562:	d110      	bne.n	8001586 <segment_Update+0x602>
				HAL_GPIO_WritePin(C_GPIO_Port, C_Pin,0);
 8001564:	2380      	movs	r3, #128	@ 0x80
 8001566:	00d9      	lsls	r1, r3, #3
 8001568:	2390      	movs	r3, #144	@ 0x90
 800156a:	05db      	lsls	r3, r3, #23
 800156c:	2200      	movs	r2, #0
 800156e:	0018      	movs	r0, r3
 8001570:	f001 fafd 	bl	8002b6e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,1);
 8001574:	2380      	movs	r3, #128	@ 0x80
 8001576:	0099      	lsls	r1, r3, #2
 8001578:	2390      	movs	r3, #144	@ 0x90
 800157a:	05db      	lsls	r3, r3, #23
 800157c:	2201      	movs	r2, #1
 800157e:	0018      	movs	r0, r3
 8001580:	f001 faf5 	bl	8002b6e <HAL_GPIO_WritePin>
}
 8001584:	e043      	b.n	800160e <segment_Update+0x68a>
			else if(state_Of_Segment==3)
 8001586:	4b25      	ldr	r3, [pc, #148]	@ (800161c <segment_Update+0x698>)
 8001588:	781b      	ldrb	r3, [r3, #0]
 800158a:	2b03      	cmp	r3, #3
 800158c:	d110      	bne.n	80015b0 <segment_Update+0x62c>
				HAL_GPIO_WritePin(D_GPIO_Port, D_Pin,0);
 800158e:	2380      	movs	r3, #128	@ 0x80
 8001590:	0099      	lsls	r1, r3, #2
 8001592:	2390      	movs	r3, #144	@ 0x90
 8001594:	05db      	lsls	r3, r3, #23
 8001596:	2200      	movs	r2, #0
 8001598:	0018      	movs	r0, r3
 800159a:	f001 fae8 	bl	8002b6e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,1);
 800159e:	2380      	movs	r3, #128	@ 0x80
 80015a0:	0059      	lsls	r1, r3, #1
 80015a2:	2390      	movs	r3, #144	@ 0x90
 80015a4:	05db      	lsls	r3, r3, #23
 80015a6:	2201      	movs	r2, #1
 80015a8:	0018      	movs	r0, r3
 80015aa:	f001 fae0 	bl	8002b6e <HAL_GPIO_WritePin>
}
 80015ae:	e02e      	b.n	800160e <segment_Update+0x68a>
			else if(state_Of_Segment==4)
 80015b0:	4b1a      	ldr	r3, [pc, #104]	@ (800161c <segment_Update+0x698>)
 80015b2:	781b      	ldrb	r3, [r3, #0]
 80015b4:	2b04      	cmp	r3, #4
 80015b6:	d10f      	bne.n	80015d8 <segment_Update+0x654>
				HAL_GPIO_WritePin(E_GPIO_Port, E_Pin,0);
 80015b8:	2380      	movs	r3, #128	@ 0x80
 80015ba:	0059      	lsls	r1, r3, #1
 80015bc:	2390      	movs	r3, #144	@ 0x90
 80015be:	05db      	lsls	r3, r3, #23
 80015c0:	2200      	movs	r2, #0
 80015c2:	0018      	movs	r0, r3
 80015c4:	f001 fad3 	bl	8002b6e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,1);
 80015c8:	2380      	movs	r3, #128	@ 0x80
 80015ca:	021b      	lsls	r3, r3, #8
 80015cc:	4812      	ldr	r0, [pc, #72]	@ (8001618 <segment_Update+0x694>)
 80015ce:	2201      	movs	r2, #1
 80015d0:	0019      	movs	r1, r3
 80015d2:	f001 facc 	bl	8002b6e <HAL_GPIO_WritePin>
}
 80015d6:	e01a      	b.n	800160e <segment_Update+0x68a>
			else if(state_Of_Segment==5)
 80015d8:	4b10      	ldr	r3, [pc, #64]	@ (800161c <segment_Update+0x698>)
 80015da:	781b      	ldrb	r3, [r3, #0]
 80015dc:	2b05      	cmp	r3, #5
 80015de:	d10f      	bne.n	8001600 <segment_Update+0x67c>
				HAL_GPIO_WritePin(F_GPIO_Port, F_Pin,0);
 80015e0:	2380      	movs	r3, #128	@ 0x80
 80015e2:	021b      	lsls	r3, r3, #8
 80015e4:	480c      	ldr	r0, [pc, #48]	@ (8001618 <segment_Update+0x694>)
 80015e6:	2200      	movs	r2, #0
 80015e8:	0019      	movs	r1, r3
 80015ea:	f001 fac0 	bl	8002b6e <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(A_GPIO_Port, A_Pin,1);
 80015ee:	2380      	movs	r3, #128	@ 0x80
 80015f0:	0159      	lsls	r1, r3, #5
 80015f2:	2390      	movs	r3, #144	@ 0x90
 80015f4:	05db      	lsls	r3, r3, #23
 80015f6:	2201      	movs	r2, #1
 80015f8:	0018      	movs	r0, r3
 80015fa:	f001 fab8 	bl	8002b6e <HAL_GPIO_WritePin>
}
 80015fe:	e006      	b.n	800160e <segment_Update+0x68a>
			else if(state_Of_Segment==6)
 8001600:	4b06      	ldr	r3, [pc, #24]	@ (800161c <segment_Update+0x698>)
 8001602:	781b      	ldrb	r3, [r3, #0]
 8001604:	2b06      	cmp	r3, #6
 8001606:	d102      	bne.n	800160e <segment_Update+0x68a>
				state_Of_Segment=0;
 8001608:	4b04      	ldr	r3, [pc, #16]	@ (800161c <segment_Update+0x698>)
 800160a:	2200      	movs	r2, #0
 800160c:	701a      	strb	r2, [r3, #0]
}
 800160e:	46c0      	nop			@ (mov r8, r8)
 8001610:	46bd      	mov	sp, r7
 8001612:	b002      	add	sp, #8
 8001614:	bd80      	pop	{r7, pc}
 8001616:	46c0      	nop			@ (mov r8, r8)
 8001618:	48000400 	.word	0x48000400
 800161c:	200000b1 	.word	0x200000b1

08001620 <shuffle>:

void shuffle(uint8_t *array, uint8_t size)
{
 8001620:	b580      	push	{r7, lr}
 8001622:	b086      	sub	sp, #24
 8001624:	af00      	add	r7, sp, #0
 8001626:	6078      	str	r0, [r7, #4]
 8001628:	000a      	movs	r2, r1
 800162a:	1cfb      	adds	r3, r7, #3
 800162c:	701a      	strb	r2, [r3, #0]
	for (int i = size - 1; i > 0; i--) {
 800162e:	1cfb      	adds	r3, r7, #3
 8001630:	781b      	ldrb	r3, [r3, #0]
 8001632:	3b01      	subs	r3, #1
 8001634:	617b      	str	r3, [r7, #20]
 8001636:	e020      	b.n	800167a <shuffle+0x5a>
		int j = rand() % (i + 1);
 8001638:	f003 f80c 	bl	8004654 <rand>
 800163c:	0002      	movs	r2, r0
 800163e:	697b      	ldr	r3, [r7, #20]
 8001640:	3301      	adds	r3, #1
 8001642:	0019      	movs	r1, r3
 8001644:	0010      	movs	r0, r2
 8001646:	f7fe fed9 	bl	80003fc <__aeabi_idivmod>
 800164a:	000b      	movs	r3, r1
 800164c:	613b      	str	r3, [r7, #16]

		int temp = array[i];
 800164e:	697b      	ldr	r3, [r7, #20]
 8001650:	687a      	ldr	r2, [r7, #4]
 8001652:	18d3      	adds	r3, r2, r3
 8001654:	781b      	ldrb	r3, [r3, #0]
 8001656:	60fb      	str	r3, [r7, #12]
		array[i] = array[j];
 8001658:	693b      	ldr	r3, [r7, #16]
 800165a:	687a      	ldr	r2, [r7, #4]
 800165c:	18d2      	adds	r2, r2, r3
 800165e:	697b      	ldr	r3, [r7, #20]
 8001660:	6879      	ldr	r1, [r7, #4]
 8001662:	18cb      	adds	r3, r1, r3
 8001664:	7812      	ldrb	r2, [r2, #0]
 8001666:	701a      	strb	r2, [r3, #0]
		array[j] = temp;
 8001668:	693b      	ldr	r3, [r7, #16]
 800166a:	687a      	ldr	r2, [r7, #4]
 800166c:	18d3      	adds	r3, r2, r3
 800166e:	68fa      	ldr	r2, [r7, #12]
 8001670:	b2d2      	uxtb	r2, r2
 8001672:	701a      	strb	r2, [r3, #0]
	for (int i = size - 1; i > 0; i--) {
 8001674:	697b      	ldr	r3, [r7, #20]
 8001676:	3b01      	subs	r3, #1
 8001678:	617b      	str	r3, [r7, #20]
 800167a:	697b      	ldr	r3, [r7, #20]
 800167c:	2b00      	cmp	r3, #0
 800167e:	dcdb      	bgt.n	8001638 <shuffle+0x18>
	}
}
 8001680:	46c0      	nop			@ (mov r8, r8)
 8001682:	46c0      	nop			@ (mov r8, r8)
 8001684:	46bd      	mov	sp, r7
 8001686:	b006      	add	sp, #24
 8001688:	bd80      	pop	{r7, pc}
	...

0800168c <ShiftOut>:

void ShiftOut(uint16_t data)
{
 800168c:	b580      	push	{r7, lr}
 800168e:	b084      	sub	sp, #16
 8001690:	af00      	add	r7, sp, #0
 8001692:	0002      	movs	r2, r0
 8001694:	1dbb      	adds	r3, r7, #6
 8001696:	801a      	strh	r2, [r3, #0]
	for (int i = 0; i < 16; i++)
 8001698:	2300      	movs	r3, #0
 800169a:	60fb      	str	r3, [r7, #12]
 800169c:	e021      	b.n	80016e2 <ShiftOut+0x56>
	{
		HAL_GPIO_WritePin(SER_GPIO_Port, SER_Pin, (data & (1 << (15 - i))) ? 1 : 0);
 800169e:	1dbb      	adds	r3, r7, #6
 80016a0:	881a      	ldrh	r2, [r3, #0]
 80016a2:	68fb      	ldr	r3, [r7, #12]
 80016a4:	210f      	movs	r1, #15
 80016a6:	1acb      	subs	r3, r1, r3
 80016a8:	411a      	asrs	r2, r3
 80016aa:	0013      	movs	r3, r2
 80016ac:	b2db      	uxtb	r3, r3
 80016ae:	2201      	movs	r2, #1
 80016b0:	4013      	ands	r3, r2
 80016b2:	b2da      	uxtb	r2, r3
 80016b4:	2380      	movs	r3, #128	@ 0x80
 80016b6:	019b      	lsls	r3, r3, #6
 80016b8:	4814      	ldr	r0, [pc, #80]	@ (800170c <ShiftOut+0x80>)
 80016ba:	0019      	movs	r1, r3
 80016bc:	f001 fa57 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(CLK_GPIO_Port, CLK_Pin, 1);
 80016c0:	2380      	movs	r3, #128	@ 0x80
 80016c2:	021b      	lsls	r3, r3, #8
 80016c4:	4811      	ldr	r0, [pc, #68]	@ (800170c <ShiftOut+0x80>)
 80016c6:	2201      	movs	r2, #1
 80016c8:	0019      	movs	r1, r3
 80016ca:	f001 fa50 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(CLK_GPIO_Port, CLK_Pin, 0);
 80016ce:	2380      	movs	r3, #128	@ 0x80
 80016d0:	021b      	lsls	r3, r3, #8
 80016d2:	480e      	ldr	r0, [pc, #56]	@ (800170c <ShiftOut+0x80>)
 80016d4:	2200      	movs	r2, #0
 80016d6:	0019      	movs	r1, r3
 80016d8:	f001 fa49 	bl	8002b6e <HAL_GPIO_WritePin>
	for (int i = 0; i < 16; i++)
 80016dc:	68fb      	ldr	r3, [r7, #12]
 80016de:	3301      	adds	r3, #1
 80016e0:	60fb      	str	r3, [r7, #12]
 80016e2:	68fb      	ldr	r3, [r7, #12]
 80016e4:	2b0f      	cmp	r3, #15
 80016e6:	ddda      	ble.n	800169e <ShiftOut+0x12>
	}
	HAL_GPIO_WritePin(LATCH_GPIO_Port, LATCH_Pin, 1);
 80016e8:	2380      	movs	r3, #128	@ 0x80
 80016ea:	01db      	lsls	r3, r3, #7
 80016ec:	4807      	ldr	r0, [pc, #28]	@ (800170c <ShiftOut+0x80>)
 80016ee:	2201      	movs	r2, #1
 80016f0:	0019      	movs	r1, r3
 80016f2:	f001 fa3c 	bl	8002b6e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LATCH_GPIO_Port, LATCH_Pin, 0);
 80016f6:	2380      	movs	r3, #128	@ 0x80
 80016f8:	01db      	lsls	r3, r3, #7
 80016fa:	4804      	ldr	r0, [pc, #16]	@ (800170c <ShiftOut+0x80>)
 80016fc:	2200      	movs	r2, #0
 80016fe:	0019      	movs	r1, r3
 8001700:	f001 fa35 	bl	8002b6e <HAL_GPIO_WritePin>
}
 8001704:	46c0      	nop			@ (mov r8, r8)
 8001706:	46bd      	mov	sp, r7
 8001708:	b004      	add	sp, #16
 800170a:	bd80      	pop	{r7, pc}
 800170c:	48000800 	.word	0x48000800

08001710 <button_Click>:

void button_Click()
{
 8001710:	b580      	push	{r7, lr}
 8001712:	b082      	sub	sp, #8
 8001714:	af00      	add	r7, sp, #0
	DF_Choose(2);
 8001716:	2002      	movs	r0, #2
 8001718:	f7fe ff00 	bl	800051c <DF_Choose>
	for(int i = 3; i>=0; i--)
 800171c:	2303      	movs	r3, #3
 800171e:	607b      	str	r3, [r7, #4]
 8001720:	e00b      	b.n	800173a <button_Click+0x2a>
	{
		segment_Update(i);
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	0018      	movs	r0, r3
 8001726:	f7ff fc2d 	bl	8000f84 <segment_Update>
		HAL_Delay(1000);
 800172a:	23fa      	movs	r3, #250	@ 0xfa
 800172c:	009b      	lsls	r3, r3, #2
 800172e:	0018      	movs	r0, r3
 8001730:	f000 fd82 	bl	8002238 <HAL_Delay>
	for(int i = 3; i>=0; i--)
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	3b01      	subs	r3, #1
 8001738:	607b      	str	r3, [r7, #4]
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	2b00      	cmp	r3, #0
 800173e:	daf0      	bge.n	8001722 <button_Click+0x12>
	}
	segment_Update(NONE);
 8001740:	200a      	movs	r0, #10
 8001742:	f7ff fc1f 	bl	8000f84 <segment_Update>
	game_State=playing_Game;
 8001746:	4b03      	ldr	r3, [pc, #12]	@ (8001754 <button_Click+0x44>)
 8001748:	2202      	movs	r2, #2
 800174a:	701a      	strb	r2, [r3, #0]
}
 800174c:	46c0      	nop			@ (mov r8, r8)
 800174e:	46bd      	mov	sp, r7
 8001750:	b002      	add	sp, #8
 8001752:	bd80      	pop	{r7, pc}
 8001754:	200000a9 	.word	0x200000a9

08001758 <start_Game>:

void start_Game()
{
 8001758:	b580      	push	{r7, lr}
 800175a:	b082      	sub	sp, #8
 800175c:	af00      	add	r7, sp, #0
	DF_Choose(1);
 800175e:	2001      	movs	r0, #1
 8001760:	f7fe fedc 	bl	800051c <DF_Choose>

	for(int i = 0; i<16; i++)
 8001764:	2300      	movs	r3, #0
 8001766:	607b      	str	r3, [r7, #4]
 8001768:	e020      	b.n	80017ac <start_Game+0x54>
	{

		data = data & (~(1 << randomNumber[i]));
 800176a:	4a1b      	ldr	r2, [pc, #108]	@ (80017d8 <start_Game+0x80>)
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	18d3      	adds	r3, r2, r3
 8001770:	781b      	ldrb	r3, [r3, #0]
 8001772:	001a      	movs	r2, r3
 8001774:	2301      	movs	r3, #1
 8001776:	4093      	lsls	r3, r2
 8001778:	b21b      	sxth	r3, r3
 800177a:	43db      	mvns	r3, r3
 800177c:	b21b      	sxth	r3, r3
 800177e:	4a17      	ldr	r2, [pc, #92]	@ (80017dc <start_Game+0x84>)
 8001780:	8812      	ldrh	r2, [r2, #0]
 8001782:	b212      	sxth	r2, r2
 8001784:	4013      	ands	r3, r2
 8001786:	b21b      	sxth	r3, r3
 8001788:	b29a      	uxth	r2, r3
 800178a:	4b14      	ldr	r3, [pc, #80]	@ (80017dc <start_Game+0x84>)
 800178c:	801a      	strh	r2, [r3, #0]
		segment_Update(randomNumber[i]);
 800178e:	4a12      	ldr	r2, [pc, #72]	@ (80017d8 <start_Game+0x80>)
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	18d3      	adds	r3, r2, r3
 8001794:	781b      	ldrb	r3, [r3, #0]
 8001796:	0018      	movs	r0, r3
 8001798:	f7ff fbf4 	bl	8000f84 <segment_Update>
		HAL_Delay(1000);
 800179c:	23fa      	movs	r3, #250	@ 0xfa
 800179e:	009b      	lsls	r3, r3, #2
 80017a0:	0018      	movs	r0, r3
 80017a2:	f000 fd49 	bl	8002238 <HAL_Delay>
	for(int i = 0; i<16; i++)
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	3301      	adds	r3, #1
 80017aa:	607b      	str	r3, [r7, #4]
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	2b0f      	cmp	r3, #15
 80017b0:	dddb      	ble.n	800176a <start_Game+0x12>
	}

	segment_Update(NONE);
 80017b2:	200a      	movs	r0, #10
 80017b4:	f7ff fbe6 	bl	8000f84 <segment_Update>
	DF_Pause();
 80017b8:	f7fe fee2 	bl	8000580 <DF_Pause>
	data=0xffff;
 80017bc:	4b07      	ldr	r3, [pc, #28]	@ (80017dc <start_Game+0x84>)
 80017be:	2201      	movs	r2, #1
 80017c0:	4252      	negs	r2, r2
 80017c2:	801a      	strh	r2, [r3, #0]
	remote_pressed=0;
 80017c4:	4b06      	ldr	r3, [pc, #24]	@ (80017e0 <start_Game+0x88>)
 80017c6:	2200      	movs	r2, #0
 80017c8:	701a      	strb	r2, [r3, #0]
	game_State=waiting_For_Start;
 80017ca:	4b06      	ldr	r3, [pc, #24]	@ (80017e4 <start_Game+0x8c>)
 80017cc:	2200      	movs	r2, #0
 80017ce:	701a      	strb	r2, [r3, #0]
}
 80017d0:	46c0      	nop			@ (mov r8, r8)
 80017d2:	46bd      	mov	sp, r7
 80017d4:	b002      	add	sp, #8
 80017d6:	bd80      	pop	{r7, pc}
 80017d8:	20000000 	.word	0x20000000
 80017dc:	20000010 	.word	0x20000010
 80017e0:	200000b3 	.word	0x200000b3
 80017e4:	200000a9 	.word	0x200000a9

080017e8 <blinking>:

void blinking()
{
 80017e8:	b580      	push	{r7, lr}
 80017ea:	b082      	sub	sp, #8
 80017ec:	af00      	add	r7, sp, #0
	for(int i=0;i<=5;i++)
 80017ee:	2300      	movs	r3, #0
 80017f0:	607b      	str	r3, [r7, #4]
 80017f2:	e016      	b.n	8001822 <blinking+0x3a>
	{
		HAL_GPIO_WritePin(MCU_LED_GPIO_Port, MCU_LED_Pin, 1);
 80017f4:	2380      	movs	r3, #128	@ 0x80
 80017f6:	015b      	lsls	r3, r3, #5
 80017f8:	480e      	ldr	r0, [pc, #56]	@ (8001834 <blinking+0x4c>)
 80017fa:	2201      	movs	r2, #1
 80017fc:	0019      	movs	r1, r3
 80017fe:	f001 f9b6 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_Delay(75);
 8001802:	204b      	movs	r0, #75	@ 0x4b
 8001804:	f000 fd18 	bl	8002238 <HAL_Delay>
		HAL_GPIO_WritePin(MCU_LED_GPIO_Port, MCU_LED_Pin, 0);
 8001808:	2380      	movs	r3, #128	@ 0x80
 800180a:	015b      	lsls	r3, r3, #5
 800180c:	4809      	ldr	r0, [pc, #36]	@ (8001834 <blinking+0x4c>)
 800180e:	2200      	movs	r2, #0
 8001810:	0019      	movs	r1, r3
 8001812:	f001 f9ac 	bl	8002b6e <HAL_GPIO_WritePin>
		HAL_Delay(75);
 8001816:	204b      	movs	r0, #75	@ 0x4b
 8001818:	f000 fd0e 	bl	8002238 <HAL_Delay>
	for(int i=0;i<=5;i++)
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	3301      	adds	r3, #1
 8001820:	607b      	str	r3, [r7, #4]
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	2b05      	cmp	r3, #5
 8001826:	dde5      	ble.n	80017f4 <blinking+0xc>
	}
}
 8001828:	46c0      	nop			@ (mov r8, r8)
 800182a:	46c0      	nop			@ (mov r8, r8)
 800182c:	46bd      	mov	sp, r7
 800182e:	b002      	add	sp, #8
 8001830:	bd80      	pop	{r7, pc}
 8001832:	46c0      	nop			@ (mov r8, r8)
 8001834:	48000400 	.word	0x48000400

08001838 <check_And_Learn_Ask>:

void check_And_Learn_Ask()
{
 8001838:	b580      	push	{r7, lr}
 800183a:	af00      	add	r7, sp, #0
	ask_loop(&rf433);
 800183c:	4b40      	ldr	r3, [pc, #256]	@ (8001940 <check_And_Learn_Ask+0x108>)
 800183e:	0018      	movs	r0, r3
 8001840:	f7ff f808 	bl	8000854 <ask_loop>
	if (ask_available(&rf433))
 8001844:	4b3e      	ldr	r3, [pc, #248]	@ (8001940 <check_And_Learn_Ask+0x108>)
 8001846:	0018      	movs	r0, r3
 8001848:	f7ff f992 	bl	8000b70 <ask_available>
 800184c:	1e03      	subs	r3, r0, #0
 800184e:	d029      	beq.n	80018a4 <check_And_Learn_Ask+0x6c>
	{
		ask_read(&rf433, code, NULL, NULL);
 8001850:	493c      	ldr	r1, [pc, #240]	@ (8001944 <check_And_Learn_Ask+0x10c>)
 8001852:	483b      	ldr	r0, [pc, #236]	@ (8001940 <check_And_Learn_Ask+0x108>)
 8001854:	2300      	movs	r3, #0
 8001856:	2200      	movs	r2, #0
 8001858:	f7ff f9b4 	bl	8000bc4 <ask_read>
		if(ask_code_in_flash == (code[0] | (code[1] << 8) | (0x00 << 16)))
 800185c:	4b39      	ldr	r3, [pc, #228]	@ (8001944 <check_And_Learn_Ask+0x10c>)
 800185e:	781b      	ldrb	r3, [r3, #0]
 8001860:	001a      	movs	r2, r3
 8001862:	4b38      	ldr	r3, [pc, #224]	@ (8001944 <check_And_Learn_Ask+0x10c>)
 8001864:	785b      	ldrb	r3, [r3, #1]
 8001866:	021b      	lsls	r3, r3, #8
 8001868:	431a      	orrs	r2, r3
 800186a:	4b37      	ldr	r3, [pc, #220]	@ (8001948 <check_And_Learn_Ask+0x110>)
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	429a      	cmp	r2, r3
 8001870:	d10d      	bne.n	800188e <check_And_Learn_Ask+0x56>
		{
			HAL_GPIO_WritePin(MCU_LED_GPIO_Port, MCU_LED_Pin, 1);
 8001872:	2380      	movs	r3, #128	@ 0x80
 8001874:	015b      	lsls	r3, r3, #5
 8001876:	4835      	ldr	r0, [pc, #212]	@ (800194c <check_And_Learn_Ask+0x114>)
 8001878:	2201      	movs	r2, #1
 800187a:	0019      	movs	r1, r3
 800187c:	f001 f977 	bl	8002b6e <HAL_GPIO_WritePin>
			remote_pressed = true;
 8001880:	4b33      	ldr	r3, [pc, #204]	@ (8001950 <check_And_Learn_Ask+0x118>)
 8001882:	2201      	movs	r2, #1
 8001884:	701a      	strb	r2, [r3, #0]
			HAL_Delay(5);
 8001886:	2005      	movs	r0, #5
 8001888:	f000 fcd6 	bl	8002238 <HAL_Delay>
 800188c:	e011      	b.n	80018b2 <check_And_Learn_Ask+0x7a>
		}
		else
		{
			remote_pressed = false;
 800188e:	4b30      	ldr	r3, [pc, #192]	@ (8001950 <check_And_Learn_Ask+0x118>)
 8001890:	2200      	movs	r2, #0
 8001892:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(MCU_LED_GPIO_Port, MCU_LED_Pin, 0);
 8001894:	2380      	movs	r3, #128	@ 0x80
 8001896:	015b      	lsls	r3, r3, #5
 8001898:	482c      	ldr	r0, [pc, #176]	@ (800194c <check_And_Learn_Ask+0x114>)
 800189a:	2200      	movs	r2, #0
 800189c:	0019      	movs	r1, r3
 800189e:	f001 f966 	bl	8002b6e <HAL_GPIO_WritePin>
 80018a2:	e006      	b.n	80018b2 <check_And_Learn_Ask+0x7a>
		}

	}
	else
		HAL_GPIO_WritePin(MCU_LED_GPIO_Port, MCU_LED_Pin, 0);
 80018a4:	2380      	movs	r3, #128	@ 0x80
 80018a6:	015b      	lsls	r3, r3, #5
 80018a8:	4828      	ldr	r0, [pc, #160]	@ (800194c <check_And_Learn_Ask+0x114>)
 80018aa:	2200      	movs	r2, #0
 80018ac:	0019      	movs	r1, r3
 80018ae:	f001 f95e 	bl	8002b6e <HAL_GPIO_WritePin>

	if(ask_learning_state == idle)	// Learn Procedure ...
 80018b2:	4b28      	ldr	r3, [pc, #160]	@ (8001954 <check_And_Learn_Ask+0x11c>)
 80018b4:	781b      	ldrb	r3, [r3, #0]
 80018b6:	2b00      	cmp	r3, #0
 80018b8:	d10d      	bne.n	80018d6 <check_And_Learn_Ask+0x9e>
	{
		if(!HAL_GPIO_ReadPin(Ext_BTN_GPIO_Port, Ext_BTN_Pin))
 80018ba:	4b27      	ldr	r3, [pc, #156]	@ (8001958 <check_And_Learn_Ask+0x120>)
 80018bc:	2102      	movs	r1, #2
 80018be:	0018      	movs	r0, r3
 80018c0:	f001 f938 	bl	8002b34 <HAL_GPIO_ReadPin>
 80018c4:	1e03      	subs	r3, r0, #0
 80018c6:	d138      	bne.n	800193a <check_And_Learn_Ask+0x102>
		{
			timer=0;
 80018c8:	4b24      	ldr	r3, [pc, #144]	@ (800195c <check_And_Learn_Ask+0x124>)
 80018ca:	2200      	movs	r2, #0
 80018cc:	701a      	strb	r2, [r3, #0]
			ask_learning_state = learning;
 80018ce:	4b21      	ldr	r3, [pc, #132]	@ (8001954 <check_And_Learn_Ask+0x11c>)
 80018d0:	2201      	movs	r2, #1
 80018d2:	701a      	strb	r2, [r3, #0]
	{
		// wait for BTN to release
		if(HAL_GPIO_ReadPin(Ext_BTN_GPIO_Port, Ext_BTN_Pin))
			ask_learning_state = idle;
	}
}
 80018d4:	e031      	b.n	800193a <check_And_Learn_Ask+0x102>
	else if(ask_learning_state == learning)
 80018d6:	4b1f      	ldr	r3, [pc, #124]	@ (8001954 <check_And_Learn_Ask+0x11c>)
 80018d8:	781b      	ldrb	r3, [r3, #0]
 80018da:	2b01      	cmp	r3, #1
 80018dc:	d123      	bne.n	8001926 <check_And_Learn_Ask+0xee>
		if(timer==35)// wait for 5 seconds
 80018de:	4b1f      	ldr	r3, [pc, #124]	@ (800195c <check_And_Learn_Ask+0x124>)
 80018e0:	781b      	ldrb	r3, [r3, #0]
 80018e2:	2b23      	cmp	r3, #35	@ 0x23
 80018e4:	d114      	bne.n	8001910 <check_And_Learn_Ask+0xd8>
			ask_code_in_flash = code[0] | (code[1] << 8) | (0x00 << 16);
 80018e6:	4b17      	ldr	r3, [pc, #92]	@ (8001944 <check_And_Learn_Ask+0x10c>)
 80018e8:	781b      	ldrb	r3, [r3, #0]
 80018ea:	001a      	movs	r2, r3
 80018ec:	4b15      	ldr	r3, [pc, #84]	@ (8001944 <check_And_Learn_Ask+0x10c>)
 80018ee:	785b      	ldrb	r3, [r3, #1]
 80018f0:	021b      	lsls	r3, r3, #8
 80018f2:	4313      	orrs	r3, r2
 80018f4:	001a      	movs	r2, r3
 80018f6:	4b14      	ldr	r3, [pc, #80]	@ (8001948 <check_And_Learn_Ask+0x110>)
 80018f8:	601a      	str	r2, [r3, #0]
			blinking();
 80018fa:	f7ff ff75 	bl	80017e8 <blinking>
			Flash_Write_Data(0x08007000, &ask_code_in_flash, 1);
 80018fe:	4b12      	ldr	r3, [pc, #72]	@ (8001948 <check_And_Learn_Ask+0x110>)
 8001900:	4817      	ldr	r0, [pc, #92]	@ (8001960 <check_And_Learn_Ask+0x128>)
 8001902:	2201      	movs	r2, #1
 8001904:	0019      	movs	r1, r3
 8001906:	f7fe fe75 	bl	80005f4 <Flash_Write_Data>
			ask_learning_state = learned;
 800190a:	4b12      	ldr	r3, [pc, #72]	@ (8001954 <check_And_Learn_Ask+0x11c>)
 800190c:	2202      	movs	r2, #2
 800190e:	701a      	strb	r2, [r3, #0]
		if(HAL_GPIO_ReadPin(Ext_BTN_GPIO_Port, Ext_BTN_Pin))	// BTN is released, learning procedure failed
 8001910:	4b11      	ldr	r3, [pc, #68]	@ (8001958 <check_And_Learn_Ask+0x120>)
 8001912:	2102      	movs	r1, #2
 8001914:	0018      	movs	r0, r3
 8001916:	f001 f90d 	bl	8002b34 <HAL_GPIO_ReadPin>
 800191a:	1e03      	subs	r3, r0, #0
 800191c:	d00d      	beq.n	800193a <check_And_Learn_Ask+0x102>
			ask_learning_state = idle;
 800191e:	4b0d      	ldr	r3, [pc, #52]	@ (8001954 <check_And_Learn_Ask+0x11c>)
 8001920:	2200      	movs	r2, #0
 8001922:	701a      	strb	r2, [r3, #0]
}
 8001924:	e009      	b.n	800193a <check_And_Learn_Ask+0x102>
		if(HAL_GPIO_ReadPin(Ext_BTN_GPIO_Port, Ext_BTN_Pin))
 8001926:	4b0c      	ldr	r3, [pc, #48]	@ (8001958 <check_And_Learn_Ask+0x120>)
 8001928:	2102      	movs	r1, #2
 800192a:	0018      	movs	r0, r3
 800192c:	f001 f902 	bl	8002b34 <HAL_GPIO_ReadPin>
 8001930:	1e03      	subs	r3, r0, #0
 8001932:	d002      	beq.n	800193a <check_And_Learn_Ask+0x102>
			ask_learning_state = idle;
 8001934:	4b07      	ldr	r3, [pc, #28]	@ (8001954 <check_And_Learn_Ask+0x11c>)
 8001936:	2200      	movs	r2, #0
 8001938:	701a      	strb	r2, [r3, #0]
}
 800193a:	46c0      	nop			@ (mov r8, r8)
 800193c:	46bd      	mov	sp, r7
 800193e:	bd80      	pop	{r7, pc}
 8001940:	200000b4 	.word	0x200000b4
 8001944:	2000010c 	.word	0x2000010c
 8001948:	20000108 	.word	0x20000108
 800194c:	48000400 	.word	0x48000400
 8001950:	200000b3 	.word	0x200000b3
 8001954:	200000a8 	.word	0x200000a8
 8001958:	48001400 	.word	0x48001400
 800195c:	200000b2 	.word	0x200000b2
 8001960:	08007000 	.word	0x08007000

08001964 <timer_Update>:

void timer_Update()
{
 8001964:	b580      	push	{r7, lr}
 8001966:	af00      	add	r7, sp, #0
	if(htim14.Instance->CNT>150)
 8001968:	4b0b      	ldr	r3, [pc, #44]	@ (8001998 <timer_Update+0x34>)
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800196e:	2b96      	cmp	r3, #150	@ 0x96
 8001970:	d90f      	bls.n	8001992 <timer_Update+0x2e>
	{
		htim14.Instance->CNT=0;
 8001972:	4b09      	ldr	r3, [pc, #36]	@ (8001998 <timer_Update+0x34>)
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	2200      	movs	r2, #0
 8001978:	625a      	str	r2, [r3, #36]	@ 0x24
		state_Of_Segment++;
 800197a:	4b08      	ldr	r3, [pc, #32]	@ (800199c <timer_Update+0x38>)
 800197c:	781b      	ldrb	r3, [r3, #0]
 800197e:	3301      	adds	r3, #1
 8001980:	b2da      	uxtb	r2, r3
 8001982:	4b06      	ldr	r3, [pc, #24]	@ (800199c <timer_Update+0x38>)
 8001984:	701a      	strb	r2, [r3, #0]
		timer++;
 8001986:	4b06      	ldr	r3, [pc, #24]	@ (80019a0 <timer_Update+0x3c>)
 8001988:	781b      	ldrb	r3, [r3, #0]
 800198a:	3301      	adds	r3, #1
 800198c:	b2da      	uxtb	r2, r3
 800198e:	4b04      	ldr	r3, [pc, #16]	@ (80019a0 <timer_Update+0x3c>)
 8001990:	701a      	strb	r2, [r3, #0]
	}
}
 8001992:	46c0      	nop			@ (mov r8, r8)
 8001994:	46bd      	mov	sp, r7
 8001996:	bd80      	pop	{r7, pc}
 8001998:	200001a4 	.word	0x200001a4
 800199c:	200000b1 	.word	0x200000b1
 80019a0:	200000b2 	.word	0x200000b2

080019a4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80019a4:	b580      	push	{r7, lr}
 80019a6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80019a8:	f000 fbe2 	bl	8002170 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80019ac:	f000 f866 	bl	8001a7c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80019b0:	f7ff f966 	bl	8000c80 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80019b4:	f000 fb36 	bl	8002024 <MX_USART2_UART_Init>
  MX_TIM3_Init();
 80019b8:	f000 f9d4 	bl	8001d64 <MX_TIM3_Init>
  MX_TIM15_Init();
 80019bc:	f000 fa74 	bl	8001ea8 <MX_TIM15_Init>
  MX_TIM6_Init();
 80019c0:	f000 fa26 	bl	8001e10 <MX_TIM6_Init>
  MX_TIM14_Init();
 80019c4:	f000 fa48 	bl	8001e58 <MX_TIM14_Init>
  /* USER CODE BEGIN 2 */
	DF_Init(30);
 80019c8:	201e      	movs	r0, #30
 80019ca:	f7fe fdbb 	bl	8000544 <DF_Init>
	HAL_TIM_Base_Start(&htim3);
 80019ce:	4b22      	ldr	r3, [pc, #136]	@ (8001a58 <main+0xb4>)
 80019d0:	0018      	movs	r0, r3
 80019d2:	f001 fdb3 	bl	800353c <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start_IT(&htim15);
 80019d6:	4b21      	ldr	r3, [pc, #132]	@ (8001a5c <main+0xb8>)
 80019d8:	0018      	movs	r0, r3
 80019da:	f001 fdf3 	bl	80035c4 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start(&htim14);
 80019de:	4b20      	ldr	r3, [pc, #128]	@ (8001a60 <main+0xbc>)
 80019e0:	0018      	movs	r0, r3
 80019e2:	f001 fdab 	bl	800353c <HAL_TIM_Base_Start>
	seed = __HAL_TIM_GET_COUNTER(&htim3);
 80019e6:	4b1c      	ldr	r3, [pc, #112]	@ (8001a58 <main+0xb4>)
 80019e8:	681b      	ldr	r3, [r3, #0]
 80019ea:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80019ec:	4b1d      	ldr	r3, [pc, #116]	@ (8001a64 <main+0xc0>)
 80019ee:	601a      	str	r2, [r3, #0]
	srand(seed);
 80019f0:	4b1c      	ldr	r3, [pc, #112]	@ (8001a64 <main+0xc0>)
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	0018      	movs	r0, r3
 80019f6:	f002 fdfd 	bl	80045f4 <srand>
	reset_Shift_Register();
 80019fa:	f7ff fa7d 	bl	8000ef8 <reset_Shift_Register>
	ask_init(&rf433,ASK_IN_SIG_GPIO_Port,ASK_IN_SIG_Pin);
 80019fe:	2390      	movs	r3, #144	@ 0x90
 8001a00:	05d9      	lsls	r1, r3, #23
 8001a02:	4b19      	ldr	r3, [pc, #100]	@ (8001a68 <main+0xc4>)
 8001a04:	2202      	movs	r2, #2
 8001a06:	0018      	movs	r0, r3
 8001a08:	f7fe fe74 	bl	80006f4 <ask_init>
	Flash_Read_Data(0x08007000, &ask_code_in_flash, 1);	// Read ASK code in Flash
 8001a0c:	4b17      	ldr	r3, [pc, #92]	@ (8001a6c <main+0xc8>)
 8001a0e:	4818      	ldr	r0, [pc, #96]	@ (8001a70 <main+0xcc>)
 8001a10:	2201      	movs	r2, #1
 8001a12:	0019      	movs	r1, r3
 8001a14:	f7fe fe50 	bl	80006b8 <Flash_Read_Data>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		// Receive the ask code
			check_And_Learn_Ask();
 8001a18:	f7ff ff0e 	bl	8001838 <check_And_Learn_Ask>



				if(game_State==waiting_For_Start)//check coin & ask & start button
 8001a1c:	4b15      	ldr	r3, [pc, #84]	@ (8001a74 <main+0xd0>)
 8001a1e:	781b      	ldrb	r3, [r3, #0]
 8001a20:	2b00      	cmp	r3, #0
 8001a22:	d10a      	bne.n	8001a3a <main+0x96>
				{
					timer_Update();
 8001a24:	f7ff ff9e 	bl	8001964 <timer_Update>
					segment_Update(E);
 8001a28:	2063      	movs	r0, #99	@ 0x63
 8001a2a:	f7ff faab 	bl	8000f84 <segment_Update>
					shuffle(randomNumber, 16);
 8001a2e:	4b12      	ldr	r3, [pc, #72]	@ (8001a78 <main+0xd4>)
 8001a30:	2110      	movs	r1, #16
 8001a32:	0018      	movs	r0, r3
 8001a34:	f7ff fdf4 	bl	8001620 <shuffle>
 8001a38:	e7ee      	b.n	8001a18 <main+0x74>
				}
				else if(game_State==button_Clicked)
 8001a3a:	4b0e      	ldr	r3, [pc, #56]	@ (8001a74 <main+0xd0>)
 8001a3c:	781b      	ldrb	r3, [r3, #0]
 8001a3e:	2b01      	cmp	r3, #1
 8001a40:	d102      	bne.n	8001a48 <main+0xa4>
					button_Click();
 8001a42:	f7ff fe65 	bl	8001710 <button_Click>
 8001a46:	e7e7      	b.n	8001a18 <main+0x74>

				else if(game_State==playing_Game)
 8001a48:	4b0a      	ldr	r3, [pc, #40]	@ (8001a74 <main+0xd0>)
 8001a4a:	781b      	ldrb	r3, [r3, #0]
 8001a4c:	2b02      	cmp	r3, #2
 8001a4e:	d1e3      	bne.n	8001a18 <main+0x74>
					start_Game();
 8001a50:	f7ff fe82 	bl	8001758 <start_Game>
			check_And_Learn_Ask();
 8001a54:	e7e0      	b.n	8001a18 <main+0x74>
 8001a56:	46c0      	nop			@ (mov r8, r8)
 8001a58:	20000114 	.word	0x20000114
 8001a5c:	200001ec 	.word	0x200001ec
 8001a60:	200001a4 	.word	0x200001a4
 8001a64:	200000ac 	.word	0x200000ac
 8001a68:	200000b4 	.word	0x200000b4
 8001a6c:	20000108 	.word	0x20000108
 8001a70:	08007000 	.word	0x08007000
 8001a74:	200000a9 	.word	0x200000a9
 8001a78:	20000000 	.word	0x20000000

08001a7c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001a7c:	b590      	push	{r4, r7, lr}
 8001a7e:	b091      	sub	sp, #68	@ 0x44
 8001a80:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a82:	2410      	movs	r4, #16
 8001a84:	193b      	adds	r3, r7, r4
 8001a86:	0018      	movs	r0, r3
 8001a88:	2330      	movs	r3, #48	@ 0x30
 8001a8a:	001a      	movs	r2, r3
 8001a8c:	2100      	movs	r1, #0
 8001a8e:	f002 ff3d 	bl	800490c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a92:	003b      	movs	r3, r7
 8001a94:	0018      	movs	r0, r3
 8001a96:	2310      	movs	r3, #16
 8001a98:	001a      	movs	r2, r3
 8001a9a:	2100      	movs	r1, #0
 8001a9c:	f002 ff36 	bl	800490c <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001aa0:	0021      	movs	r1, r4
 8001aa2:	187b      	adds	r3, r7, r1
 8001aa4:	2202      	movs	r2, #2
 8001aa6:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001aa8:	187b      	adds	r3, r7, r1
 8001aaa:	2201      	movs	r2, #1
 8001aac:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001aae:	187b      	adds	r3, r7, r1
 8001ab0:	2210      	movs	r2, #16
 8001ab2:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001ab4:	187b      	adds	r3, r7, r1
 8001ab6:	2202      	movs	r2, #2
 8001ab8:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001aba:	187b      	adds	r3, r7, r1
 8001abc:	2200      	movs	r2, #0
 8001abe:	625a      	str	r2, [r3, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8001ac0:	187b      	adds	r3, r7, r1
 8001ac2:	22a0      	movs	r2, #160	@ 0xa0
 8001ac4:	0392      	lsls	r2, r2, #14
 8001ac6:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 8001ac8:	187b      	adds	r3, r7, r1
 8001aca:	2200      	movs	r2, #0
 8001acc:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ace:	187b      	adds	r3, r7, r1
 8001ad0:	0018      	movs	r0, r3
 8001ad2:	f001 f885 	bl	8002be0 <HAL_RCC_OscConfig>
 8001ad6:	1e03      	subs	r3, r0, #0
 8001ad8:	d001      	beq.n	8001ade <SystemClock_Config+0x62>
  {
    Error_Handler();
 8001ada:	f000 f819 	bl	8001b10 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001ade:	003b      	movs	r3, r7
 8001ae0:	2207      	movs	r2, #7
 8001ae2:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001ae4:	003b      	movs	r3, r7
 8001ae6:	2202      	movs	r2, #2
 8001ae8:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001aea:	003b      	movs	r3, r7
 8001aec:	2200      	movs	r2, #0
 8001aee:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001af0:	003b      	movs	r3, r7
 8001af2:	2200      	movs	r2, #0
 8001af4:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001af6:	003b      	movs	r3, r7
 8001af8:	2101      	movs	r1, #1
 8001afa:	0018      	movs	r0, r3
 8001afc:	f001 fb8a 	bl	8003214 <HAL_RCC_ClockConfig>
 8001b00:	1e03      	subs	r3, r0, #0
 8001b02:	d001      	beq.n	8001b08 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 8001b04:	f000 f804 	bl	8001b10 <Error_Handler>
  }
}
 8001b08:	46c0      	nop			@ (mov r8, r8)
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	b011      	add	sp, #68	@ 0x44
 8001b0e:	bd90      	pop	{r4, r7, pc}

08001b10 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001b10:	b580      	push	{r7, lr}
 8001b12:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001b14:	b672      	cpsid	i
}
 8001b16:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8001b18:	46c0      	nop			@ (mov r8, r8)
 8001b1a:	e7fd      	b.n	8001b18 <Error_Handler+0x8>

08001b1c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b1c:	b580      	push	{r7, lr}
 8001b1e:	b082      	sub	sp, #8
 8001b20:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b22:	4b0f      	ldr	r3, [pc, #60]	@ (8001b60 <HAL_MspInit+0x44>)
 8001b24:	699a      	ldr	r2, [r3, #24]
 8001b26:	4b0e      	ldr	r3, [pc, #56]	@ (8001b60 <HAL_MspInit+0x44>)
 8001b28:	2101      	movs	r1, #1
 8001b2a:	430a      	orrs	r2, r1
 8001b2c:	619a      	str	r2, [r3, #24]
 8001b2e:	4b0c      	ldr	r3, [pc, #48]	@ (8001b60 <HAL_MspInit+0x44>)
 8001b30:	699b      	ldr	r3, [r3, #24]
 8001b32:	2201      	movs	r2, #1
 8001b34:	4013      	ands	r3, r2
 8001b36:	607b      	str	r3, [r7, #4]
 8001b38:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b3a:	4b09      	ldr	r3, [pc, #36]	@ (8001b60 <HAL_MspInit+0x44>)
 8001b3c:	69da      	ldr	r2, [r3, #28]
 8001b3e:	4b08      	ldr	r3, [pc, #32]	@ (8001b60 <HAL_MspInit+0x44>)
 8001b40:	2180      	movs	r1, #128	@ 0x80
 8001b42:	0549      	lsls	r1, r1, #21
 8001b44:	430a      	orrs	r2, r1
 8001b46:	61da      	str	r2, [r3, #28]
 8001b48:	4b05      	ldr	r3, [pc, #20]	@ (8001b60 <HAL_MspInit+0x44>)
 8001b4a:	69da      	ldr	r2, [r3, #28]
 8001b4c:	2380      	movs	r3, #128	@ 0x80
 8001b4e:	055b      	lsls	r3, r3, #21
 8001b50:	4013      	ands	r3, r2
 8001b52:	603b      	str	r3, [r7, #0]
 8001b54:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b56:	46c0      	nop			@ (mov r8, r8)
 8001b58:	46bd      	mov	sp, r7
 8001b5a:	b002      	add	sp, #8
 8001b5c:	bd80      	pop	{r7, pc}
 8001b5e:	46c0      	nop			@ (mov r8, r8)
 8001b60:	40021000 	.word	0x40021000

08001b64 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001b64:	b580      	push	{r7, lr}
 8001b66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001b68:	46c0      	nop			@ (mov r8, r8)
 8001b6a:	e7fd      	b.n	8001b68 <NMI_Handler+0x4>

08001b6c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001b6c:	b580      	push	{r7, lr}
 8001b6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001b70:	46c0      	nop			@ (mov r8, r8)
 8001b72:	e7fd      	b.n	8001b70 <HardFault_Handler+0x4>

08001b74 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001b74:	b580      	push	{r7, lr}
 8001b76:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8001b78:	46c0      	nop			@ (mov r8, r8)
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	bd80      	pop	{r7, pc}

08001b7e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001b7e:	b580      	push	{r7, lr}
 8001b80:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001b82:	46c0      	nop			@ (mov r8, r8)
 8001b84:	46bd      	mov	sp, r7
 8001b86:	bd80      	pop	{r7, pc}

08001b88 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001b8c:	f000 fb38 	bl	8002200 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001b90:	46c0      	nop			@ (mov r8, r8)
 8001b92:	46bd      	mov	sp, r7
 8001b94:	bd80      	pop	{r7, pc}
	...

08001b98 <EXTI0_1_IRQHandler>:

/**
  * @brief This function handles EXTI line 0 and 1 interrupts.
  */
void EXTI0_1_IRQHandler(void)
{
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_1_IRQn 0 */

  /* USER CODE END EXTI0_1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(ASK_IN_SIG_Pin);
 8001b9c:	2002      	movs	r0, #2
 8001b9e:	f001 f803 	bl	8002ba8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_1_IRQn 1 */

  ask_callBackPinChange(&rf433);
 8001ba2:	4b03      	ldr	r3, [pc, #12]	@ (8001bb0 <EXTI0_1_IRQHandler+0x18>)
 8001ba4:	0018      	movs	r0, r3
 8001ba6:	f7fe fdd3 	bl	8000750 <ask_callBackPinChange>

  /* USER CODE END EXTI0_1_IRQn 1 */
}
 8001baa:	46c0      	nop			@ (mov r8, r8)
 8001bac:	46bd      	mov	sp, r7
 8001bae:	bd80      	pop	{r7, pc}
 8001bb0:	200000b4 	.word	0x200000b4

08001bb4 <EXTI2_3_IRQHandler>:

/**
  * @brief This function handles EXTI line 2 and 3 interrupts.
  */
void EXTI2_3_IRQHandler(void)
{
 8001bb4:	b580      	push	{r7, lr}
 8001bb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI2_3_IRQn 0 */

  /* USER CODE END EXTI2_3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Ext_IO3_Pin);
 8001bb8:	2004      	movs	r0, #4
 8001bba:	f000 fff5 	bl	8002ba8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_3_IRQn 1 */

  /* USER CODE END EXTI2_3_IRQn 1 */
}
 8001bbe:	46c0      	nop			@ (mov r8, r8)
 8001bc0:	46bd      	mov	sp, r7
 8001bc2:	bd80      	pop	{r7, pc}

08001bc4 <TIM15_IRQHandler>:

/**
  * @brief This function handles TIM15 global interrupt.
  */
void TIM15_IRQHandler(void)
{
 8001bc4:	b580      	push	{r7, lr}
 8001bc6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM15_IRQn 0 */

  /* USER CODE END TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim15);
 8001bc8:	4b03      	ldr	r3, [pc, #12]	@ (8001bd8 <TIM15_IRQHandler+0x14>)
 8001bca:	0018      	movs	r0, r3
 8001bcc:	f001 fd46 	bl	800365c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM15_IRQn 1 */

  /* USER CODE END TIM15_IRQn 1 */
}
 8001bd0:	46c0      	nop			@ (mov r8, r8)
 8001bd2:	46bd      	mov	sp, r7
 8001bd4:	bd80      	pop	{r7, pc}
 8001bd6:	46c0      	nop			@ (mov r8, r8)
 8001bd8:	200001ec 	.word	0x200001ec

08001bdc <_getpid>:
 8001bdc:	b580      	push	{r7, lr}
 8001bde:	af00      	add	r7, sp, #0
 8001be0:	2301      	movs	r3, #1
 8001be2:	0018      	movs	r0, r3
 8001be4:	46bd      	mov	sp, r7
 8001be6:	bd80      	pop	{r7, pc}

08001be8 <_kill>:
 8001be8:	b580      	push	{r7, lr}
 8001bea:	b082      	sub	sp, #8
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	6078      	str	r0, [r7, #4]
 8001bf0:	6039      	str	r1, [r7, #0]
 8001bf2:	f002 fee1 	bl	80049b8 <__errno>
 8001bf6:	0003      	movs	r3, r0
 8001bf8:	2216      	movs	r2, #22
 8001bfa:	601a      	str	r2, [r3, #0]
 8001bfc:	2301      	movs	r3, #1
 8001bfe:	425b      	negs	r3, r3
 8001c00:	0018      	movs	r0, r3
 8001c02:	46bd      	mov	sp, r7
 8001c04:	b002      	add	sp, #8
 8001c06:	bd80      	pop	{r7, pc}

08001c08 <_exit>:
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	b082      	sub	sp, #8
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	6078      	str	r0, [r7, #4]
 8001c10:	2301      	movs	r3, #1
 8001c12:	425a      	negs	r2, r3
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	0011      	movs	r1, r2
 8001c18:	0018      	movs	r0, r3
 8001c1a:	f7ff ffe5 	bl	8001be8 <_kill>
 8001c1e:	46c0      	nop			@ (mov r8, r8)
 8001c20:	e7fd      	b.n	8001c1e <_exit+0x16>

08001c22 <_read>:
 8001c22:	b580      	push	{r7, lr}
 8001c24:	b086      	sub	sp, #24
 8001c26:	af00      	add	r7, sp, #0
 8001c28:	60f8      	str	r0, [r7, #12]
 8001c2a:	60b9      	str	r1, [r7, #8]
 8001c2c:	607a      	str	r2, [r7, #4]
 8001c2e:	2300      	movs	r3, #0
 8001c30:	617b      	str	r3, [r7, #20]
 8001c32:	e00a      	b.n	8001c4a <_read+0x28>
 8001c34:	e000      	b.n	8001c38 <_read+0x16>
 8001c36:	bf00      	nop
 8001c38:	0001      	movs	r1, r0
 8001c3a:	68bb      	ldr	r3, [r7, #8]
 8001c3c:	1c5a      	adds	r2, r3, #1
 8001c3e:	60ba      	str	r2, [r7, #8]
 8001c40:	b2ca      	uxtb	r2, r1
 8001c42:	701a      	strb	r2, [r3, #0]
 8001c44:	697b      	ldr	r3, [r7, #20]
 8001c46:	3301      	adds	r3, #1
 8001c48:	617b      	str	r3, [r7, #20]
 8001c4a:	697a      	ldr	r2, [r7, #20]
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	429a      	cmp	r2, r3
 8001c50:	dbf0      	blt.n	8001c34 <_read+0x12>
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	0018      	movs	r0, r3
 8001c56:	46bd      	mov	sp, r7
 8001c58:	b006      	add	sp, #24
 8001c5a:	bd80      	pop	{r7, pc}

08001c5c <_write>:
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b086      	sub	sp, #24
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	60f8      	str	r0, [r7, #12]
 8001c64:	60b9      	str	r1, [r7, #8]
 8001c66:	607a      	str	r2, [r7, #4]
 8001c68:	2300      	movs	r3, #0
 8001c6a:	617b      	str	r3, [r7, #20]
 8001c6c:	e009      	b.n	8001c82 <_write+0x26>
 8001c6e:	68bb      	ldr	r3, [r7, #8]
 8001c70:	1c5a      	adds	r2, r3, #1
 8001c72:	60ba      	str	r2, [r7, #8]
 8001c74:	781b      	ldrb	r3, [r3, #0]
 8001c76:	0018      	movs	r0, r3
 8001c78:	e000      	b.n	8001c7c <_write+0x20>
 8001c7a:	bf00      	nop
 8001c7c:	697b      	ldr	r3, [r7, #20]
 8001c7e:	3301      	adds	r3, #1
 8001c80:	617b      	str	r3, [r7, #20]
 8001c82:	697a      	ldr	r2, [r7, #20]
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	429a      	cmp	r2, r3
 8001c88:	dbf1      	blt.n	8001c6e <_write+0x12>
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	0018      	movs	r0, r3
 8001c8e:	46bd      	mov	sp, r7
 8001c90:	b006      	add	sp, #24
 8001c92:	bd80      	pop	{r7, pc}

08001c94 <_close>:
 8001c94:	b580      	push	{r7, lr}
 8001c96:	b082      	sub	sp, #8
 8001c98:	af00      	add	r7, sp, #0
 8001c9a:	6078      	str	r0, [r7, #4]
 8001c9c:	2301      	movs	r3, #1
 8001c9e:	425b      	negs	r3, r3
 8001ca0:	0018      	movs	r0, r3
 8001ca2:	46bd      	mov	sp, r7
 8001ca4:	b002      	add	sp, #8
 8001ca6:	bd80      	pop	{r7, pc}

08001ca8 <_fstat>:
 8001ca8:	b580      	push	{r7, lr}
 8001caa:	b082      	sub	sp, #8
 8001cac:	af00      	add	r7, sp, #0
 8001cae:	6078      	str	r0, [r7, #4]
 8001cb0:	6039      	str	r1, [r7, #0]
 8001cb2:	683b      	ldr	r3, [r7, #0]
 8001cb4:	2280      	movs	r2, #128	@ 0x80
 8001cb6:	0192      	lsls	r2, r2, #6
 8001cb8:	605a      	str	r2, [r3, #4]
 8001cba:	2300      	movs	r3, #0
 8001cbc:	0018      	movs	r0, r3
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	b002      	add	sp, #8
 8001cc2:	bd80      	pop	{r7, pc}

08001cc4 <_isatty>:
 8001cc4:	b580      	push	{r7, lr}
 8001cc6:	b082      	sub	sp, #8
 8001cc8:	af00      	add	r7, sp, #0
 8001cca:	6078      	str	r0, [r7, #4]
 8001ccc:	2301      	movs	r3, #1
 8001cce:	0018      	movs	r0, r3
 8001cd0:	46bd      	mov	sp, r7
 8001cd2:	b002      	add	sp, #8
 8001cd4:	bd80      	pop	{r7, pc}

08001cd6 <_lseek>:
 8001cd6:	b580      	push	{r7, lr}
 8001cd8:	b084      	sub	sp, #16
 8001cda:	af00      	add	r7, sp, #0
 8001cdc:	60f8      	str	r0, [r7, #12]
 8001cde:	60b9      	str	r1, [r7, #8]
 8001ce0:	607a      	str	r2, [r7, #4]
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	0018      	movs	r0, r3
 8001ce6:	46bd      	mov	sp, r7
 8001ce8:	b004      	add	sp, #16
 8001cea:	bd80      	pop	{r7, pc}

08001cec <_sbrk>:
 8001cec:	b580      	push	{r7, lr}
 8001cee:	b086      	sub	sp, #24
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
 8001cf4:	4a14      	ldr	r2, [pc, #80]	@ (8001d48 <_sbrk+0x5c>)
 8001cf6:	4b15      	ldr	r3, [pc, #84]	@ (8001d4c <_sbrk+0x60>)
 8001cf8:	1ad3      	subs	r3, r2, r3
 8001cfa:	617b      	str	r3, [r7, #20]
 8001cfc:	697b      	ldr	r3, [r7, #20]
 8001cfe:	613b      	str	r3, [r7, #16]
 8001d00:	4b13      	ldr	r3, [pc, #76]	@ (8001d50 <_sbrk+0x64>)
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d102      	bne.n	8001d0e <_sbrk+0x22>
 8001d08:	4b11      	ldr	r3, [pc, #68]	@ (8001d50 <_sbrk+0x64>)
 8001d0a:	4a12      	ldr	r2, [pc, #72]	@ (8001d54 <_sbrk+0x68>)
 8001d0c:	601a      	str	r2, [r3, #0]
 8001d0e:	4b10      	ldr	r3, [pc, #64]	@ (8001d50 <_sbrk+0x64>)
 8001d10:	681a      	ldr	r2, [r3, #0]
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	18d3      	adds	r3, r2, r3
 8001d16:	693a      	ldr	r2, [r7, #16]
 8001d18:	429a      	cmp	r2, r3
 8001d1a:	d207      	bcs.n	8001d2c <_sbrk+0x40>
 8001d1c:	f002 fe4c 	bl	80049b8 <__errno>
 8001d20:	0003      	movs	r3, r0
 8001d22:	220c      	movs	r2, #12
 8001d24:	601a      	str	r2, [r3, #0]
 8001d26:	2301      	movs	r3, #1
 8001d28:	425b      	negs	r3, r3
 8001d2a:	e009      	b.n	8001d40 <_sbrk+0x54>
 8001d2c:	4b08      	ldr	r3, [pc, #32]	@ (8001d50 <_sbrk+0x64>)
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	60fb      	str	r3, [r7, #12]
 8001d32:	4b07      	ldr	r3, [pc, #28]	@ (8001d50 <_sbrk+0x64>)
 8001d34:	681a      	ldr	r2, [r3, #0]
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	18d2      	adds	r2, r2, r3
 8001d3a:	4b05      	ldr	r3, [pc, #20]	@ (8001d50 <_sbrk+0x64>)
 8001d3c:	601a      	str	r2, [r3, #0]
 8001d3e:	68fb      	ldr	r3, [r7, #12]
 8001d40:	0018      	movs	r0, r3
 8001d42:	46bd      	mov	sp, r7
 8001d44:	b006      	add	sp, #24
 8001d46:	bd80      	pop	{r7, pc}
 8001d48:	20002000 	.word	0x20002000
 8001d4c:	00000400 	.word	0x00000400
 8001d50:	20000110 	.word	0x20000110
 8001d54:	20000430 	.word	0x20000430

08001d58 <SystemInit>:
 8001d58:	b580      	push	{r7, lr}
 8001d5a:	af00      	add	r7, sp, #0
 8001d5c:	46c0      	nop			@ (mov r8, r8)
 8001d5e:	46bd      	mov	sp, r7
 8001d60:	bd80      	pop	{r7, pc}
	...

08001d64 <MX_TIM3_Init>:
TIM_HandleTypeDef htim14;
TIM_HandleTypeDef htim15;

/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8001d64:	b580      	push	{r7, lr}
 8001d66:	b086      	sub	sp, #24
 8001d68:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001d6a:	2308      	movs	r3, #8
 8001d6c:	18fb      	adds	r3, r7, r3
 8001d6e:	0018      	movs	r0, r3
 8001d70:	2310      	movs	r3, #16
 8001d72:	001a      	movs	r2, r3
 8001d74:	2100      	movs	r1, #0
 8001d76:	f002 fdc9 	bl	800490c <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001d7a:	003b      	movs	r3, r7
 8001d7c:	0018      	movs	r0, r3
 8001d7e:	2308      	movs	r3, #8
 8001d80:	001a      	movs	r2, r3
 8001d82:	2100      	movs	r1, #0
 8001d84:	f002 fdc2 	bl	800490c <memset>

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001d88:	4b1e      	ldr	r3, [pc, #120]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001d8a:	4a1f      	ldr	r2, [pc, #124]	@ (8001e08 <MX_TIM3_Init+0xa4>)
 8001d8c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 6-1;
 8001d8e:	4b1d      	ldr	r3, [pc, #116]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001d90:	2205      	movs	r2, #5
 8001d92:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d94:	4b1b      	ldr	r3, [pc, #108]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001d96:	2200      	movs	r2, #0
 8001d98:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 8000-1;
 8001d9a:	4b1a      	ldr	r3, [pc, #104]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001d9c:	4a1b      	ldr	r2, [pc, #108]	@ (8001e0c <MX_TIM3_Init+0xa8>)
 8001d9e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001da0:	4b18      	ldr	r3, [pc, #96]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001da2:	2200      	movs	r2, #0
 8001da4:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001da6:	4b17      	ldr	r3, [pc, #92]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001da8:	2200      	movs	r2, #0
 8001daa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001dac:	4b15      	ldr	r3, [pc, #84]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001dae:	0018      	movs	r0, r3
 8001db0:	f001 fb74 	bl	800349c <HAL_TIM_Base_Init>
 8001db4:	1e03      	subs	r3, r0, #0
 8001db6:	d001      	beq.n	8001dbc <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 8001db8:	f7ff feaa 	bl	8001b10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001dbc:	2108      	movs	r1, #8
 8001dbe:	187b      	adds	r3, r7, r1
 8001dc0:	2280      	movs	r2, #128	@ 0x80
 8001dc2:	0152      	lsls	r2, r2, #5
 8001dc4:	601a      	str	r2, [r3, #0]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001dc6:	187a      	adds	r2, r7, r1
 8001dc8:	4b0e      	ldr	r3, [pc, #56]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001dca:	0011      	movs	r1, r2
 8001dcc:	0018      	movs	r0, r3
 8001dce:	f001 fd33 	bl	8003838 <HAL_TIM_ConfigClockSource>
 8001dd2:	1e03      	subs	r3, r0, #0
 8001dd4:	d001      	beq.n	8001dda <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 8001dd6:	f7ff fe9b 	bl	8001b10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001dda:	003b      	movs	r3, r7
 8001ddc:	2200      	movs	r2, #0
 8001dde:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001de0:	003b      	movs	r3, r7
 8001de2:	2200      	movs	r2, #0
 8001de4:	605a      	str	r2, [r3, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001de6:	003a      	movs	r2, r7
 8001de8:	4b06      	ldr	r3, [pc, #24]	@ (8001e04 <MX_TIM3_Init+0xa0>)
 8001dea:	0011      	movs	r1, r2
 8001dec:	0018      	movs	r0, r3
 8001dee:	f001 ff35 	bl	8003c5c <HAL_TIMEx_MasterConfigSynchronization>
 8001df2:	1e03      	subs	r3, r0, #0
 8001df4:	d001      	beq.n	8001dfa <MX_TIM3_Init+0x96>
  {
    Error_Handler();
 8001df6:	f7ff fe8b 	bl	8001b10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001dfa:	46c0      	nop			@ (mov r8, r8)
 8001dfc:	46bd      	mov	sp, r7
 8001dfe:	b006      	add	sp, #24
 8001e00:	bd80      	pop	{r7, pc}
 8001e02:	46c0      	nop			@ (mov r8, r8)
 8001e04:	20000114 	.word	0x20000114
 8001e08:	40000400 	.word	0x40000400
 8001e0c:	00001f3f 	.word	0x00001f3f

08001e10 <MX_TIM6_Init>:
/* TIM6 init function */
void MX_TIM6_Init(void)
{
 8001e10:	b580      	push	{r7, lr}
 8001e12:	af00      	add	r7, sp, #0
  /* USER CODE END TIM6_Init 0 */

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 8001e14:	4b0d      	ldr	r3, [pc, #52]	@ (8001e4c <MX_TIM6_Init+0x3c>)
 8001e16:	4a0e      	ldr	r2, [pc, #56]	@ (8001e50 <MX_TIM6_Init+0x40>)
 8001e18:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 480-1;
 8001e1a:	4b0c      	ldr	r3, [pc, #48]	@ (8001e4c <MX_TIM6_Init+0x3c>)
 8001e1c:	22e0      	movs	r2, #224	@ 0xe0
 8001e1e:	32ff      	adds	r2, #255	@ 0xff
 8001e20:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e22:	4b0a      	ldr	r3, [pc, #40]	@ (8001e4c <MX_TIM6_Init+0x3c>)
 8001e24:	2200      	movs	r2, #0
 8001e26:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 8001e28:	4b08      	ldr	r3, [pc, #32]	@ (8001e4c <MX_TIM6_Init+0x3c>)
 8001e2a:	4a0a      	ldr	r2, [pc, #40]	@ (8001e54 <MX_TIM6_Init+0x44>)
 8001e2c:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e2e:	4b07      	ldr	r3, [pc, #28]	@ (8001e4c <MX_TIM6_Init+0x3c>)
 8001e30:	2200      	movs	r2, #0
 8001e32:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8001e34:	4b05      	ldr	r3, [pc, #20]	@ (8001e4c <MX_TIM6_Init+0x3c>)
 8001e36:	0018      	movs	r0, r3
 8001e38:	f001 fb30 	bl	800349c <HAL_TIM_Base_Init>
 8001e3c:	1e03      	subs	r3, r0, #0
 8001e3e:	d001      	beq.n	8001e44 <MX_TIM6_Init+0x34>
  {
    Error_Handler();
 8001e40:	f7ff fe66 	bl	8001b10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 8001e44:	46c0      	nop			@ (mov r8, r8)
 8001e46:	46bd      	mov	sp, r7
 8001e48:	bd80      	pop	{r7, pc}
 8001e4a:	46c0      	nop			@ (mov r8, r8)
 8001e4c:	2000015c 	.word	0x2000015c
 8001e50:	40001000 	.word	0x40001000
 8001e54:	0000ffff 	.word	0x0000ffff

08001e58 <MX_TIM14_Init>:
/* TIM14 init function */
void MX_TIM14_Init(void)
{
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8001e5c:	4b0e      	ldr	r3, [pc, #56]	@ (8001e98 <MX_TIM14_Init+0x40>)
 8001e5e:	4a0f      	ldr	r2, [pc, #60]	@ (8001e9c <MX_TIM14_Init+0x44>)
 8001e60:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 48000-1;
 8001e62:	4b0d      	ldr	r3, [pc, #52]	@ (8001e98 <MX_TIM14_Init+0x40>)
 8001e64:	4a0e      	ldr	r2, [pc, #56]	@ (8001ea0 <MX_TIM14_Init+0x48>)
 8001e66:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e68:	4b0b      	ldr	r3, [pc, #44]	@ (8001e98 <MX_TIM14_Init+0x40>)
 8001e6a:	2200      	movs	r2, #0
 8001e6c:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 65535;
 8001e6e:	4b0a      	ldr	r3, [pc, #40]	@ (8001e98 <MX_TIM14_Init+0x40>)
 8001e70:	4a0c      	ldr	r2, [pc, #48]	@ (8001ea4 <MX_TIM14_Init+0x4c>)
 8001e72:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e74:	4b08      	ldr	r3, [pc, #32]	@ (8001e98 <MX_TIM14_Init+0x40>)
 8001e76:	2200      	movs	r2, #0
 8001e78:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e7a:	4b07      	ldr	r3, [pc, #28]	@ (8001e98 <MX_TIM14_Init+0x40>)
 8001e7c:	2200      	movs	r2, #0
 8001e7e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001e80:	4b05      	ldr	r3, [pc, #20]	@ (8001e98 <MX_TIM14_Init+0x40>)
 8001e82:	0018      	movs	r0, r3
 8001e84:	f001 fb0a 	bl	800349c <HAL_TIM_Base_Init>
 8001e88:	1e03      	subs	r3, r0, #0
 8001e8a:	d001      	beq.n	8001e90 <MX_TIM14_Init+0x38>
  {
    Error_Handler();
 8001e8c:	f7ff fe40 	bl	8001b10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 8001e90:	46c0      	nop			@ (mov r8, r8)
 8001e92:	46bd      	mov	sp, r7
 8001e94:	bd80      	pop	{r7, pc}
 8001e96:	46c0      	nop			@ (mov r8, r8)
 8001e98:	200001a4 	.word	0x200001a4
 8001e9c:	40002000 	.word	0x40002000
 8001ea0:	0000bb7f 	.word	0x0000bb7f
 8001ea4:	0000ffff 	.word	0x0000ffff

08001ea8 <MX_TIM15_Init>:
/* TIM15 init function */
void MX_TIM15_Init(void)
{
 8001ea8:	b580      	push	{r7, lr}
 8001eaa:	b086      	sub	sp, #24
 8001eac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM15_Init 0 */

  /* USER CODE END TIM15_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001eae:	2308      	movs	r3, #8
 8001eb0:	18fb      	adds	r3, r7, r3
 8001eb2:	0018      	movs	r0, r3
 8001eb4:	2310      	movs	r3, #16
 8001eb6:	001a      	movs	r2, r3
 8001eb8:	2100      	movs	r1, #0
 8001eba:	f002 fd27 	bl	800490c <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ebe:	003b      	movs	r3, r7
 8001ec0:	0018      	movs	r0, r3
 8001ec2:	2308      	movs	r3, #8
 8001ec4:	001a      	movs	r2, r3
 8001ec6:	2100      	movs	r1, #0
 8001ec8:	f002 fd20 	bl	800490c <memset>

  /* USER CODE BEGIN TIM15_Init 1 */

  /* USER CODE END TIM15_Init 1 */
  htim15.Instance = TIM15;
 8001ecc:	4b1f      	ldr	r3, [pc, #124]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001ece:	4a20      	ldr	r2, [pc, #128]	@ (8001f50 <MX_TIM15_Init+0xa8>)
 8001ed0:	601a      	str	r2, [r3, #0]
  htim15.Init.Prescaler = 48-1;
 8001ed2:	4b1e      	ldr	r3, [pc, #120]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001ed4:	222f      	movs	r2, #47	@ 0x2f
 8001ed6:	605a      	str	r2, [r3, #4]
  htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ed8:	4b1c      	ldr	r3, [pc, #112]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001eda:	2200      	movs	r2, #0
 8001edc:	609a      	str	r2, [r3, #8]
  htim15.Init.Period = 10000-1;
 8001ede:	4b1b      	ldr	r3, [pc, #108]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001ee0:	4a1c      	ldr	r2, [pc, #112]	@ (8001f54 <MX_TIM15_Init+0xac>)
 8001ee2:	60da      	str	r2, [r3, #12]
  htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001ee4:	4b19      	ldr	r3, [pc, #100]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001ee6:	2200      	movs	r2, #0
 8001ee8:	611a      	str	r2, [r3, #16]
  htim15.Init.RepetitionCounter = 0;
 8001eea:	4b18      	ldr	r3, [pc, #96]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001eec:	2200      	movs	r2, #0
 8001eee:	615a      	str	r2, [r3, #20]
  htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001ef0:	4b16      	ldr	r3, [pc, #88]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 8001ef6:	4b15      	ldr	r3, [pc, #84]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001ef8:	0018      	movs	r0, r3
 8001efa:	f001 facf 	bl	800349c <HAL_TIM_Base_Init>
 8001efe:	1e03      	subs	r3, r0, #0
 8001f00:	d001      	beq.n	8001f06 <MX_TIM15_Init+0x5e>
  {
    Error_Handler();
 8001f02:	f7ff fe05 	bl	8001b10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f06:	2108      	movs	r1, #8
 8001f08:	187b      	adds	r3, r7, r1
 8001f0a:	2280      	movs	r2, #128	@ 0x80
 8001f0c:	0152      	lsls	r2, r2, #5
 8001f0e:	601a      	str	r2, [r3, #0]
  if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 8001f10:	187a      	adds	r2, r7, r1
 8001f12:	4b0e      	ldr	r3, [pc, #56]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001f14:	0011      	movs	r1, r2
 8001f16:	0018      	movs	r0, r3
 8001f18:	f001 fc8e 	bl	8003838 <HAL_TIM_ConfigClockSource>
 8001f1c:	1e03      	subs	r3, r0, #0
 8001f1e:	d001      	beq.n	8001f24 <MX_TIM15_Init+0x7c>
  {
    Error_Handler();
 8001f20:	f7ff fdf6 	bl	8001b10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001f24:	003b      	movs	r3, r7
 8001f26:	2200      	movs	r2, #0
 8001f28:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f2a:	003b      	movs	r3, r7
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	605a      	str	r2, [r3, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 8001f30:	003a      	movs	r2, r7
 8001f32:	4b06      	ldr	r3, [pc, #24]	@ (8001f4c <MX_TIM15_Init+0xa4>)
 8001f34:	0011      	movs	r1, r2
 8001f36:	0018      	movs	r0, r3
 8001f38:	f001 fe90 	bl	8003c5c <HAL_TIMEx_MasterConfigSynchronization>
 8001f3c:	1e03      	subs	r3, r0, #0
 8001f3e:	d001      	beq.n	8001f44 <MX_TIM15_Init+0x9c>
  {
    Error_Handler();
 8001f40:	f7ff fde6 	bl	8001b10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM15_Init 2 */

  /* USER CODE END TIM15_Init 2 */

}
 8001f44:	46c0      	nop			@ (mov r8, r8)
 8001f46:	46bd      	mov	sp, r7
 8001f48:	b006      	add	sp, #24
 8001f4a:	bd80      	pop	{r7, pc}
 8001f4c:	200001ec 	.word	0x200001ec
 8001f50:	40014000 	.word	0x40014000
 8001f54:	0000270f 	.word	0x0000270f

08001f58 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001f58:	b580      	push	{r7, lr}
 8001f5a:	b086      	sub	sp, #24
 8001f5c:	af00      	add	r7, sp, #0
 8001f5e:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM3)
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	4a2a      	ldr	r2, [pc, #168]	@ (8002010 <HAL_TIM_Base_MspInit+0xb8>)
 8001f66:	4293      	cmp	r3, r2
 8001f68:	d10c      	bne.n	8001f84 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f6a:	4b2a      	ldr	r3, [pc, #168]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001f6c:	69da      	ldr	r2, [r3, #28]
 8001f6e:	4b29      	ldr	r3, [pc, #164]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001f70:	2102      	movs	r1, #2
 8001f72:	430a      	orrs	r2, r1
 8001f74:	61da      	str	r2, [r3, #28]
 8001f76:	4b27      	ldr	r3, [pc, #156]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001f78:	69db      	ldr	r3, [r3, #28]
 8001f7a:	2202      	movs	r2, #2
 8001f7c:	4013      	ands	r3, r2
 8001f7e:	617b      	str	r3, [r7, #20]
 8001f80:	697b      	ldr	r3, [r7, #20]
    HAL_NVIC_EnableIRQ(TIM15_IRQn);
  /* USER CODE BEGIN TIM15_MspInit 1 */

  /* USER CODE END TIM15_MspInit 1 */
  }
}
 8001f82:	e040      	b.n	8002006 <HAL_TIM_Base_MspInit+0xae>
  else if(tim_baseHandle->Instance==TIM6)
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	4a23      	ldr	r2, [pc, #140]	@ (8002018 <HAL_TIM_Base_MspInit+0xc0>)
 8001f8a:	4293      	cmp	r3, r2
 8001f8c:	d10c      	bne.n	8001fa8 <HAL_TIM_Base_MspInit+0x50>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8001f8e:	4b21      	ldr	r3, [pc, #132]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001f90:	69da      	ldr	r2, [r3, #28]
 8001f92:	4b20      	ldr	r3, [pc, #128]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001f94:	2110      	movs	r1, #16
 8001f96:	430a      	orrs	r2, r1
 8001f98:	61da      	str	r2, [r3, #28]
 8001f9a:	4b1e      	ldr	r3, [pc, #120]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001f9c:	69db      	ldr	r3, [r3, #28]
 8001f9e:	2210      	movs	r2, #16
 8001fa0:	4013      	ands	r3, r2
 8001fa2:	613b      	str	r3, [r7, #16]
 8001fa4:	693b      	ldr	r3, [r7, #16]
}
 8001fa6:	e02e      	b.n	8002006 <HAL_TIM_Base_MspInit+0xae>
  else if(tim_baseHandle->Instance==TIM14)
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	4a1b      	ldr	r2, [pc, #108]	@ (800201c <HAL_TIM_Base_MspInit+0xc4>)
 8001fae:	4293      	cmp	r3, r2
 8001fb0:	d10e      	bne.n	8001fd0 <HAL_TIM_Base_MspInit+0x78>
    __HAL_RCC_TIM14_CLK_ENABLE();
 8001fb2:	4b18      	ldr	r3, [pc, #96]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001fb4:	69da      	ldr	r2, [r3, #28]
 8001fb6:	4b17      	ldr	r3, [pc, #92]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001fb8:	2180      	movs	r1, #128	@ 0x80
 8001fba:	0049      	lsls	r1, r1, #1
 8001fbc:	430a      	orrs	r2, r1
 8001fbe:	61da      	str	r2, [r3, #28]
 8001fc0:	4b14      	ldr	r3, [pc, #80]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001fc2:	69da      	ldr	r2, [r3, #28]
 8001fc4:	2380      	movs	r3, #128	@ 0x80
 8001fc6:	005b      	lsls	r3, r3, #1
 8001fc8:	4013      	ands	r3, r2
 8001fca:	60fb      	str	r3, [r7, #12]
 8001fcc:	68fb      	ldr	r3, [r7, #12]
}
 8001fce:	e01a      	b.n	8002006 <HAL_TIM_Base_MspInit+0xae>
  else if(tim_baseHandle->Instance==TIM15)
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	4a12      	ldr	r2, [pc, #72]	@ (8002020 <HAL_TIM_Base_MspInit+0xc8>)
 8001fd6:	4293      	cmp	r3, r2
 8001fd8:	d115      	bne.n	8002006 <HAL_TIM_Base_MspInit+0xae>
    __HAL_RCC_TIM15_CLK_ENABLE();
 8001fda:	4b0e      	ldr	r3, [pc, #56]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001fdc:	699a      	ldr	r2, [r3, #24]
 8001fde:	4b0d      	ldr	r3, [pc, #52]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001fe0:	2180      	movs	r1, #128	@ 0x80
 8001fe2:	0249      	lsls	r1, r1, #9
 8001fe4:	430a      	orrs	r2, r1
 8001fe6:	619a      	str	r2, [r3, #24]
 8001fe8:	4b0a      	ldr	r3, [pc, #40]	@ (8002014 <HAL_TIM_Base_MspInit+0xbc>)
 8001fea:	699a      	ldr	r2, [r3, #24]
 8001fec:	2380      	movs	r3, #128	@ 0x80
 8001fee:	025b      	lsls	r3, r3, #9
 8001ff0:	4013      	ands	r3, r2
 8001ff2:	60bb      	str	r3, [r7, #8]
 8001ff4:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM15_IRQn, 0, 0);
 8001ff6:	2200      	movs	r2, #0
 8001ff8:	2100      	movs	r1, #0
 8001ffa:	2014      	movs	r0, #20
 8001ffc:	f000 f9ec 	bl	80023d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM15_IRQn);
 8002000:	2014      	movs	r0, #20
 8002002:	f000 f9fe 	bl	8002402 <HAL_NVIC_EnableIRQ>
}
 8002006:	46c0      	nop			@ (mov r8, r8)
 8002008:	46bd      	mov	sp, r7
 800200a:	b006      	add	sp, #24
 800200c:	bd80      	pop	{r7, pc}
 800200e:	46c0      	nop			@ (mov r8, r8)
 8002010:	40000400 	.word	0x40000400
 8002014:	40021000 	.word	0x40021000
 8002018:	40001000 	.word	0x40001000
 800201c:	40002000 	.word	0x40002000
 8002020:	40014000 	.word	0x40014000

08002024 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8002024:	b580      	push	{r7, lr}
 8002026:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002028:	4b14      	ldr	r3, [pc, #80]	@ (800207c <MX_USART2_UART_Init+0x58>)
 800202a:	4a15      	ldr	r2, [pc, #84]	@ (8002080 <MX_USART2_UART_Init+0x5c>)
 800202c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800202e:	4b13      	ldr	r3, [pc, #76]	@ (800207c <MX_USART2_UART_Init+0x58>)
 8002030:	2296      	movs	r2, #150	@ 0x96
 8002032:	0192      	lsls	r2, r2, #6
 8002034:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002036:	4b11      	ldr	r3, [pc, #68]	@ (800207c <MX_USART2_UART_Init+0x58>)
 8002038:	2200      	movs	r2, #0
 800203a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800203c:	4b0f      	ldr	r3, [pc, #60]	@ (800207c <MX_USART2_UART_Init+0x58>)
 800203e:	2200      	movs	r2, #0
 8002040:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002042:	4b0e      	ldr	r3, [pc, #56]	@ (800207c <MX_USART2_UART_Init+0x58>)
 8002044:	2200      	movs	r2, #0
 8002046:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002048:	4b0c      	ldr	r3, [pc, #48]	@ (800207c <MX_USART2_UART_Init+0x58>)
 800204a:	220c      	movs	r2, #12
 800204c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800204e:	4b0b      	ldr	r3, [pc, #44]	@ (800207c <MX_USART2_UART_Init+0x58>)
 8002050:	2200      	movs	r2, #0
 8002052:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002054:	4b09      	ldr	r3, [pc, #36]	@ (800207c <MX_USART2_UART_Init+0x58>)
 8002056:	2200      	movs	r2, #0
 8002058:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800205a:	4b08      	ldr	r3, [pc, #32]	@ (800207c <MX_USART2_UART_Init+0x58>)
 800205c:	2200      	movs	r2, #0
 800205e:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002060:	4b06      	ldr	r3, [pc, #24]	@ (800207c <MX_USART2_UART_Init+0x58>)
 8002062:	2200      	movs	r2, #0
 8002064:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002066:	4b05      	ldr	r3, [pc, #20]	@ (800207c <MX_USART2_UART_Init+0x58>)
 8002068:	0018      	movs	r0, r3
 800206a:	f001 fe5f 	bl	8003d2c <HAL_UART_Init>
 800206e:	1e03      	subs	r3, r0, #0
 8002070:	d001      	beq.n	8002076 <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8002072:	f7ff fd4d 	bl	8001b10 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002076:	46c0      	nop			@ (mov r8, r8)
 8002078:	46bd      	mov	sp, r7
 800207a:	bd80      	pop	{r7, pc}
 800207c:	20000234 	.word	0x20000234
 8002080:	40004400 	.word	0x40004400

08002084 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8002084:	b590      	push	{r4, r7, lr}
 8002086:	b08b      	sub	sp, #44	@ 0x2c
 8002088:	af00      	add	r7, sp, #0
 800208a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800208c:	2414      	movs	r4, #20
 800208e:	193b      	adds	r3, r7, r4
 8002090:	0018      	movs	r0, r3
 8002092:	2314      	movs	r3, #20
 8002094:	001a      	movs	r2, r3
 8002096:	2100      	movs	r1, #0
 8002098:	f002 fc38 	bl	800490c <memset>
  if(uartHandle->Instance==USART2)
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	4a1c      	ldr	r2, [pc, #112]	@ (8002114 <HAL_UART_MspInit+0x90>)
 80020a2:	4293      	cmp	r3, r2
 80020a4:	d132      	bne.n	800210c <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80020a6:	4b1c      	ldr	r3, [pc, #112]	@ (8002118 <HAL_UART_MspInit+0x94>)
 80020a8:	69da      	ldr	r2, [r3, #28]
 80020aa:	4b1b      	ldr	r3, [pc, #108]	@ (8002118 <HAL_UART_MspInit+0x94>)
 80020ac:	2180      	movs	r1, #128	@ 0x80
 80020ae:	0289      	lsls	r1, r1, #10
 80020b0:	430a      	orrs	r2, r1
 80020b2:	61da      	str	r2, [r3, #28]
 80020b4:	4b18      	ldr	r3, [pc, #96]	@ (8002118 <HAL_UART_MspInit+0x94>)
 80020b6:	69da      	ldr	r2, [r3, #28]
 80020b8:	2380      	movs	r3, #128	@ 0x80
 80020ba:	029b      	lsls	r3, r3, #10
 80020bc:	4013      	ands	r3, r2
 80020be:	613b      	str	r3, [r7, #16]
 80020c0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80020c2:	4b15      	ldr	r3, [pc, #84]	@ (8002118 <HAL_UART_MspInit+0x94>)
 80020c4:	695a      	ldr	r2, [r3, #20]
 80020c6:	4b14      	ldr	r3, [pc, #80]	@ (8002118 <HAL_UART_MspInit+0x94>)
 80020c8:	2180      	movs	r1, #128	@ 0x80
 80020ca:	0289      	lsls	r1, r1, #10
 80020cc:	430a      	orrs	r2, r1
 80020ce:	615a      	str	r2, [r3, #20]
 80020d0:	4b11      	ldr	r3, [pc, #68]	@ (8002118 <HAL_UART_MspInit+0x94>)
 80020d2:	695a      	ldr	r2, [r3, #20]
 80020d4:	2380      	movs	r3, #128	@ 0x80
 80020d6:	029b      	lsls	r3, r3, #10
 80020d8:	4013      	ands	r3, r2
 80020da:	60fb      	str	r3, [r7, #12]
 80020dc:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80020de:	0021      	movs	r1, r4
 80020e0:	187b      	adds	r3, r7, r1
 80020e2:	220c      	movs	r2, #12
 80020e4:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020e6:	187b      	adds	r3, r7, r1
 80020e8:	2202      	movs	r2, #2
 80020ea:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020ec:	187b      	adds	r3, r7, r1
 80020ee:	2200      	movs	r2, #0
 80020f0:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80020f2:	187b      	adds	r3, r7, r1
 80020f4:	2203      	movs	r2, #3
 80020f6:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 80020f8:	187b      	adds	r3, r7, r1
 80020fa:	2201      	movs	r2, #1
 80020fc:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020fe:	187a      	adds	r2, r7, r1
 8002100:	2390      	movs	r3, #144	@ 0x90
 8002102:	05db      	lsls	r3, r3, #23
 8002104:	0011      	movs	r1, r2
 8002106:	0018      	movs	r0, r3
 8002108:	f000 fba4 	bl	8002854 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 800210c:	46c0      	nop			@ (mov r8, r8)
 800210e:	46bd      	mov	sp, r7
 8002110:	b00b      	add	sp, #44	@ 0x2c
 8002112:	bd90      	pop	{r4, r7, pc}
 8002114:	40004400 	.word	0x40004400
 8002118:	40021000 	.word	0x40021000

0800211c <Reset_Handler>:
 800211c:	480d      	ldr	r0, [pc, #52]	@ (8002154 <LoopForever+0x2>)
 800211e:	4685      	mov	sp, r0
 8002120:	f7ff fe1a 	bl	8001d58 <SystemInit>
 8002124:	480c      	ldr	r0, [pc, #48]	@ (8002158 <LoopForever+0x6>)
 8002126:	490d      	ldr	r1, [pc, #52]	@ (800215c <LoopForever+0xa>)
 8002128:	4a0d      	ldr	r2, [pc, #52]	@ (8002160 <LoopForever+0xe>)
 800212a:	2300      	movs	r3, #0
 800212c:	e002      	b.n	8002134 <LoopCopyDataInit>

0800212e <CopyDataInit>:
 800212e:	58d4      	ldr	r4, [r2, r3]
 8002130:	50c4      	str	r4, [r0, r3]
 8002132:	3304      	adds	r3, #4

08002134 <LoopCopyDataInit>:
 8002134:	18c4      	adds	r4, r0, r3
 8002136:	428c      	cmp	r4, r1
 8002138:	d3f9      	bcc.n	800212e <CopyDataInit>
 800213a:	4a0a      	ldr	r2, [pc, #40]	@ (8002164 <LoopForever+0x12>)
 800213c:	4c0a      	ldr	r4, [pc, #40]	@ (8002168 <LoopForever+0x16>)
 800213e:	2300      	movs	r3, #0
 8002140:	e001      	b.n	8002146 <LoopFillZerobss>

08002142 <FillZerobss>:
 8002142:	6013      	str	r3, [r2, #0]
 8002144:	3204      	adds	r2, #4

08002146 <LoopFillZerobss>:
 8002146:	42a2      	cmp	r2, r4
 8002148:	d3fb      	bcc.n	8002142 <FillZerobss>
 800214a:	f002 fc3b 	bl	80049c4 <__libc_init_array>
 800214e:	f7ff fc29 	bl	80019a4 <main>

08002152 <LoopForever>:
 8002152:	e7fe      	b.n	8002152 <LoopForever>
 8002154:	20002000 	.word	0x20002000
 8002158:	20000000 	.word	0x20000000
 800215c:	2000007c 	.word	0x2000007c
 8002160:	080057e8 	.word	0x080057e8
 8002164:	20000080 	.word	0x20000080
 8002168:	2000042c 	.word	0x2000042c

0800216c <ADC1_IRQHandler>:
 800216c:	e7fe      	b.n	800216c <ADC1_IRQHandler>
	...

08002170 <HAL_Init>:
 8002170:	b580      	push	{r7, lr}
 8002172:	af00      	add	r7, sp, #0
 8002174:	4b07      	ldr	r3, [pc, #28]	@ (8002194 <HAL_Init+0x24>)
 8002176:	681a      	ldr	r2, [r3, #0]
 8002178:	4b06      	ldr	r3, [pc, #24]	@ (8002194 <HAL_Init+0x24>)
 800217a:	2110      	movs	r1, #16
 800217c:	430a      	orrs	r2, r1
 800217e:	601a      	str	r2, [r3, #0]
 8002180:	2003      	movs	r0, #3
 8002182:	f000 f809 	bl	8002198 <HAL_InitTick>
 8002186:	f7ff fcc9 	bl	8001b1c <HAL_MspInit>
 800218a:	2300      	movs	r3, #0
 800218c:	0018      	movs	r0, r3
 800218e:	46bd      	mov	sp, r7
 8002190:	bd80      	pop	{r7, pc}
 8002192:	46c0      	nop			@ (mov r8, r8)
 8002194:	40022000 	.word	0x40022000

08002198 <HAL_InitTick>:
 8002198:	b590      	push	{r4, r7, lr}
 800219a:	b083      	sub	sp, #12
 800219c:	af00      	add	r7, sp, #0
 800219e:	6078      	str	r0, [r7, #4]
 80021a0:	4b14      	ldr	r3, [pc, #80]	@ (80021f4 <HAL_InitTick+0x5c>)
 80021a2:	681c      	ldr	r4, [r3, #0]
 80021a4:	4b14      	ldr	r3, [pc, #80]	@ (80021f8 <HAL_InitTick+0x60>)
 80021a6:	781b      	ldrb	r3, [r3, #0]
 80021a8:	0019      	movs	r1, r3
 80021aa:	23fa      	movs	r3, #250	@ 0xfa
 80021ac:	0098      	lsls	r0, r3, #2
 80021ae:	f7fd ffb5 	bl	800011c <__udivsi3>
 80021b2:	0003      	movs	r3, r0
 80021b4:	0019      	movs	r1, r3
 80021b6:	0020      	movs	r0, r4
 80021b8:	f7fd ffb0 	bl	800011c <__udivsi3>
 80021bc:	0003      	movs	r3, r0
 80021be:	0018      	movs	r0, r3
 80021c0:	f000 f92f 	bl	8002422 <HAL_SYSTICK_Config>
 80021c4:	1e03      	subs	r3, r0, #0
 80021c6:	d001      	beq.n	80021cc <HAL_InitTick+0x34>
 80021c8:	2301      	movs	r3, #1
 80021ca:	e00f      	b.n	80021ec <HAL_InitTick+0x54>
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	2b03      	cmp	r3, #3
 80021d0:	d80b      	bhi.n	80021ea <HAL_InitTick+0x52>
 80021d2:	6879      	ldr	r1, [r7, #4]
 80021d4:	2301      	movs	r3, #1
 80021d6:	425b      	negs	r3, r3
 80021d8:	2200      	movs	r2, #0
 80021da:	0018      	movs	r0, r3
 80021dc:	f000 f8fc 	bl	80023d8 <HAL_NVIC_SetPriority>
 80021e0:	4b06      	ldr	r3, [pc, #24]	@ (80021fc <HAL_InitTick+0x64>)
 80021e2:	687a      	ldr	r2, [r7, #4]
 80021e4:	601a      	str	r2, [r3, #0]
 80021e6:	2300      	movs	r3, #0
 80021e8:	e000      	b.n	80021ec <HAL_InitTick+0x54>
 80021ea:	2301      	movs	r3, #1
 80021ec:	0018      	movs	r0, r3
 80021ee:	46bd      	mov	sp, r7
 80021f0:	b003      	add	sp, #12
 80021f2:	bd90      	pop	{r4, r7, pc}
 80021f4:	20000014 	.word	0x20000014
 80021f8:	2000001c 	.word	0x2000001c
 80021fc:	20000018 	.word	0x20000018

08002200 <HAL_IncTick>:
 8002200:	b580      	push	{r7, lr}
 8002202:	af00      	add	r7, sp, #0
 8002204:	4b05      	ldr	r3, [pc, #20]	@ (800221c <HAL_IncTick+0x1c>)
 8002206:	781b      	ldrb	r3, [r3, #0]
 8002208:	001a      	movs	r2, r3
 800220a:	4b05      	ldr	r3, [pc, #20]	@ (8002220 <HAL_IncTick+0x20>)
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	18d2      	adds	r2, r2, r3
 8002210:	4b03      	ldr	r3, [pc, #12]	@ (8002220 <HAL_IncTick+0x20>)
 8002212:	601a      	str	r2, [r3, #0]
 8002214:	46c0      	nop			@ (mov r8, r8)
 8002216:	46bd      	mov	sp, r7
 8002218:	bd80      	pop	{r7, pc}
 800221a:	46c0      	nop			@ (mov r8, r8)
 800221c:	2000001c 	.word	0x2000001c
 8002220:	200002bc 	.word	0x200002bc

08002224 <HAL_GetTick>:
 8002224:	b580      	push	{r7, lr}
 8002226:	af00      	add	r7, sp, #0
 8002228:	4b02      	ldr	r3, [pc, #8]	@ (8002234 <HAL_GetTick+0x10>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	0018      	movs	r0, r3
 800222e:	46bd      	mov	sp, r7
 8002230:	bd80      	pop	{r7, pc}
 8002232:	46c0      	nop			@ (mov r8, r8)
 8002234:	200002bc 	.word	0x200002bc

08002238 <HAL_Delay>:
 8002238:	b580      	push	{r7, lr}
 800223a:	b084      	sub	sp, #16
 800223c:	af00      	add	r7, sp, #0
 800223e:	6078      	str	r0, [r7, #4]
 8002240:	f7ff fff0 	bl	8002224 <HAL_GetTick>
 8002244:	0003      	movs	r3, r0
 8002246:	60bb      	str	r3, [r7, #8]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	60fb      	str	r3, [r7, #12]
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	3301      	adds	r3, #1
 8002250:	d005      	beq.n	800225e <HAL_Delay+0x26>
 8002252:	4b0a      	ldr	r3, [pc, #40]	@ (800227c <HAL_Delay+0x44>)
 8002254:	781b      	ldrb	r3, [r3, #0]
 8002256:	001a      	movs	r2, r3
 8002258:	68fb      	ldr	r3, [r7, #12]
 800225a:	189b      	adds	r3, r3, r2
 800225c:	60fb      	str	r3, [r7, #12]
 800225e:	46c0      	nop			@ (mov r8, r8)
 8002260:	f7ff ffe0 	bl	8002224 <HAL_GetTick>
 8002264:	0002      	movs	r2, r0
 8002266:	68bb      	ldr	r3, [r7, #8]
 8002268:	1ad3      	subs	r3, r2, r3
 800226a:	68fa      	ldr	r2, [r7, #12]
 800226c:	429a      	cmp	r2, r3
 800226e:	d8f7      	bhi.n	8002260 <HAL_Delay+0x28>
 8002270:	46c0      	nop			@ (mov r8, r8)
 8002272:	46c0      	nop			@ (mov r8, r8)
 8002274:	46bd      	mov	sp, r7
 8002276:	b004      	add	sp, #16
 8002278:	bd80      	pop	{r7, pc}
 800227a:	46c0      	nop			@ (mov r8, r8)
 800227c:	2000001c 	.word	0x2000001c

08002280 <__NVIC_EnableIRQ>:
 8002280:	b580      	push	{r7, lr}
 8002282:	b082      	sub	sp, #8
 8002284:	af00      	add	r7, sp, #0
 8002286:	0002      	movs	r2, r0
 8002288:	1dfb      	adds	r3, r7, #7
 800228a:	701a      	strb	r2, [r3, #0]
 800228c:	1dfb      	adds	r3, r7, #7
 800228e:	781b      	ldrb	r3, [r3, #0]
 8002290:	2b7f      	cmp	r3, #127	@ 0x7f
 8002292:	d809      	bhi.n	80022a8 <__NVIC_EnableIRQ+0x28>
 8002294:	1dfb      	adds	r3, r7, #7
 8002296:	781b      	ldrb	r3, [r3, #0]
 8002298:	001a      	movs	r2, r3
 800229a:	231f      	movs	r3, #31
 800229c:	401a      	ands	r2, r3
 800229e:	4b04      	ldr	r3, [pc, #16]	@ (80022b0 <__NVIC_EnableIRQ+0x30>)
 80022a0:	2101      	movs	r1, #1
 80022a2:	4091      	lsls	r1, r2
 80022a4:	000a      	movs	r2, r1
 80022a6:	601a      	str	r2, [r3, #0]
 80022a8:	46c0      	nop			@ (mov r8, r8)
 80022aa:	46bd      	mov	sp, r7
 80022ac:	b002      	add	sp, #8
 80022ae:	bd80      	pop	{r7, pc}
 80022b0:	e000e100 	.word	0xe000e100

080022b4 <__NVIC_SetPriority>:
 80022b4:	b590      	push	{r4, r7, lr}
 80022b6:	b083      	sub	sp, #12
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	0002      	movs	r2, r0
 80022bc:	6039      	str	r1, [r7, #0]
 80022be:	1dfb      	adds	r3, r7, #7
 80022c0:	701a      	strb	r2, [r3, #0]
 80022c2:	1dfb      	adds	r3, r7, #7
 80022c4:	781b      	ldrb	r3, [r3, #0]
 80022c6:	2b7f      	cmp	r3, #127	@ 0x7f
 80022c8:	d828      	bhi.n	800231c <__NVIC_SetPriority+0x68>
 80022ca:	4a2f      	ldr	r2, [pc, #188]	@ (8002388 <__NVIC_SetPriority+0xd4>)
 80022cc:	1dfb      	adds	r3, r7, #7
 80022ce:	781b      	ldrb	r3, [r3, #0]
 80022d0:	b25b      	sxtb	r3, r3
 80022d2:	089b      	lsrs	r3, r3, #2
 80022d4:	33c0      	adds	r3, #192	@ 0xc0
 80022d6:	009b      	lsls	r3, r3, #2
 80022d8:	589b      	ldr	r3, [r3, r2]
 80022da:	1dfa      	adds	r2, r7, #7
 80022dc:	7812      	ldrb	r2, [r2, #0]
 80022de:	0011      	movs	r1, r2
 80022e0:	2203      	movs	r2, #3
 80022e2:	400a      	ands	r2, r1
 80022e4:	00d2      	lsls	r2, r2, #3
 80022e6:	21ff      	movs	r1, #255	@ 0xff
 80022e8:	4091      	lsls	r1, r2
 80022ea:	000a      	movs	r2, r1
 80022ec:	43d2      	mvns	r2, r2
 80022ee:	401a      	ands	r2, r3
 80022f0:	0011      	movs	r1, r2
 80022f2:	683b      	ldr	r3, [r7, #0]
 80022f4:	019b      	lsls	r3, r3, #6
 80022f6:	22ff      	movs	r2, #255	@ 0xff
 80022f8:	401a      	ands	r2, r3
 80022fa:	1dfb      	adds	r3, r7, #7
 80022fc:	781b      	ldrb	r3, [r3, #0]
 80022fe:	0018      	movs	r0, r3
 8002300:	2303      	movs	r3, #3
 8002302:	4003      	ands	r3, r0
 8002304:	00db      	lsls	r3, r3, #3
 8002306:	409a      	lsls	r2, r3
 8002308:	481f      	ldr	r0, [pc, #124]	@ (8002388 <__NVIC_SetPriority+0xd4>)
 800230a:	1dfb      	adds	r3, r7, #7
 800230c:	781b      	ldrb	r3, [r3, #0]
 800230e:	b25b      	sxtb	r3, r3
 8002310:	089b      	lsrs	r3, r3, #2
 8002312:	430a      	orrs	r2, r1
 8002314:	33c0      	adds	r3, #192	@ 0xc0
 8002316:	009b      	lsls	r3, r3, #2
 8002318:	501a      	str	r2, [r3, r0]
 800231a:	e031      	b.n	8002380 <__NVIC_SetPriority+0xcc>
 800231c:	4a1b      	ldr	r2, [pc, #108]	@ (800238c <__NVIC_SetPriority+0xd8>)
 800231e:	1dfb      	adds	r3, r7, #7
 8002320:	781b      	ldrb	r3, [r3, #0]
 8002322:	0019      	movs	r1, r3
 8002324:	230f      	movs	r3, #15
 8002326:	400b      	ands	r3, r1
 8002328:	3b08      	subs	r3, #8
 800232a:	089b      	lsrs	r3, r3, #2
 800232c:	3306      	adds	r3, #6
 800232e:	009b      	lsls	r3, r3, #2
 8002330:	18d3      	adds	r3, r2, r3
 8002332:	3304      	adds	r3, #4
 8002334:	681b      	ldr	r3, [r3, #0]
 8002336:	1dfa      	adds	r2, r7, #7
 8002338:	7812      	ldrb	r2, [r2, #0]
 800233a:	0011      	movs	r1, r2
 800233c:	2203      	movs	r2, #3
 800233e:	400a      	ands	r2, r1
 8002340:	00d2      	lsls	r2, r2, #3
 8002342:	21ff      	movs	r1, #255	@ 0xff
 8002344:	4091      	lsls	r1, r2
 8002346:	000a      	movs	r2, r1
 8002348:	43d2      	mvns	r2, r2
 800234a:	401a      	ands	r2, r3
 800234c:	0011      	movs	r1, r2
 800234e:	683b      	ldr	r3, [r7, #0]
 8002350:	019b      	lsls	r3, r3, #6
 8002352:	22ff      	movs	r2, #255	@ 0xff
 8002354:	401a      	ands	r2, r3
 8002356:	1dfb      	adds	r3, r7, #7
 8002358:	781b      	ldrb	r3, [r3, #0]
 800235a:	0018      	movs	r0, r3
 800235c:	2303      	movs	r3, #3
 800235e:	4003      	ands	r3, r0
 8002360:	00db      	lsls	r3, r3, #3
 8002362:	409a      	lsls	r2, r3
 8002364:	4809      	ldr	r0, [pc, #36]	@ (800238c <__NVIC_SetPriority+0xd8>)
 8002366:	1dfb      	adds	r3, r7, #7
 8002368:	781b      	ldrb	r3, [r3, #0]
 800236a:	001c      	movs	r4, r3
 800236c:	230f      	movs	r3, #15
 800236e:	4023      	ands	r3, r4
 8002370:	3b08      	subs	r3, #8
 8002372:	089b      	lsrs	r3, r3, #2
 8002374:	430a      	orrs	r2, r1
 8002376:	3306      	adds	r3, #6
 8002378:	009b      	lsls	r3, r3, #2
 800237a:	18c3      	adds	r3, r0, r3
 800237c:	3304      	adds	r3, #4
 800237e:	601a      	str	r2, [r3, #0]
 8002380:	46c0      	nop			@ (mov r8, r8)
 8002382:	46bd      	mov	sp, r7
 8002384:	b003      	add	sp, #12
 8002386:	bd90      	pop	{r4, r7, pc}
 8002388:	e000e100 	.word	0xe000e100
 800238c:	e000ed00 	.word	0xe000ed00

08002390 <SysTick_Config>:
 8002390:	b580      	push	{r7, lr}
 8002392:	b082      	sub	sp, #8
 8002394:	af00      	add	r7, sp, #0
 8002396:	6078      	str	r0, [r7, #4]
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	1e5a      	subs	r2, r3, #1
 800239c:	2380      	movs	r3, #128	@ 0x80
 800239e:	045b      	lsls	r3, r3, #17
 80023a0:	429a      	cmp	r2, r3
 80023a2:	d301      	bcc.n	80023a8 <SysTick_Config+0x18>
 80023a4:	2301      	movs	r3, #1
 80023a6:	e010      	b.n	80023ca <SysTick_Config+0x3a>
 80023a8:	4b0a      	ldr	r3, [pc, #40]	@ (80023d4 <SysTick_Config+0x44>)
 80023aa:	687a      	ldr	r2, [r7, #4]
 80023ac:	3a01      	subs	r2, #1
 80023ae:	605a      	str	r2, [r3, #4]
 80023b0:	2301      	movs	r3, #1
 80023b2:	425b      	negs	r3, r3
 80023b4:	2103      	movs	r1, #3
 80023b6:	0018      	movs	r0, r3
 80023b8:	f7ff ff7c 	bl	80022b4 <__NVIC_SetPriority>
 80023bc:	4b05      	ldr	r3, [pc, #20]	@ (80023d4 <SysTick_Config+0x44>)
 80023be:	2200      	movs	r2, #0
 80023c0:	609a      	str	r2, [r3, #8]
 80023c2:	4b04      	ldr	r3, [pc, #16]	@ (80023d4 <SysTick_Config+0x44>)
 80023c4:	2207      	movs	r2, #7
 80023c6:	601a      	str	r2, [r3, #0]
 80023c8:	2300      	movs	r3, #0
 80023ca:	0018      	movs	r0, r3
 80023cc:	46bd      	mov	sp, r7
 80023ce:	b002      	add	sp, #8
 80023d0:	bd80      	pop	{r7, pc}
 80023d2:	46c0      	nop			@ (mov r8, r8)
 80023d4:	e000e010 	.word	0xe000e010

080023d8 <HAL_NVIC_SetPriority>:
 80023d8:	b580      	push	{r7, lr}
 80023da:	b084      	sub	sp, #16
 80023dc:	af00      	add	r7, sp, #0
 80023de:	60b9      	str	r1, [r7, #8]
 80023e0:	607a      	str	r2, [r7, #4]
 80023e2:	210f      	movs	r1, #15
 80023e4:	187b      	adds	r3, r7, r1
 80023e6:	1c02      	adds	r2, r0, #0
 80023e8:	701a      	strb	r2, [r3, #0]
 80023ea:	68ba      	ldr	r2, [r7, #8]
 80023ec:	187b      	adds	r3, r7, r1
 80023ee:	781b      	ldrb	r3, [r3, #0]
 80023f0:	b25b      	sxtb	r3, r3
 80023f2:	0011      	movs	r1, r2
 80023f4:	0018      	movs	r0, r3
 80023f6:	f7ff ff5d 	bl	80022b4 <__NVIC_SetPriority>
 80023fa:	46c0      	nop			@ (mov r8, r8)
 80023fc:	46bd      	mov	sp, r7
 80023fe:	b004      	add	sp, #16
 8002400:	bd80      	pop	{r7, pc}

08002402 <HAL_NVIC_EnableIRQ>:
 8002402:	b580      	push	{r7, lr}
 8002404:	b082      	sub	sp, #8
 8002406:	af00      	add	r7, sp, #0
 8002408:	0002      	movs	r2, r0
 800240a:	1dfb      	adds	r3, r7, #7
 800240c:	701a      	strb	r2, [r3, #0]
 800240e:	1dfb      	adds	r3, r7, #7
 8002410:	781b      	ldrb	r3, [r3, #0]
 8002412:	b25b      	sxtb	r3, r3
 8002414:	0018      	movs	r0, r3
 8002416:	f7ff ff33 	bl	8002280 <__NVIC_EnableIRQ>
 800241a:	46c0      	nop			@ (mov r8, r8)
 800241c:	46bd      	mov	sp, r7
 800241e:	b002      	add	sp, #8
 8002420:	bd80      	pop	{r7, pc}

08002422 <HAL_SYSTICK_Config>:
 8002422:	b580      	push	{r7, lr}
 8002424:	b082      	sub	sp, #8
 8002426:	af00      	add	r7, sp, #0
 8002428:	6078      	str	r0, [r7, #4]
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	0018      	movs	r0, r3
 800242e:	f7ff ffaf 	bl	8002390 <SysTick_Config>
 8002432:	0003      	movs	r3, r0
 8002434:	0018      	movs	r0, r3
 8002436:	46bd      	mov	sp, r7
 8002438:	b002      	add	sp, #8
 800243a:	bd80      	pop	{r7, pc}

0800243c <HAL_FLASH_Program>:
 800243c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800243e:	b087      	sub	sp, #28
 8002440:	af00      	add	r7, sp, #0
 8002442:	60f8      	str	r0, [r7, #12]
 8002444:	60b9      	str	r1, [r7, #8]
 8002446:	603a      	str	r2, [r7, #0]
 8002448:	607b      	str	r3, [r7, #4]
 800244a:	2317      	movs	r3, #23
 800244c:	18fb      	adds	r3, r7, r3
 800244e:	2201      	movs	r2, #1
 8002450:	701a      	strb	r2, [r3, #0]
 8002452:	2316      	movs	r3, #22
 8002454:	18fb      	adds	r3, r7, r3
 8002456:	2200      	movs	r2, #0
 8002458:	701a      	strb	r2, [r3, #0]
 800245a:	2315      	movs	r3, #21
 800245c:	18fb      	adds	r3, r7, r3
 800245e:	2200      	movs	r2, #0
 8002460:	701a      	strb	r2, [r3, #0]
 8002462:	4b3e      	ldr	r3, [pc, #248]	@ (800255c <HAL_FLASH_Program+0x120>)
 8002464:	7e1b      	ldrb	r3, [r3, #24]
 8002466:	2b01      	cmp	r3, #1
 8002468:	d101      	bne.n	800246e <HAL_FLASH_Program+0x32>
 800246a:	2302      	movs	r3, #2
 800246c:	e072      	b.n	8002554 <HAL_FLASH_Program+0x118>
 800246e:	4b3b      	ldr	r3, [pc, #236]	@ (800255c <HAL_FLASH_Program+0x120>)
 8002470:	2201      	movs	r2, #1
 8002472:	761a      	strb	r2, [r3, #24]
 8002474:	2317      	movs	r3, #23
 8002476:	18fe      	adds	r6, r7, r3
 8002478:	4b39      	ldr	r3, [pc, #228]	@ (8002560 <HAL_FLASH_Program+0x124>)
 800247a:	0018      	movs	r0, r3
 800247c:	f000 f8ce 	bl	800261c <FLASH_WaitForLastOperation>
 8002480:	0003      	movs	r3, r0
 8002482:	7033      	strb	r3, [r6, #0]
 8002484:	2317      	movs	r3, #23
 8002486:	18fb      	adds	r3, r7, r3
 8002488:	781b      	ldrb	r3, [r3, #0]
 800248a:	2b00      	cmp	r3, #0
 800248c:	d15c      	bne.n	8002548 <HAL_FLASH_Program+0x10c>
 800248e:	68fb      	ldr	r3, [r7, #12]
 8002490:	2b01      	cmp	r3, #1
 8002492:	d104      	bne.n	800249e <HAL_FLASH_Program+0x62>
 8002494:	2315      	movs	r3, #21
 8002496:	18fb      	adds	r3, r7, r3
 8002498:	2201      	movs	r2, #1
 800249a:	701a      	strb	r2, [r3, #0]
 800249c:	e00b      	b.n	80024b6 <HAL_FLASH_Program+0x7a>
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	2b02      	cmp	r3, #2
 80024a2:	d104      	bne.n	80024ae <HAL_FLASH_Program+0x72>
 80024a4:	2315      	movs	r3, #21
 80024a6:	18fb      	adds	r3, r7, r3
 80024a8:	2202      	movs	r2, #2
 80024aa:	701a      	strb	r2, [r3, #0]
 80024ac:	e003      	b.n	80024b6 <HAL_FLASH_Program+0x7a>
 80024ae:	2315      	movs	r3, #21
 80024b0:	18fb      	adds	r3, r7, r3
 80024b2:	2204      	movs	r2, #4
 80024b4:	701a      	strb	r2, [r3, #0]
 80024b6:	2316      	movs	r3, #22
 80024b8:	18fb      	adds	r3, r7, r3
 80024ba:	2200      	movs	r2, #0
 80024bc:	701a      	strb	r2, [r3, #0]
 80024be:	e039      	b.n	8002534 <HAL_FLASH_Program+0xf8>
 80024c0:	2116      	movs	r1, #22
 80024c2:	187b      	adds	r3, r7, r1
 80024c4:	781b      	ldrb	r3, [r3, #0]
 80024c6:	005a      	lsls	r2, r3, #1
 80024c8:	68bb      	ldr	r3, [r7, #8]
 80024ca:	18d0      	adds	r0, r2, r3
 80024cc:	187b      	adds	r3, r7, r1
 80024ce:	781b      	ldrb	r3, [r3, #0]
 80024d0:	011b      	lsls	r3, r3, #4
 80024d2:	001a      	movs	r2, r3
 80024d4:	3a20      	subs	r2, #32
 80024d6:	2a00      	cmp	r2, #0
 80024d8:	db03      	blt.n	80024e2 <HAL_FLASH_Program+0xa6>
 80024da:	6879      	ldr	r1, [r7, #4]
 80024dc:	40d1      	lsrs	r1, r2
 80024de:	000c      	movs	r4, r1
 80024e0:	e008      	b.n	80024f4 <HAL_FLASH_Program+0xb8>
 80024e2:	2220      	movs	r2, #32
 80024e4:	1ad2      	subs	r2, r2, r3
 80024e6:	6879      	ldr	r1, [r7, #4]
 80024e8:	4091      	lsls	r1, r2
 80024ea:	000a      	movs	r2, r1
 80024ec:	6839      	ldr	r1, [r7, #0]
 80024ee:	40d9      	lsrs	r1, r3
 80024f0:	000c      	movs	r4, r1
 80024f2:	4314      	orrs	r4, r2
 80024f4:	687a      	ldr	r2, [r7, #4]
 80024f6:	40da      	lsrs	r2, r3
 80024f8:	0015      	movs	r5, r2
 80024fa:	b2a3      	uxth	r3, r4
 80024fc:	0019      	movs	r1, r3
 80024fe:	f000 f871 	bl	80025e4 <FLASH_Program_HalfWord>
 8002502:	2317      	movs	r3, #23
 8002504:	18fe      	adds	r6, r7, r3
 8002506:	4b16      	ldr	r3, [pc, #88]	@ (8002560 <HAL_FLASH_Program+0x124>)
 8002508:	0018      	movs	r0, r3
 800250a:	f000 f887 	bl	800261c <FLASH_WaitForLastOperation>
 800250e:	0003      	movs	r3, r0
 8002510:	7033      	strb	r3, [r6, #0]
 8002512:	4b14      	ldr	r3, [pc, #80]	@ (8002564 <HAL_FLASH_Program+0x128>)
 8002514:	691a      	ldr	r2, [r3, #16]
 8002516:	4b13      	ldr	r3, [pc, #76]	@ (8002564 <HAL_FLASH_Program+0x128>)
 8002518:	2101      	movs	r1, #1
 800251a:	438a      	bics	r2, r1
 800251c:	611a      	str	r2, [r3, #16]
 800251e:	2317      	movs	r3, #23
 8002520:	18fb      	adds	r3, r7, r3
 8002522:	781b      	ldrb	r3, [r3, #0]
 8002524:	2b00      	cmp	r3, #0
 8002526:	d10e      	bne.n	8002546 <HAL_FLASH_Program+0x10a>
 8002528:	2116      	movs	r1, #22
 800252a:	187b      	adds	r3, r7, r1
 800252c:	781a      	ldrb	r2, [r3, #0]
 800252e:	187b      	adds	r3, r7, r1
 8002530:	3201      	adds	r2, #1
 8002532:	701a      	strb	r2, [r3, #0]
 8002534:	2316      	movs	r3, #22
 8002536:	18fa      	adds	r2, r7, r3
 8002538:	2315      	movs	r3, #21
 800253a:	18fb      	adds	r3, r7, r3
 800253c:	7812      	ldrb	r2, [r2, #0]
 800253e:	781b      	ldrb	r3, [r3, #0]
 8002540:	429a      	cmp	r2, r3
 8002542:	d3bd      	bcc.n	80024c0 <HAL_FLASH_Program+0x84>
 8002544:	e000      	b.n	8002548 <HAL_FLASH_Program+0x10c>
 8002546:	46c0      	nop			@ (mov r8, r8)
 8002548:	4b04      	ldr	r3, [pc, #16]	@ (800255c <HAL_FLASH_Program+0x120>)
 800254a:	2200      	movs	r2, #0
 800254c:	761a      	strb	r2, [r3, #24]
 800254e:	2317      	movs	r3, #23
 8002550:	18fb      	adds	r3, r7, r3
 8002552:	781b      	ldrb	r3, [r3, #0]
 8002554:	0018      	movs	r0, r3
 8002556:	46bd      	mov	sp, r7
 8002558:	b007      	add	sp, #28
 800255a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800255c:	200002c0 	.word	0x200002c0
 8002560:	0000c350 	.word	0x0000c350
 8002564:	40022000 	.word	0x40022000

08002568 <HAL_FLASH_Unlock>:
 8002568:	b580      	push	{r7, lr}
 800256a:	b082      	sub	sp, #8
 800256c:	af00      	add	r7, sp, #0
 800256e:	1dfb      	adds	r3, r7, #7
 8002570:	2200      	movs	r2, #0
 8002572:	701a      	strb	r2, [r3, #0]
 8002574:	4b0c      	ldr	r3, [pc, #48]	@ (80025a8 <HAL_FLASH_Unlock+0x40>)
 8002576:	691b      	ldr	r3, [r3, #16]
 8002578:	2280      	movs	r2, #128	@ 0x80
 800257a:	4013      	ands	r3, r2
 800257c:	d00d      	beq.n	800259a <HAL_FLASH_Unlock+0x32>
 800257e:	4b0a      	ldr	r3, [pc, #40]	@ (80025a8 <HAL_FLASH_Unlock+0x40>)
 8002580:	4a0a      	ldr	r2, [pc, #40]	@ (80025ac <HAL_FLASH_Unlock+0x44>)
 8002582:	605a      	str	r2, [r3, #4]
 8002584:	4b08      	ldr	r3, [pc, #32]	@ (80025a8 <HAL_FLASH_Unlock+0x40>)
 8002586:	4a0a      	ldr	r2, [pc, #40]	@ (80025b0 <HAL_FLASH_Unlock+0x48>)
 8002588:	605a      	str	r2, [r3, #4]
 800258a:	4b07      	ldr	r3, [pc, #28]	@ (80025a8 <HAL_FLASH_Unlock+0x40>)
 800258c:	691b      	ldr	r3, [r3, #16]
 800258e:	2280      	movs	r2, #128	@ 0x80
 8002590:	4013      	ands	r3, r2
 8002592:	d002      	beq.n	800259a <HAL_FLASH_Unlock+0x32>
 8002594:	1dfb      	adds	r3, r7, #7
 8002596:	2201      	movs	r2, #1
 8002598:	701a      	strb	r2, [r3, #0]
 800259a:	1dfb      	adds	r3, r7, #7
 800259c:	781b      	ldrb	r3, [r3, #0]
 800259e:	0018      	movs	r0, r3
 80025a0:	46bd      	mov	sp, r7
 80025a2:	b002      	add	sp, #8
 80025a4:	bd80      	pop	{r7, pc}
 80025a6:	46c0      	nop			@ (mov r8, r8)
 80025a8:	40022000 	.word	0x40022000
 80025ac:	45670123 	.word	0x45670123
 80025b0:	cdef89ab 	.word	0xcdef89ab

080025b4 <HAL_FLASH_Lock>:
 80025b4:	b580      	push	{r7, lr}
 80025b6:	af00      	add	r7, sp, #0
 80025b8:	4b04      	ldr	r3, [pc, #16]	@ (80025cc <HAL_FLASH_Lock+0x18>)
 80025ba:	691a      	ldr	r2, [r3, #16]
 80025bc:	4b03      	ldr	r3, [pc, #12]	@ (80025cc <HAL_FLASH_Lock+0x18>)
 80025be:	2180      	movs	r1, #128	@ 0x80
 80025c0:	430a      	orrs	r2, r1
 80025c2:	611a      	str	r2, [r3, #16]
 80025c4:	2300      	movs	r3, #0
 80025c6:	0018      	movs	r0, r3
 80025c8:	46bd      	mov	sp, r7
 80025ca:	bd80      	pop	{r7, pc}
 80025cc:	40022000 	.word	0x40022000

080025d0 <HAL_FLASH_GetError>:
 80025d0:	b580      	push	{r7, lr}
 80025d2:	af00      	add	r7, sp, #0
 80025d4:	4b02      	ldr	r3, [pc, #8]	@ (80025e0 <HAL_FLASH_GetError+0x10>)
 80025d6:	69db      	ldr	r3, [r3, #28]
 80025d8:	0018      	movs	r0, r3
 80025da:	46bd      	mov	sp, r7
 80025dc:	bd80      	pop	{r7, pc}
 80025de:	46c0      	nop			@ (mov r8, r8)
 80025e0:	200002c0 	.word	0x200002c0

080025e4 <FLASH_Program_HalfWord>:
 80025e4:	b580      	push	{r7, lr}
 80025e6:	b082      	sub	sp, #8
 80025e8:	af00      	add	r7, sp, #0
 80025ea:	6078      	str	r0, [r7, #4]
 80025ec:	000a      	movs	r2, r1
 80025ee:	1cbb      	adds	r3, r7, #2
 80025f0:	801a      	strh	r2, [r3, #0]
 80025f2:	4b08      	ldr	r3, [pc, #32]	@ (8002614 <FLASH_Program_HalfWord+0x30>)
 80025f4:	2200      	movs	r2, #0
 80025f6:	61da      	str	r2, [r3, #28]
 80025f8:	4b07      	ldr	r3, [pc, #28]	@ (8002618 <FLASH_Program_HalfWord+0x34>)
 80025fa:	691a      	ldr	r2, [r3, #16]
 80025fc:	4b06      	ldr	r3, [pc, #24]	@ (8002618 <FLASH_Program_HalfWord+0x34>)
 80025fe:	2101      	movs	r1, #1
 8002600:	430a      	orrs	r2, r1
 8002602:	611a      	str	r2, [r3, #16]
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	1cba      	adds	r2, r7, #2
 8002608:	8812      	ldrh	r2, [r2, #0]
 800260a:	801a      	strh	r2, [r3, #0]
 800260c:	46c0      	nop			@ (mov r8, r8)
 800260e:	46bd      	mov	sp, r7
 8002610:	b002      	add	sp, #8
 8002612:	bd80      	pop	{r7, pc}
 8002614:	200002c0 	.word	0x200002c0
 8002618:	40022000 	.word	0x40022000

0800261c <FLASH_WaitForLastOperation>:
 800261c:	b580      	push	{r7, lr}
 800261e:	b084      	sub	sp, #16
 8002620:	af00      	add	r7, sp, #0
 8002622:	6078      	str	r0, [r7, #4]
 8002624:	f7ff fdfe 	bl	8002224 <HAL_GetTick>
 8002628:	0003      	movs	r3, r0
 800262a:	60fb      	str	r3, [r7, #12]
 800262c:	e00f      	b.n	800264e <FLASH_WaitForLastOperation+0x32>
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	3301      	adds	r3, #1
 8002632:	d00c      	beq.n	800264e <FLASH_WaitForLastOperation+0x32>
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	2b00      	cmp	r3, #0
 8002638:	d007      	beq.n	800264a <FLASH_WaitForLastOperation+0x2e>
 800263a:	f7ff fdf3 	bl	8002224 <HAL_GetTick>
 800263e:	0002      	movs	r2, r0
 8002640:	68fb      	ldr	r3, [r7, #12]
 8002642:	1ad3      	subs	r3, r2, r3
 8002644:	687a      	ldr	r2, [r7, #4]
 8002646:	429a      	cmp	r2, r3
 8002648:	d201      	bcs.n	800264e <FLASH_WaitForLastOperation+0x32>
 800264a:	2303      	movs	r3, #3
 800264c:	e01f      	b.n	800268e <FLASH_WaitForLastOperation+0x72>
 800264e:	4b12      	ldr	r3, [pc, #72]	@ (8002698 <FLASH_WaitForLastOperation+0x7c>)
 8002650:	68db      	ldr	r3, [r3, #12]
 8002652:	2201      	movs	r2, #1
 8002654:	4013      	ands	r3, r2
 8002656:	2b01      	cmp	r3, #1
 8002658:	d0e9      	beq.n	800262e <FLASH_WaitForLastOperation+0x12>
 800265a:	4b0f      	ldr	r3, [pc, #60]	@ (8002698 <FLASH_WaitForLastOperation+0x7c>)
 800265c:	68db      	ldr	r3, [r3, #12]
 800265e:	2220      	movs	r2, #32
 8002660:	4013      	ands	r3, r2
 8002662:	2b20      	cmp	r3, #32
 8002664:	d102      	bne.n	800266c <FLASH_WaitForLastOperation+0x50>
 8002666:	4b0c      	ldr	r3, [pc, #48]	@ (8002698 <FLASH_WaitForLastOperation+0x7c>)
 8002668:	2220      	movs	r2, #32
 800266a:	60da      	str	r2, [r3, #12]
 800266c:	4b0a      	ldr	r3, [pc, #40]	@ (8002698 <FLASH_WaitForLastOperation+0x7c>)
 800266e:	68db      	ldr	r3, [r3, #12]
 8002670:	2210      	movs	r2, #16
 8002672:	4013      	ands	r3, r2
 8002674:	2b10      	cmp	r3, #16
 8002676:	d005      	beq.n	8002684 <FLASH_WaitForLastOperation+0x68>
 8002678:	4b07      	ldr	r3, [pc, #28]	@ (8002698 <FLASH_WaitForLastOperation+0x7c>)
 800267a:	68db      	ldr	r3, [r3, #12]
 800267c:	2204      	movs	r2, #4
 800267e:	4013      	ands	r3, r2
 8002680:	2b04      	cmp	r3, #4
 8002682:	d103      	bne.n	800268c <FLASH_WaitForLastOperation+0x70>
 8002684:	f000 f80a 	bl	800269c <FLASH_SetErrorCode>
 8002688:	2301      	movs	r3, #1
 800268a:	e000      	b.n	800268e <FLASH_WaitForLastOperation+0x72>
 800268c:	2300      	movs	r3, #0
 800268e:	0018      	movs	r0, r3
 8002690:	46bd      	mov	sp, r7
 8002692:	b004      	add	sp, #16
 8002694:	bd80      	pop	{r7, pc}
 8002696:	46c0      	nop			@ (mov r8, r8)
 8002698:	40022000 	.word	0x40022000

0800269c <FLASH_SetErrorCode>:
 800269c:	b580      	push	{r7, lr}
 800269e:	b082      	sub	sp, #8
 80026a0:	af00      	add	r7, sp, #0
 80026a2:	2300      	movs	r3, #0
 80026a4:	607b      	str	r3, [r7, #4]
 80026a6:	4b13      	ldr	r3, [pc, #76]	@ (80026f4 <FLASH_SetErrorCode+0x58>)
 80026a8:	68db      	ldr	r3, [r3, #12]
 80026aa:	2210      	movs	r2, #16
 80026ac:	4013      	ands	r3, r2
 80026ae:	2b10      	cmp	r3, #16
 80026b0:	d109      	bne.n	80026c6 <FLASH_SetErrorCode+0x2a>
 80026b2:	4b11      	ldr	r3, [pc, #68]	@ (80026f8 <FLASH_SetErrorCode+0x5c>)
 80026b4:	69db      	ldr	r3, [r3, #28]
 80026b6:	2202      	movs	r2, #2
 80026b8:	431a      	orrs	r2, r3
 80026ba:	4b0f      	ldr	r3, [pc, #60]	@ (80026f8 <FLASH_SetErrorCode+0x5c>)
 80026bc:	61da      	str	r2, [r3, #28]
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	2210      	movs	r2, #16
 80026c2:	4313      	orrs	r3, r2
 80026c4:	607b      	str	r3, [r7, #4]
 80026c6:	4b0b      	ldr	r3, [pc, #44]	@ (80026f4 <FLASH_SetErrorCode+0x58>)
 80026c8:	68db      	ldr	r3, [r3, #12]
 80026ca:	2204      	movs	r2, #4
 80026cc:	4013      	ands	r3, r2
 80026ce:	2b04      	cmp	r3, #4
 80026d0:	d109      	bne.n	80026e6 <FLASH_SetErrorCode+0x4a>
 80026d2:	4b09      	ldr	r3, [pc, #36]	@ (80026f8 <FLASH_SetErrorCode+0x5c>)
 80026d4:	69db      	ldr	r3, [r3, #28]
 80026d6:	2201      	movs	r2, #1
 80026d8:	431a      	orrs	r2, r3
 80026da:	4b07      	ldr	r3, [pc, #28]	@ (80026f8 <FLASH_SetErrorCode+0x5c>)
 80026dc:	61da      	str	r2, [r3, #28]
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	2204      	movs	r2, #4
 80026e2:	4313      	orrs	r3, r2
 80026e4:	607b      	str	r3, [r7, #4]
 80026e6:	4b03      	ldr	r3, [pc, #12]	@ (80026f4 <FLASH_SetErrorCode+0x58>)
 80026e8:	687a      	ldr	r2, [r7, #4]
 80026ea:	60da      	str	r2, [r3, #12]
 80026ec:	46c0      	nop			@ (mov r8, r8)
 80026ee:	46bd      	mov	sp, r7
 80026f0:	b002      	add	sp, #8
 80026f2:	bd80      	pop	{r7, pc}
 80026f4:	40022000 	.word	0x40022000
 80026f8:	200002c0 	.word	0x200002c0

080026fc <HAL_FLASHEx_Erase>:
 80026fc:	b5b0      	push	{r4, r5, r7, lr}
 80026fe:	b084      	sub	sp, #16
 8002700:	af00      	add	r7, sp, #0
 8002702:	6078      	str	r0, [r7, #4]
 8002704:	6039      	str	r1, [r7, #0]
 8002706:	230f      	movs	r3, #15
 8002708:	18fb      	adds	r3, r7, r3
 800270a:	2201      	movs	r2, #1
 800270c:	701a      	strb	r2, [r3, #0]
 800270e:	2300      	movs	r3, #0
 8002710:	60bb      	str	r3, [r7, #8]
 8002712:	4b32      	ldr	r3, [pc, #200]	@ (80027dc <HAL_FLASHEx_Erase+0xe0>)
 8002714:	7e1b      	ldrb	r3, [r3, #24]
 8002716:	2b01      	cmp	r3, #1
 8002718:	d101      	bne.n	800271e <HAL_FLASHEx_Erase+0x22>
 800271a:	2302      	movs	r3, #2
 800271c:	e05a      	b.n	80027d4 <HAL_FLASHEx_Erase+0xd8>
 800271e:	4b2f      	ldr	r3, [pc, #188]	@ (80027dc <HAL_FLASHEx_Erase+0xe0>)
 8002720:	2201      	movs	r2, #1
 8002722:	761a      	strb	r2, [r3, #24]
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	2b01      	cmp	r3, #1
 800272a:	d116      	bne.n	800275a <HAL_FLASHEx_Erase+0x5e>
 800272c:	4b2c      	ldr	r3, [pc, #176]	@ (80027e0 <HAL_FLASHEx_Erase+0xe4>)
 800272e:	0018      	movs	r0, r3
 8002730:	f7ff ff74 	bl	800261c <FLASH_WaitForLastOperation>
 8002734:	1e03      	subs	r3, r0, #0
 8002736:	d147      	bne.n	80027c8 <HAL_FLASHEx_Erase+0xcc>
 8002738:	f000 f856 	bl	80027e8 <FLASH_MassErase>
 800273c:	230f      	movs	r3, #15
 800273e:	18fc      	adds	r4, r7, r3
 8002740:	4b27      	ldr	r3, [pc, #156]	@ (80027e0 <HAL_FLASHEx_Erase+0xe4>)
 8002742:	0018      	movs	r0, r3
 8002744:	f7ff ff6a 	bl	800261c <FLASH_WaitForLastOperation>
 8002748:	0003      	movs	r3, r0
 800274a:	7023      	strb	r3, [r4, #0]
 800274c:	4b25      	ldr	r3, [pc, #148]	@ (80027e4 <HAL_FLASHEx_Erase+0xe8>)
 800274e:	691a      	ldr	r2, [r3, #16]
 8002750:	4b24      	ldr	r3, [pc, #144]	@ (80027e4 <HAL_FLASHEx_Erase+0xe8>)
 8002752:	2104      	movs	r1, #4
 8002754:	438a      	bics	r2, r1
 8002756:	611a      	str	r2, [r3, #16]
 8002758:	e036      	b.n	80027c8 <HAL_FLASHEx_Erase+0xcc>
 800275a:	4b21      	ldr	r3, [pc, #132]	@ (80027e0 <HAL_FLASHEx_Erase+0xe4>)
 800275c:	0018      	movs	r0, r3
 800275e:	f7ff ff5d 	bl	800261c <FLASH_WaitForLastOperation>
 8002762:	1e03      	subs	r3, r0, #0
 8002764:	d130      	bne.n	80027c8 <HAL_FLASHEx_Erase+0xcc>
 8002766:	683b      	ldr	r3, [r7, #0]
 8002768:	2201      	movs	r2, #1
 800276a:	4252      	negs	r2, r2
 800276c:	601a      	str	r2, [r3, #0]
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	685b      	ldr	r3, [r3, #4]
 8002772:	60bb      	str	r3, [r7, #8]
 8002774:	e01f      	b.n	80027b6 <HAL_FLASHEx_Erase+0xba>
 8002776:	68bb      	ldr	r3, [r7, #8]
 8002778:	0018      	movs	r0, r3
 800277a:	f000 f84d 	bl	8002818 <FLASH_PageErase>
 800277e:	250f      	movs	r5, #15
 8002780:	197c      	adds	r4, r7, r5
 8002782:	4b17      	ldr	r3, [pc, #92]	@ (80027e0 <HAL_FLASHEx_Erase+0xe4>)
 8002784:	0018      	movs	r0, r3
 8002786:	f7ff ff49 	bl	800261c <FLASH_WaitForLastOperation>
 800278a:	0003      	movs	r3, r0
 800278c:	7023      	strb	r3, [r4, #0]
 800278e:	4b15      	ldr	r3, [pc, #84]	@ (80027e4 <HAL_FLASHEx_Erase+0xe8>)
 8002790:	691a      	ldr	r2, [r3, #16]
 8002792:	4b14      	ldr	r3, [pc, #80]	@ (80027e4 <HAL_FLASHEx_Erase+0xe8>)
 8002794:	2102      	movs	r1, #2
 8002796:	438a      	bics	r2, r1
 8002798:	611a      	str	r2, [r3, #16]
 800279a:	197b      	adds	r3, r7, r5
 800279c:	781b      	ldrb	r3, [r3, #0]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d003      	beq.n	80027aa <HAL_FLASHEx_Erase+0xae>
 80027a2:	683b      	ldr	r3, [r7, #0]
 80027a4:	68ba      	ldr	r2, [r7, #8]
 80027a6:	601a      	str	r2, [r3, #0]
 80027a8:	e00e      	b.n	80027c8 <HAL_FLASHEx_Erase+0xcc>
 80027aa:	68bb      	ldr	r3, [r7, #8]
 80027ac:	2280      	movs	r2, #128	@ 0x80
 80027ae:	00d2      	lsls	r2, r2, #3
 80027b0:	4694      	mov	ip, r2
 80027b2:	4463      	add	r3, ip
 80027b4:	60bb      	str	r3, [r7, #8]
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	689b      	ldr	r3, [r3, #8]
 80027ba:	029a      	lsls	r2, r3, #10
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	685b      	ldr	r3, [r3, #4]
 80027c0:	18d3      	adds	r3, r2, r3
 80027c2:	68ba      	ldr	r2, [r7, #8]
 80027c4:	429a      	cmp	r2, r3
 80027c6:	d3d6      	bcc.n	8002776 <HAL_FLASHEx_Erase+0x7a>
 80027c8:	4b04      	ldr	r3, [pc, #16]	@ (80027dc <HAL_FLASHEx_Erase+0xe0>)
 80027ca:	2200      	movs	r2, #0
 80027cc:	761a      	strb	r2, [r3, #24]
 80027ce:	230f      	movs	r3, #15
 80027d0:	18fb      	adds	r3, r7, r3
 80027d2:	781b      	ldrb	r3, [r3, #0]
 80027d4:	0018      	movs	r0, r3
 80027d6:	46bd      	mov	sp, r7
 80027d8:	b004      	add	sp, #16
 80027da:	bdb0      	pop	{r4, r5, r7, pc}
 80027dc:	200002c0 	.word	0x200002c0
 80027e0:	0000c350 	.word	0x0000c350
 80027e4:	40022000 	.word	0x40022000

080027e8 <FLASH_MassErase>:
 80027e8:	b580      	push	{r7, lr}
 80027ea:	af00      	add	r7, sp, #0
 80027ec:	4b08      	ldr	r3, [pc, #32]	@ (8002810 <FLASH_MassErase+0x28>)
 80027ee:	2200      	movs	r2, #0
 80027f0:	61da      	str	r2, [r3, #28]
 80027f2:	4b08      	ldr	r3, [pc, #32]	@ (8002814 <FLASH_MassErase+0x2c>)
 80027f4:	691a      	ldr	r2, [r3, #16]
 80027f6:	4b07      	ldr	r3, [pc, #28]	@ (8002814 <FLASH_MassErase+0x2c>)
 80027f8:	2104      	movs	r1, #4
 80027fa:	430a      	orrs	r2, r1
 80027fc:	611a      	str	r2, [r3, #16]
 80027fe:	4b05      	ldr	r3, [pc, #20]	@ (8002814 <FLASH_MassErase+0x2c>)
 8002800:	691a      	ldr	r2, [r3, #16]
 8002802:	4b04      	ldr	r3, [pc, #16]	@ (8002814 <FLASH_MassErase+0x2c>)
 8002804:	2140      	movs	r1, #64	@ 0x40
 8002806:	430a      	orrs	r2, r1
 8002808:	611a      	str	r2, [r3, #16]
 800280a:	46c0      	nop			@ (mov r8, r8)
 800280c:	46bd      	mov	sp, r7
 800280e:	bd80      	pop	{r7, pc}
 8002810:	200002c0 	.word	0x200002c0
 8002814:	40022000 	.word	0x40022000

08002818 <FLASH_PageErase>:
 8002818:	b580      	push	{r7, lr}
 800281a:	b082      	sub	sp, #8
 800281c:	af00      	add	r7, sp, #0
 800281e:	6078      	str	r0, [r7, #4]
 8002820:	4b0a      	ldr	r3, [pc, #40]	@ (800284c <FLASH_PageErase+0x34>)
 8002822:	2200      	movs	r2, #0
 8002824:	61da      	str	r2, [r3, #28]
 8002826:	4b0a      	ldr	r3, [pc, #40]	@ (8002850 <FLASH_PageErase+0x38>)
 8002828:	691a      	ldr	r2, [r3, #16]
 800282a:	4b09      	ldr	r3, [pc, #36]	@ (8002850 <FLASH_PageErase+0x38>)
 800282c:	2102      	movs	r1, #2
 800282e:	430a      	orrs	r2, r1
 8002830:	611a      	str	r2, [r3, #16]
 8002832:	4b07      	ldr	r3, [pc, #28]	@ (8002850 <FLASH_PageErase+0x38>)
 8002834:	687a      	ldr	r2, [r7, #4]
 8002836:	615a      	str	r2, [r3, #20]
 8002838:	4b05      	ldr	r3, [pc, #20]	@ (8002850 <FLASH_PageErase+0x38>)
 800283a:	691a      	ldr	r2, [r3, #16]
 800283c:	4b04      	ldr	r3, [pc, #16]	@ (8002850 <FLASH_PageErase+0x38>)
 800283e:	2140      	movs	r1, #64	@ 0x40
 8002840:	430a      	orrs	r2, r1
 8002842:	611a      	str	r2, [r3, #16]
 8002844:	46c0      	nop			@ (mov r8, r8)
 8002846:	46bd      	mov	sp, r7
 8002848:	b002      	add	sp, #8
 800284a:	bd80      	pop	{r7, pc}
 800284c:	200002c0 	.word	0x200002c0
 8002850:	40022000 	.word	0x40022000

08002854 <HAL_GPIO_Init>:
 8002854:	b580      	push	{r7, lr}
 8002856:	b086      	sub	sp, #24
 8002858:	af00      	add	r7, sp, #0
 800285a:	6078      	str	r0, [r7, #4]
 800285c:	6039      	str	r1, [r7, #0]
 800285e:	2300      	movs	r3, #0
 8002860:	617b      	str	r3, [r7, #20]
 8002862:	e14f      	b.n	8002b04 <HAL_GPIO_Init+0x2b0>
 8002864:	683b      	ldr	r3, [r7, #0]
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	2101      	movs	r1, #1
 800286a:	697a      	ldr	r2, [r7, #20]
 800286c:	4091      	lsls	r1, r2
 800286e:	000a      	movs	r2, r1
 8002870:	4013      	ands	r3, r2
 8002872:	60fb      	str	r3, [r7, #12]
 8002874:	68fb      	ldr	r3, [r7, #12]
 8002876:	2b00      	cmp	r3, #0
 8002878:	d100      	bne.n	800287c <HAL_GPIO_Init+0x28>
 800287a:	e140      	b.n	8002afe <HAL_GPIO_Init+0x2aa>
 800287c:	683b      	ldr	r3, [r7, #0]
 800287e:	685b      	ldr	r3, [r3, #4]
 8002880:	2203      	movs	r2, #3
 8002882:	4013      	ands	r3, r2
 8002884:	2b01      	cmp	r3, #1
 8002886:	d005      	beq.n	8002894 <HAL_GPIO_Init+0x40>
 8002888:	683b      	ldr	r3, [r7, #0]
 800288a:	685b      	ldr	r3, [r3, #4]
 800288c:	2203      	movs	r2, #3
 800288e:	4013      	ands	r3, r2
 8002890:	2b02      	cmp	r3, #2
 8002892:	d130      	bne.n	80028f6 <HAL_GPIO_Init+0xa2>
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	689b      	ldr	r3, [r3, #8]
 8002898:	613b      	str	r3, [r7, #16]
 800289a:	697b      	ldr	r3, [r7, #20]
 800289c:	005b      	lsls	r3, r3, #1
 800289e:	2203      	movs	r2, #3
 80028a0:	409a      	lsls	r2, r3
 80028a2:	0013      	movs	r3, r2
 80028a4:	43da      	mvns	r2, r3
 80028a6:	693b      	ldr	r3, [r7, #16]
 80028a8:	4013      	ands	r3, r2
 80028aa:	613b      	str	r3, [r7, #16]
 80028ac:	683b      	ldr	r3, [r7, #0]
 80028ae:	68da      	ldr	r2, [r3, #12]
 80028b0:	697b      	ldr	r3, [r7, #20]
 80028b2:	005b      	lsls	r3, r3, #1
 80028b4:	409a      	lsls	r2, r3
 80028b6:	0013      	movs	r3, r2
 80028b8:	693a      	ldr	r2, [r7, #16]
 80028ba:	4313      	orrs	r3, r2
 80028bc:	613b      	str	r3, [r7, #16]
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	693a      	ldr	r2, [r7, #16]
 80028c2:	609a      	str	r2, [r3, #8]
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	685b      	ldr	r3, [r3, #4]
 80028c8:	613b      	str	r3, [r7, #16]
 80028ca:	2201      	movs	r2, #1
 80028cc:	697b      	ldr	r3, [r7, #20]
 80028ce:	409a      	lsls	r2, r3
 80028d0:	0013      	movs	r3, r2
 80028d2:	43da      	mvns	r2, r3
 80028d4:	693b      	ldr	r3, [r7, #16]
 80028d6:	4013      	ands	r3, r2
 80028d8:	613b      	str	r3, [r7, #16]
 80028da:	683b      	ldr	r3, [r7, #0]
 80028dc:	685b      	ldr	r3, [r3, #4]
 80028de:	091b      	lsrs	r3, r3, #4
 80028e0:	2201      	movs	r2, #1
 80028e2:	401a      	ands	r2, r3
 80028e4:	697b      	ldr	r3, [r7, #20]
 80028e6:	409a      	lsls	r2, r3
 80028e8:	0013      	movs	r3, r2
 80028ea:	693a      	ldr	r2, [r7, #16]
 80028ec:	4313      	orrs	r3, r2
 80028ee:	613b      	str	r3, [r7, #16]
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	693a      	ldr	r2, [r7, #16]
 80028f4:	605a      	str	r2, [r3, #4]
 80028f6:	683b      	ldr	r3, [r7, #0]
 80028f8:	685b      	ldr	r3, [r3, #4]
 80028fa:	2203      	movs	r2, #3
 80028fc:	4013      	ands	r3, r2
 80028fe:	2b03      	cmp	r3, #3
 8002900:	d017      	beq.n	8002932 <HAL_GPIO_Init+0xde>
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	68db      	ldr	r3, [r3, #12]
 8002906:	613b      	str	r3, [r7, #16]
 8002908:	697b      	ldr	r3, [r7, #20]
 800290a:	005b      	lsls	r3, r3, #1
 800290c:	2203      	movs	r2, #3
 800290e:	409a      	lsls	r2, r3
 8002910:	0013      	movs	r3, r2
 8002912:	43da      	mvns	r2, r3
 8002914:	693b      	ldr	r3, [r7, #16]
 8002916:	4013      	ands	r3, r2
 8002918:	613b      	str	r3, [r7, #16]
 800291a:	683b      	ldr	r3, [r7, #0]
 800291c:	689a      	ldr	r2, [r3, #8]
 800291e:	697b      	ldr	r3, [r7, #20]
 8002920:	005b      	lsls	r3, r3, #1
 8002922:	409a      	lsls	r2, r3
 8002924:	0013      	movs	r3, r2
 8002926:	693a      	ldr	r2, [r7, #16]
 8002928:	4313      	orrs	r3, r2
 800292a:	613b      	str	r3, [r7, #16]
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	693a      	ldr	r2, [r7, #16]
 8002930:	60da      	str	r2, [r3, #12]
 8002932:	683b      	ldr	r3, [r7, #0]
 8002934:	685b      	ldr	r3, [r3, #4]
 8002936:	2203      	movs	r2, #3
 8002938:	4013      	ands	r3, r2
 800293a:	2b02      	cmp	r3, #2
 800293c:	d123      	bne.n	8002986 <HAL_GPIO_Init+0x132>
 800293e:	697b      	ldr	r3, [r7, #20]
 8002940:	08da      	lsrs	r2, r3, #3
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	3208      	adds	r2, #8
 8002946:	0092      	lsls	r2, r2, #2
 8002948:	58d3      	ldr	r3, [r2, r3]
 800294a:	613b      	str	r3, [r7, #16]
 800294c:	697b      	ldr	r3, [r7, #20]
 800294e:	2207      	movs	r2, #7
 8002950:	4013      	ands	r3, r2
 8002952:	009b      	lsls	r3, r3, #2
 8002954:	220f      	movs	r2, #15
 8002956:	409a      	lsls	r2, r3
 8002958:	0013      	movs	r3, r2
 800295a:	43da      	mvns	r2, r3
 800295c:	693b      	ldr	r3, [r7, #16]
 800295e:	4013      	ands	r3, r2
 8002960:	613b      	str	r3, [r7, #16]
 8002962:	683b      	ldr	r3, [r7, #0]
 8002964:	691a      	ldr	r2, [r3, #16]
 8002966:	697b      	ldr	r3, [r7, #20]
 8002968:	2107      	movs	r1, #7
 800296a:	400b      	ands	r3, r1
 800296c:	009b      	lsls	r3, r3, #2
 800296e:	409a      	lsls	r2, r3
 8002970:	0013      	movs	r3, r2
 8002972:	693a      	ldr	r2, [r7, #16]
 8002974:	4313      	orrs	r3, r2
 8002976:	613b      	str	r3, [r7, #16]
 8002978:	697b      	ldr	r3, [r7, #20]
 800297a:	08da      	lsrs	r2, r3, #3
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	3208      	adds	r2, #8
 8002980:	0092      	lsls	r2, r2, #2
 8002982:	6939      	ldr	r1, [r7, #16]
 8002984:	50d1      	str	r1, [r2, r3]
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	613b      	str	r3, [r7, #16]
 800298c:	697b      	ldr	r3, [r7, #20]
 800298e:	005b      	lsls	r3, r3, #1
 8002990:	2203      	movs	r2, #3
 8002992:	409a      	lsls	r2, r3
 8002994:	0013      	movs	r3, r2
 8002996:	43da      	mvns	r2, r3
 8002998:	693b      	ldr	r3, [r7, #16]
 800299a:	4013      	ands	r3, r2
 800299c:	613b      	str	r3, [r7, #16]
 800299e:	683b      	ldr	r3, [r7, #0]
 80029a0:	685b      	ldr	r3, [r3, #4]
 80029a2:	2203      	movs	r2, #3
 80029a4:	401a      	ands	r2, r3
 80029a6:	697b      	ldr	r3, [r7, #20]
 80029a8:	005b      	lsls	r3, r3, #1
 80029aa:	409a      	lsls	r2, r3
 80029ac:	0013      	movs	r3, r2
 80029ae:	693a      	ldr	r2, [r7, #16]
 80029b0:	4313      	orrs	r3, r2
 80029b2:	613b      	str	r3, [r7, #16]
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	693a      	ldr	r2, [r7, #16]
 80029b8:	601a      	str	r2, [r3, #0]
 80029ba:	683b      	ldr	r3, [r7, #0]
 80029bc:	685a      	ldr	r2, [r3, #4]
 80029be:	23c0      	movs	r3, #192	@ 0xc0
 80029c0:	029b      	lsls	r3, r3, #10
 80029c2:	4013      	ands	r3, r2
 80029c4:	d100      	bne.n	80029c8 <HAL_GPIO_Init+0x174>
 80029c6:	e09a      	b.n	8002afe <HAL_GPIO_Init+0x2aa>
 80029c8:	4b54      	ldr	r3, [pc, #336]	@ (8002b1c <HAL_GPIO_Init+0x2c8>)
 80029ca:	699a      	ldr	r2, [r3, #24]
 80029cc:	4b53      	ldr	r3, [pc, #332]	@ (8002b1c <HAL_GPIO_Init+0x2c8>)
 80029ce:	2101      	movs	r1, #1
 80029d0:	430a      	orrs	r2, r1
 80029d2:	619a      	str	r2, [r3, #24]
 80029d4:	4b51      	ldr	r3, [pc, #324]	@ (8002b1c <HAL_GPIO_Init+0x2c8>)
 80029d6:	699b      	ldr	r3, [r3, #24]
 80029d8:	2201      	movs	r2, #1
 80029da:	4013      	ands	r3, r2
 80029dc:	60bb      	str	r3, [r7, #8]
 80029de:	68bb      	ldr	r3, [r7, #8]
 80029e0:	4a4f      	ldr	r2, [pc, #316]	@ (8002b20 <HAL_GPIO_Init+0x2cc>)
 80029e2:	697b      	ldr	r3, [r7, #20]
 80029e4:	089b      	lsrs	r3, r3, #2
 80029e6:	3302      	adds	r3, #2
 80029e8:	009b      	lsls	r3, r3, #2
 80029ea:	589b      	ldr	r3, [r3, r2]
 80029ec:	613b      	str	r3, [r7, #16]
 80029ee:	697b      	ldr	r3, [r7, #20]
 80029f0:	2203      	movs	r2, #3
 80029f2:	4013      	ands	r3, r2
 80029f4:	009b      	lsls	r3, r3, #2
 80029f6:	220f      	movs	r2, #15
 80029f8:	409a      	lsls	r2, r3
 80029fa:	0013      	movs	r3, r2
 80029fc:	43da      	mvns	r2, r3
 80029fe:	693b      	ldr	r3, [r7, #16]
 8002a00:	4013      	ands	r3, r2
 8002a02:	613b      	str	r3, [r7, #16]
 8002a04:	687a      	ldr	r2, [r7, #4]
 8002a06:	2390      	movs	r3, #144	@ 0x90
 8002a08:	05db      	lsls	r3, r3, #23
 8002a0a:	429a      	cmp	r2, r3
 8002a0c:	d013      	beq.n	8002a36 <HAL_GPIO_Init+0x1e2>
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	4a44      	ldr	r2, [pc, #272]	@ (8002b24 <HAL_GPIO_Init+0x2d0>)
 8002a12:	4293      	cmp	r3, r2
 8002a14:	d00d      	beq.n	8002a32 <HAL_GPIO_Init+0x1de>
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	4a43      	ldr	r2, [pc, #268]	@ (8002b28 <HAL_GPIO_Init+0x2d4>)
 8002a1a:	4293      	cmp	r3, r2
 8002a1c:	d007      	beq.n	8002a2e <HAL_GPIO_Init+0x1da>
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	4a42      	ldr	r2, [pc, #264]	@ (8002b2c <HAL_GPIO_Init+0x2d8>)
 8002a22:	4293      	cmp	r3, r2
 8002a24:	d101      	bne.n	8002a2a <HAL_GPIO_Init+0x1d6>
 8002a26:	2303      	movs	r3, #3
 8002a28:	e006      	b.n	8002a38 <HAL_GPIO_Init+0x1e4>
 8002a2a:	2305      	movs	r3, #5
 8002a2c:	e004      	b.n	8002a38 <HAL_GPIO_Init+0x1e4>
 8002a2e:	2302      	movs	r3, #2
 8002a30:	e002      	b.n	8002a38 <HAL_GPIO_Init+0x1e4>
 8002a32:	2301      	movs	r3, #1
 8002a34:	e000      	b.n	8002a38 <HAL_GPIO_Init+0x1e4>
 8002a36:	2300      	movs	r3, #0
 8002a38:	697a      	ldr	r2, [r7, #20]
 8002a3a:	2103      	movs	r1, #3
 8002a3c:	400a      	ands	r2, r1
 8002a3e:	0092      	lsls	r2, r2, #2
 8002a40:	4093      	lsls	r3, r2
 8002a42:	693a      	ldr	r2, [r7, #16]
 8002a44:	4313      	orrs	r3, r2
 8002a46:	613b      	str	r3, [r7, #16]
 8002a48:	4935      	ldr	r1, [pc, #212]	@ (8002b20 <HAL_GPIO_Init+0x2cc>)
 8002a4a:	697b      	ldr	r3, [r7, #20]
 8002a4c:	089b      	lsrs	r3, r3, #2
 8002a4e:	3302      	adds	r3, #2
 8002a50:	009b      	lsls	r3, r3, #2
 8002a52:	693a      	ldr	r2, [r7, #16]
 8002a54:	505a      	str	r2, [r3, r1]
 8002a56:	4b36      	ldr	r3, [pc, #216]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002a58:	689b      	ldr	r3, [r3, #8]
 8002a5a:	613b      	str	r3, [r7, #16]
 8002a5c:	68fb      	ldr	r3, [r7, #12]
 8002a5e:	43da      	mvns	r2, r3
 8002a60:	693b      	ldr	r3, [r7, #16]
 8002a62:	4013      	ands	r3, r2
 8002a64:	613b      	str	r3, [r7, #16]
 8002a66:	683b      	ldr	r3, [r7, #0]
 8002a68:	685a      	ldr	r2, [r3, #4]
 8002a6a:	2380      	movs	r3, #128	@ 0x80
 8002a6c:	035b      	lsls	r3, r3, #13
 8002a6e:	4013      	ands	r3, r2
 8002a70:	d003      	beq.n	8002a7a <HAL_GPIO_Init+0x226>
 8002a72:	693a      	ldr	r2, [r7, #16]
 8002a74:	68fb      	ldr	r3, [r7, #12]
 8002a76:	4313      	orrs	r3, r2
 8002a78:	613b      	str	r3, [r7, #16]
 8002a7a:	4b2d      	ldr	r3, [pc, #180]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002a7c:	693a      	ldr	r2, [r7, #16]
 8002a7e:	609a      	str	r2, [r3, #8]
 8002a80:	4b2b      	ldr	r3, [pc, #172]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002a82:	68db      	ldr	r3, [r3, #12]
 8002a84:	613b      	str	r3, [r7, #16]
 8002a86:	68fb      	ldr	r3, [r7, #12]
 8002a88:	43da      	mvns	r2, r3
 8002a8a:	693b      	ldr	r3, [r7, #16]
 8002a8c:	4013      	ands	r3, r2
 8002a8e:	613b      	str	r3, [r7, #16]
 8002a90:	683b      	ldr	r3, [r7, #0]
 8002a92:	685a      	ldr	r2, [r3, #4]
 8002a94:	2380      	movs	r3, #128	@ 0x80
 8002a96:	039b      	lsls	r3, r3, #14
 8002a98:	4013      	ands	r3, r2
 8002a9a:	d003      	beq.n	8002aa4 <HAL_GPIO_Init+0x250>
 8002a9c:	693a      	ldr	r2, [r7, #16]
 8002a9e:	68fb      	ldr	r3, [r7, #12]
 8002aa0:	4313      	orrs	r3, r2
 8002aa2:	613b      	str	r3, [r7, #16]
 8002aa4:	4b22      	ldr	r3, [pc, #136]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002aa6:	693a      	ldr	r2, [r7, #16]
 8002aa8:	60da      	str	r2, [r3, #12]
 8002aaa:	4b21      	ldr	r3, [pc, #132]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002aac:	685b      	ldr	r3, [r3, #4]
 8002aae:	613b      	str	r3, [r7, #16]
 8002ab0:	68fb      	ldr	r3, [r7, #12]
 8002ab2:	43da      	mvns	r2, r3
 8002ab4:	693b      	ldr	r3, [r7, #16]
 8002ab6:	4013      	ands	r3, r2
 8002ab8:	613b      	str	r3, [r7, #16]
 8002aba:	683b      	ldr	r3, [r7, #0]
 8002abc:	685a      	ldr	r2, [r3, #4]
 8002abe:	2380      	movs	r3, #128	@ 0x80
 8002ac0:	029b      	lsls	r3, r3, #10
 8002ac2:	4013      	ands	r3, r2
 8002ac4:	d003      	beq.n	8002ace <HAL_GPIO_Init+0x27a>
 8002ac6:	693a      	ldr	r2, [r7, #16]
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	4313      	orrs	r3, r2
 8002acc:	613b      	str	r3, [r7, #16]
 8002ace:	4b18      	ldr	r3, [pc, #96]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002ad0:	693a      	ldr	r2, [r7, #16]
 8002ad2:	605a      	str	r2, [r3, #4]
 8002ad4:	4b16      	ldr	r3, [pc, #88]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	613b      	str	r3, [r7, #16]
 8002ada:	68fb      	ldr	r3, [r7, #12]
 8002adc:	43da      	mvns	r2, r3
 8002ade:	693b      	ldr	r3, [r7, #16]
 8002ae0:	4013      	ands	r3, r2
 8002ae2:	613b      	str	r3, [r7, #16]
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	685a      	ldr	r2, [r3, #4]
 8002ae8:	2380      	movs	r3, #128	@ 0x80
 8002aea:	025b      	lsls	r3, r3, #9
 8002aec:	4013      	ands	r3, r2
 8002aee:	d003      	beq.n	8002af8 <HAL_GPIO_Init+0x2a4>
 8002af0:	693a      	ldr	r2, [r7, #16]
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	4313      	orrs	r3, r2
 8002af6:	613b      	str	r3, [r7, #16]
 8002af8:	4b0d      	ldr	r3, [pc, #52]	@ (8002b30 <HAL_GPIO_Init+0x2dc>)
 8002afa:	693a      	ldr	r2, [r7, #16]
 8002afc:	601a      	str	r2, [r3, #0]
 8002afe:	697b      	ldr	r3, [r7, #20]
 8002b00:	3301      	adds	r3, #1
 8002b02:	617b      	str	r3, [r7, #20]
 8002b04:	683b      	ldr	r3, [r7, #0]
 8002b06:	681a      	ldr	r2, [r3, #0]
 8002b08:	697b      	ldr	r3, [r7, #20]
 8002b0a:	40da      	lsrs	r2, r3
 8002b0c:	1e13      	subs	r3, r2, #0
 8002b0e:	d000      	beq.n	8002b12 <HAL_GPIO_Init+0x2be>
 8002b10:	e6a8      	b.n	8002864 <HAL_GPIO_Init+0x10>
 8002b12:	46c0      	nop			@ (mov r8, r8)
 8002b14:	46c0      	nop			@ (mov r8, r8)
 8002b16:	46bd      	mov	sp, r7
 8002b18:	b006      	add	sp, #24
 8002b1a:	bd80      	pop	{r7, pc}
 8002b1c:	40021000 	.word	0x40021000
 8002b20:	40010000 	.word	0x40010000
 8002b24:	48000400 	.word	0x48000400
 8002b28:	48000800 	.word	0x48000800
 8002b2c:	48000c00 	.word	0x48000c00
 8002b30:	40010400 	.word	0x40010400

08002b34 <HAL_GPIO_ReadPin>:
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b084      	sub	sp, #16
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	6078      	str	r0, [r7, #4]
 8002b3c:	000a      	movs	r2, r1
 8002b3e:	1cbb      	adds	r3, r7, #2
 8002b40:	801a      	strh	r2, [r3, #0]
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	691b      	ldr	r3, [r3, #16]
 8002b46:	1cba      	adds	r2, r7, #2
 8002b48:	8812      	ldrh	r2, [r2, #0]
 8002b4a:	4013      	ands	r3, r2
 8002b4c:	d004      	beq.n	8002b58 <HAL_GPIO_ReadPin+0x24>
 8002b4e:	230f      	movs	r3, #15
 8002b50:	18fb      	adds	r3, r7, r3
 8002b52:	2201      	movs	r2, #1
 8002b54:	701a      	strb	r2, [r3, #0]
 8002b56:	e003      	b.n	8002b60 <HAL_GPIO_ReadPin+0x2c>
 8002b58:	230f      	movs	r3, #15
 8002b5a:	18fb      	adds	r3, r7, r3
 8002b5c:	2200      	movs	r2, #0
 8002b5e:	701a      	strb	r2, [r3, #0]
 8002b60:	230f      	movs	r3, #15
 8002b62:	18fb      	adds	r3, r7, r3
 8002b64:	781b      	ldrb	r3, [r3, #0]
 8002b66:	0018      	movs	r0, r3
 8002b68:	46bd      	mov	sp, r7
 8002b6a:	b004      	add	sp, #16
 8002b6c:	bd80      	pop	{r7, pc}

08002b6e <HAL_GPIO_WritePin>:
 8002b6e:	b580      	push	{r7, lr}
 8002b70:	b082      	sub	sp, #8
 8002b72:	af00      	add	r7, sp, #0
 8002b74:	6078      	str	r0, [r7, #4]
 8002b76:	0008      	movs	r0, r1
 8002b78:	0011      	movs	r1, r2
 8002b7a:	1cbb      	adds	r3, r7, #2
 8002b7c:	1c02      	adds	r2, r0, #0
 8002b7e:	801a      	strh	r2, [r3, #0]
 8002b80:	1c7b      	adds	r3, r7, #1
 8002b82:	1c0a      	adds	r2, r1, #0
 8002b84:	701a      	strb	r2, [r3, #0]
 8002b86:	1c7b      	adds	r3, r7, #1
 8002b88:	781b      	ldrb	r3, [r3, #0]
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d004      	beq.n	8002b98 <HAL_GPIO_WritePin+0x2a>
 8002b8e:	1cbb      	adds	r3, r7, #2
 8002b90:	881a      	ldrh	r2, [r3, #0]
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	619a      	str	r2, [r3, #24]
 8002b96:	e003      	b.n	8002ba0 <HAL_GPIO_WritePin+0x32>
 8002b98:	1cbb      	adds	r3, r7, #2
 8002b9a:	881a      	ldrh	r2, [r3, #0]
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002ba0:	46c0      	nop			@ (mov r8, r8)
 8002ba2:	46bd      	mov	sp, r7
 8002ba4:	b002      	add	sp, #8
 8002ba6:	bd80      	pop	{r7, pc}

08002ba8 <HAL_GPIO_EXTI_IRQHandler>:
 8002ba8:	b580      	push	{r7, lr}
 8002baa:	b082      	sub	sp, #8
 8002bac:	af00      	add	r7, sp, #0
 8002bae:	0002      	movs	r2, r0
 8002bb0:	1dbb      	adds	r3, r7, #6
 8002bb2:	801a      	strh	r2, [r3, #0]
 8002bb4:	4b09      	ldr	r3, [pc, #36]	@ (8002bdc <HAL_GPIO_EXTI_IRQHandler+0x34>)
 8002bb6:	695b      	ldr	r3, [r3, #20]
 8002bb8:	1dba      	adds	r2, r7, #6
 8002bba:	8812      	ldrh	r2, [r2, #0]
 8002bbc:	4013      	ands	r3, r2
 8002bbe:	d008      	beq.n	8002bd2 <HAL_GPIO_EXTI_IRQHandler+0x2a>
 8002bc0:	4b06      	ldr	r3, [pc, #24]	@ (8002bdc <HAL_GPIO_EXTI_IRQHandler+0x34>)
 8002bc2:	1dba      	adds	r2, r7, #6
 8002bc4:	8812      	ldrh	r2, [r2, #0]
 8002bc6:	615a      	str	r2, [r3, #20]
 8002bc8:	1dbb      	adds	r3, r7, #6
 8002bca:	881b      	ldrh	r3, [r3, #0]
 8002bcc:	0018      	movs	r0, r3
 8002bce:	f7fe f975 	bl	8000ebc <HAL_GPIO_EXTI_Callback>
 8002bd2:	46c0      	nop			@ (mov r8, r8)
 8002bd4:	46bd      	mov	sp, r7
 8002bd6:	b002      	add	sp, #8
 8002bd8:	bd80      	pop	{r7, pc}
 8002bda:	46c0      	nop			@ (mov r8, r8)
 8002bdc:	40010400 	.word	0x40010400

08002be0 <HAL_RCC_OscConfig>:
 8002be0:	b580      	push	{r7, lr}
 8002be2:	b088      	sub	sp, #32
 8002be4:	af00      	add	r7, sp, #0
 8002be6:	6078      	str	r0, [r7, #4]
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	2b00      	cmp	r3, #0
 8002bec:	d101      	bne.n	8002bf2 <HAL_RCC_OscConfig+0x12>
 8002bee:	2301      	movs	r3, #1
 8002bf0:	e301      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	2201      	movs	r2, #1
 8002bf8:	4013      	ands	r3, r2
 8002bfa:	d100      	bne.n	8002bfe <HAL_RCC_OscConfig+0x1e>
 8002bfc:	e08d      	b.n	8002d1a <HAL_RCC_OscConfig+0x13a>
 8002bfe:	4bc3      	ldr	r3, [pc, #780]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c00:	685b      	ldr	r3, [r3, #4]
 8002c02:	220c      	movs	r2, #12
 8002c04:	4013      	ands	r3, r2
 8002c06:	2b04      	cmp	r3, #4
 8002c08:	d00e      	beq.n	8002c28 <HAL_RCC_OscConfig+0x48>
 8002c0a:	4bc0      	ldr	r3, [pc, #768]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c0c:	685b      	ldr	r3, [r3, #4]
 8002c0e:	220c      	movs	r2, #12
 8002c10:	4013      	ands	r3, r2
 8002c12:	2b08      	cmp	r3, #8
 8002c14:	d116      	bne.n	8002c44 <HAL_RCC_OscConfig+0x64>
 8002c16:	4bbd      	ldr	r3, [pc, #756]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c18:	685a      	ldr	r2, [r3, #4]
 8002c1a:	2380      	movs	r3, #128	@ 0x80
 8002c1c:	025b      	lsls	r3, r3, #9
 8002c1e:	401a      	ands	r2, r3
 8002c20:	2380      	movs	r3, #128	@ 0x80
 8002c22:	025b      	lsls	r3, r3, #9
 8002c24:	429a      	cmp	r2, r3
 8002c26:	d10d      	bne.n	8002c44 <HAL_RCC_OscConfig+0x64>
 8002c28:	4bb8      	ldr	r3, [pc, #736]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c2a:	681a      	ldr	r2, [r3, #0]
 8002c2c:	2380      	movs	r3, #128	@ 0x80
 8002c2e:	029b      	lsls	r3, r3, #10
 8002c30:	4013      	ands	r3, r2
 8002c32:	d100      	bne.n	8002c36 <HAL_RCC_OscConfig+0x56>
 8002c34:	e070      	b.n	8002d18 <HAL_RCC_OscConfig+0x138>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	685b      	ldr	r3, [r3, #4]
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d000      	beq.n	8002c40 <HAL_RCC_OscConfig+0x60>
 8002c3e:	e06b      	b.n	8002d18 <HAL_RCC_OscConfig+0x138>
 8002c40:	2301      	movs	r3, #1
 8002c42:	e2d8      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	685b      	ldr	r3, [r3, #4]
 8002c48:	2b01      	cmp	r3, #1
 8002c4a:	d107      	bne.n	8002c5c <HAL_RCC_OscConfig+0x7c>
 8002c4c:	4baf      	ldr	r3, [pc, #700]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c4e:	681a      	ldr	r2, [r3, #0]
 8002c50:	4bae      	ldr	r3, [pc, #696]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c52:	2180      	movs	r1, #128	@ 0x80
 8002c54:	0249      	lsls	r1, r1, #9
 8002c56:	430a      	orrs	r2, r1
 8002c58:	601a      	str	r2, [r3, #0]
 8002c5a:	e02f      	b.n	8002cbc <HAL_RCC_OscConfig+0xdc>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	685b      	ldr	r3, [r3, #4]
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d10c      	bne.n	8002c7e <HAL_RCC_OscConfig+0x9e>
 8002c64:	4ba9      	ldr	r3, [pc, #676]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c66:	681a      	ldr	r2, [r3, #0]
 8002c68:	4ba8      	ldr	r3, [pc, #672]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c6a:	49a9      	ldr	r1, [pc, #676]	@ (8002f10 <HAL_RCC_OscConfig+0x330>)
 8002c6c:	400a      	ands	r2, r1
 8002c6e:	601a      	str	r2, [r3, #0]
 8002c70:	4ba6      	ldr	r3, [pc, #664]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c72:	681a      	ldr	r2, [r3, #0]
 8002c74:	4ba5      	ldr	r3, [pc, #660]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c76:	49a7      	ldr	r1, [pc, #668]	@ (8002f14 <HAL_RCC_OscConfig+0x334>)
 8002c78:	400a      	ands	r2, r1
 8002c7a:	601a      	str	r2, [r3, #0]
 8002c7c:	e01e      	b.n	8002cbc <HAL_RCC_OscConfig+0xdc>
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	685b      	ldr	r3, [r3, #4]
 8002c82:	2b05      	cmp	r3, #5
 8002c84:	d10e      	bne.n	8002ca4 <HAL_RCC_OscConfig+0xc4>
 8002c86:	4ba1      	ldr	r3, [pc, #644]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c88:	681a      	ldr	r2, [r3, #0]
 8002c8a:	4ba0      	ldr	r3, [pc, #640]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c8c:	2180      	movs	r1, #128	@ 0x80
 8002c8e:	02c9      	lsls	r1, r1, #11
 8002c90:	430a      	orrs	r2, r1
 8002c92:	601a      	str	r2, [r3, #0]
 8002c94:	4b9d      	ldr	r3, [pc, #628]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c96:	681a      	ldr	r2, [r3, #0]
 8002c98:	4b9c      	ldr	r3, [pc, #624]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002c9a:	2180      	movs	r1, #128	@ 0x80
 8002c9c:	0249      	lsls	r1, r1, #9
 8002c9e:	430a      	orrs	r2, r1
 8002ca0:	601a      	str	r2, [r3, #0]
 8002ca2:	e00b      	b.n	8002cbc <HAL_RCC_OscConfig+0xdc>
 8002ca4:	4b99      	ldr	r3, [pc, #612]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002ca6:	681a      	ldr	r2, [r3, #0]
 8002ca8:	4b98      	ldr	r3, [pc, #608]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002caa:	4999      	ldr	r1, [pc, #612]	@ (8002f10 <HAL_RCC_OscConfig+0x330>)
 8002cac:	400a      	ands	r2, r1
 8002cae:	601a      	str	r2, [r3, #0]
 8002cb0:	4b96      	ldr	r3, [pc, #600]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002cb2:	681a      	ldr	r2, [r3, #0]
 8002cb4:	4b95      	ldr	r3, [pc, #596]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002cb6:	4997      	ldr	r1, [pc, #604]	@ (8002f14 <HAL_RCC_OscConfig+0x334>)
 8002cb8:	400a      	ands	r2, r1
 8002cba:	601a      	str	r2, [r3, #0]
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	685b      	ldr	r3, [r3, #4]
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	d014      	beq.n	8002cee <HAL_RCC_OscConfig+0x10e>
 8002cc4:	f7ff faae 	bl	8002224 <HAL_GetTick>
 8002cc8:	0003      	movs	r3, r0
 8002cca:	61bb      	str	r3, [r7, #24]
 8002ccc:	e008      	b.n	8002ce0 <HAL_RCC_OscConfig+0x100>
 8002cce:	f7ff faa9 	bl	8002224 <HAL_GetTick>
 8002cd2:	0002      	movs	r2, r0
 8002cd4:	69bb      	ldr	r3, [r7, #24]
 8002cd6:	1ad3      	subs	r3, r2, r3
 8002cd8:	2b64      	cmp	r3, #100	@ 0x64
 8002cda:	d901      	bls.n	8002ce0 <HAL_RCC_OscConfig+0x100>
 8002cdc:	2303      	movs	r3, #3
 8002cde:	e28a      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002ce0:	4b8a      	ldr	r3, [pc, #552]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002ce2:	681a      	ldr	r2, [r3, #0]
 8002ce4:	2380      	movs	r3, #128	@ 0x80
 8002ce6:	029b      	lsls	r3, r3, #10
 8002ce8:	4013      	ands	r3, r2
 8002cea:	d0f0      	beq.n	8002cce <HAL_RCC_OscConfig+0xee>
 8002cec:	e015      	b.n	8002d1a <HAL_RCC_OscConfig+0x13a>
 8002cee:	f7ff fa99 	bl	8002224 <HAL_GetTick>
 8002cf2:	0003      	movs	r3, r0
 8002cf4:	61bb      	str	r3, [r7, #24]
 8002cf6:	e008      	b.n	8002d0a <HAL_RCC_OscConfig+0x12a>
 8002cf8:	f7ff fa94 	bl	8002224 <HAL_GetTick>
 8002cfc:	0002      	movs	r2, r0
 8002cfe:	69bb      	ldr	r3, [r7, #24]
 8002d00:	1ad3      	subs	r3, r2, r3
 8002d02:	2b64      	cmp	r3, #100	@ 0x64
 8002d04:	d901      	bls.n	8002d0a <HAL_RCC_OscConfig+0x12a>
 8002d06:	2303      	movs	r3, #3
 8002d08:	e275      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002d0a:	4b80      	ldr	r3, [pc, #512]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d0c:	681a      	ldr	r2, [r3, #0]
 8002d0e:	2380      	movs	r3, #128	@ 0x80
 8002d10:	029b      	lsls	r3, r3, #10
 8002d12:	4013      	ands	r3, r2
 8002d14:	d1f0      	bne.n	8002cf8 <HAL_RCC_OscConfig+0x118>
 8002d16:	e000      	b.n	8002d1a <HAL_RCC_OscConfig+0x13a>
 8002d18:	46c0      	nop			@ (mov r8, r8)
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	2202      	movs	r2, #2
 8002d20:	4013      	ands	r3, r2
 8002d22:	d100      	bne.n	8002d26 <HAL_RCC_OscConfig+0x146>
 8002d24:	e069      	b.n	8002dfa <HAL_RCC_OscConfig+0x21a>
 8002d26:	4b79      	ldr	r3, [pc, #484]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d28:	685b      	ldr	r3, [r3, #4]
 8002d2a:	220c      	movs	r2, #12
 8002d2c:	4013      	ands	r3, r2
 8002d2e:	d00b      	beq.n	8002d48 <HAL_RCC_OscConfig+0x168>
 8002d30:	4b76      	ldr	r3, [pc, #472]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d32:	685b      	ldr	r3, [r3, #4]
 8002d34:	220c      	movs	r2, #12
 8002d36:	4013      	ands	r3, r2
 8002d38:	2b08      	cmp	r3, #8
 8002d3a:	d11c      	bne.n	8002d76 <HAL_RCC_OscConfig+0x196>
 8002d3c:	4b73      	ldr	r3, [pc, #460]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d3e:	685a      	ldr	r2, [r3, #4]
 8002d40:	2380      	movs	r3, #128	@ 0x80
 8002d42:	025b      	lsls	r3, r3, #9
 8002d44:	4013      	ands	r3, r2
 8002d46:	d116      	bne.n	8002d76 <HAL_RCC_OscConfig+0x196>
 8002d48:	4b70      	ldr	r3, [pc, #448]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	2202      	movs	r2, #2
 8002d4e:	4013      	ands	r3, r2
 8002d50:	d005      	beq.n	8002d5e <HAL_RCC_OscConfig+0x17e>
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	68db      	ldr	r3, [r3, #12]
 8002d56:	2b01      	cmp	r3, #1
 8002d58:	d001      	beq.n	8002d5e <HAL_RCC_OscConfig+0x17e>
 8002d5a:	2301      	movs	r3, #1
 8002d5c:	e24b      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002d5e:	4b6b      	ldr	r3, [pc, #428]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	22f8      	movs	r2, #248	@ 0xf8
 8002d64:	4393      	bics	r3, r2
 8002d66:	0019      	movs	r1, r3
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	691b      	ldr	r3, [r3, #16]
 8002d6c:	00da      	lsls	r2, r3, #3
 8002d6e:	4b67      	ldr	r3, [pc, #412]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d70:	430a      	orrs	r2, r1
 8002d72:	601a      	str	r2, [r3, #0]
 8002d74:	e041      	b.n	8002dfa <HAL_RCC_OscConfig+0x21a>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	68db      	ldr	r3, [r3, #12]
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	d024      	beq.n	8002dc8 <HAL_RCC_OscConfig+0x1e8>
 8002d7e:	4b63      	ldr	r3, [pc, #396]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d80:	681a      	ldr	r2, [r3, #0]
 8002d82:	4b62      	ldr	r3, [pc, #392]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002d84:	2101      	movs	r1, #1
 8002d86:	430a      	orrs	r2, r1
 8002d88:	601a      	str	r2, [r3, #0]
 8002d8a:	f7ff fa4b 	bl	8002224 <HAL_GetTick>
 8002d8e:	0003      	movs	r3, r0
 8002d90:	61bb      	str	r3, [r7, #24]
 8002d92:	e008      	b.n	8002da6 <HAL_RCC_OscConfig+0x1c6>
 8002d94:	f7ff fa46 	bl	8002224 <HAL_GetTick>
 8002d98:	0002      	movs	r2, r0
 8002d9a:	69bb      	ldr	r3, [r7, #24]
 8002d9c:	1ad3      	subs	r3, r2, r3
 8002d9e:	2b02      	cmp	r3, #2
 8002da0:	d901      	bls.n	8002da6 <HAL_RCC_OscConfig+0x1c6>
 8002da2:	2303      	movs	r3, #3
 8002da4:	e227      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002da6:	4b59      	ldr	r3, [pc, #356]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	2202      	movs	r2, #2
 8002dac:	4013      	ands	r3, r2
 8002dae:	d0f1      	beq.n	8002d94 <HAL_RCC_OscConfig+0x1b4>
 8002db0:	4b56      	ldr	r3, [pc, #344]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	22f8      	movs	r2, #248	@ 0xf8
 8002db6:	4393      	bics	r3, r2
 8002db8:	0019      	movs	r1, r3
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	691b      	ldr	r3, [r3, #16]
 8002dbe:	00da      	lsls	r2, r3, #3
 8002dc0:	4b52      	ldr	r3, [pc, #328]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002dc2:	430a      	orrs	r2, r1
 8002dc4:	601a      	str	r2, [r3, #0]
 8002dc6:	e018      	b.n	8002dfa <HAL_RCC_OscConfig+0x21a>
 8002dc8:	4b50      	ldr	r3, [pc, #320]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002dca:	681a      	ldr	r2, [r3, #0]
 8002dcc:	4b4f      	ldr	r3, [pc, #316]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002dce:	2101      	movs	r1, #1
 8002dd0:	438a      	bics	r2, r1
 8002dd2:	601a      	str	r2, [r3, #0]
 8002dd4:	f7ff fa26 	bl	8002224 <HAL_GetTick>
 8002dd8:	0003      	movs	r3, r0
 8002dda:	61bb      	str	r3, [r7, #24]
 8002ddc:	e008      	b.n	8002df0 <HAL_RCC_OscConfig+0x210>
 8002dde:	f7ff fa21 	bl	8002224 <HAL_GetTick>
 8002de2:	0002      	movs	r2, r0
 8002de4:	69bb      	ldr	r3, [r7, #24]
 8002de6:	1ad3      	subs	r3, r2, r3
 8002de8:	2b02      	cmp	r3, #2
 8002dea:	d901      	bls.n	8002df0 <HAL_RCC_OscConfig+0x210>
 8002dec:	2303      	movs	r3, #3
 8002dee:	e202      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002df0:	4b46      	ldr	r3, [pc, #280]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	2202      	movs	r2, #2
 8002df6:	4013      	ands	r3, r2
 8002df8:	d1f1      	bne.n	8002dde <HAL_RCC_OscConfig+0x1fe>
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	2208      	movs	r2, #8
 8002e00:	4013      	ands	r3, r2
 8002e02:	d036      	beq.n	8002e72 <HAL_RCC_OscConfig+0x292>
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	69db      	ldr	r3, [r3, #28]
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	d019      	beq.n	8002e40 <HAL_RCC_OscConfig+0x260>
 8002e0c:	4b3f      	ldr	r3, [pc, #252]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e0e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002e10:	4b3e      	ldr	r3, [pc, #248]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e12:	2101      	movs	r1, #1
 8002e14:	430a      	orrs	r2, r1
 8002e16:	625a      	str	r2, [r3, #36]	@ 0x24
 8002e18:	f7ff fa04 	bl	8002224 <HAL_GetTick>
 8002e1c:	0003      	movs	r3, r0
 8002e1e:	61bb      	str	r3, [r7, #24]
 8002e20:	e008      	b.n	8002e34 <HAL_RCC_OscConfig+0x254>
 8002e22:	f7ff f9ff 	bl	8002224 <HAL_GetTick>
 8002e26:	0002      	movs	r2, r0
 8002e28:	69bb      	ldr	r3, [r7, #24]
 8002e2a:	1ad3      	subs	r3, r2, r3
 8002e2c:	2b02      	cmp	r3, #2
 8002e2e:	d901      	bls.n	8002e34 <HAL_RCC_OscConfig+0x254>
 8002e30:	2303      	movs	r3, #3
 8002e32:	e1e0      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002e34:	4b35      	ldr	r3, [pc, #212]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e36:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e38:	2202      	movs	r2, #2
 8002e3a:	4013      	ands	r3, r2
 8002e3c:	d0f1      	beq.n	8002e22 <HAL_RCC_OscConfig+0x242>
 8002e3e:	e018      	b.n	8002e72 <HAL_RCC_OscConfig+0x292>
 8002e40:	4b32      	ldr	r3, [pc, #200]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e42:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002e44:	4b31      	ldr	r3, [pc, #196]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e46:	2101      	movs	r1, #1
 8002e48:	438a      	bics	r2, r1
 8002e4a:	625a      	str	r2, [r3, #36]	@ 0x24
 8002e4c:	f7ff f9ea 	bl	8002224 <HAL_GetTick>
 8002e50:	0003      	movs	r3, r0
 8002e52:	61bb      	str	r3, [r7, #24]
 8002e54:	e008      	b.n	8002e68 <HAL_RCC_OscConfig+0x288>
 8002e56:	f7ff f9e5 	bl	8002224 <HAL_GetTick>
 8002e5a:	0002      	movs	r2, r0
 8002e5c:	69bb      	ldr	r3, [r7, #24]
 8002e5e:	1ad3      	subs	r3, r2, r3
 8002e60:	2b02      	cmp	r3, #2
 8002e62:	d901      	bls.n	8002e68 <HAL_RCC_OscConfig+0x288>
 8002e64:	2303      	movs	r3, #3
 8002e66:	e1c6      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002e68:	4b28      	ldr	r3, [pc, #160]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e6c:	2202      	movs	r2, #2
 8002e6e:	4013      	ands	r3, r2
 8002e70:	d1f1      	bne.n	8002e56 <HAL_RCC_OscConfig+0x276>
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	2204      	movs	r2, #4
 8002e78:	4013      	ands	r3, r2
 8002e7a:	d100      	bne.n	8002e7e <HAL_RCC_OscConfig+0x29e>
 8002e7c:	e0b4      	b.n	8002fe8 <HAL_RCC_OscConfig+0x408>
 8002e7e:	201f      	movs	r0, #31
 8002e80:	183b      	adds	r3, r7, r0
 8002e82:	2200      	movs	r2, #0
 8002e84:	701a      	strb	r2, [r3, #0]
 8002e86:	4b21      	ldr	r3, [pc, #132]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e88:	69da      	ldr	r2, [r3, #28]
 8002e8a:	2380      	movs	r3, #128	@ 0x80
 8002e8c:	055b      	lsls	r3, r3, #21
 8002e8e:	4013      	ands	r3, r2
 8002e90:	d110      	bne.n	8002eb4 <HAL_RCC_OscConfig+0x2d4>
 8002e92:	4b1e      	ldr	r3, [pc, #120]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e94:	69da      	ldr	r2, [r3, #28]
 8002e96:	4b1d      	ldr	r3, [pc, #116]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002e98:	2180      	movs	r1, #128	@ 0x80
 8002e9a:	0549      	lsls	r1, r1, #21
 8002e9c:	430a      	orrs	r2, r1
 8002e9e:	61da      	str	r2, [r3, #28]
 8002ea0:	4b1a      	ldr	r3, [pc, #104]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002ea2:	69da      	ldr	r2, [r3, #28]
 8002ea4:	2380      	movs	r3, #128	@ 0x80
 8002ea6:	055b      	lsls	r3, r3, #21
 8002ea8:	4013      	ands	r3, r2
 8002eaa:	60fb      	str	r3, [r7, #12]
 8002eac:	68fb      	ldr	r3, [r7, #12]
 8002eae:	183b      	adds	r3, r7, r0
 8002eb0:	2201      	movs	r2, #1
 8002eb2:	701a      	strb	r2, [r3, #0]
 8002eb4:	4b18      	ldr	r3, [pc, #96]	@ (8002f18 <HAL_RCC_OscConfig+0x338>)
 8002eb6:	681a      	ldr	r2, [r3, #0]
 8002eb8:	2380      	movs	r3, #128	@ 0x80
 8002eba:	005b      	lsls	r3, r3, #1
 8002ebc:	4013      	ands	r3, r2
 8002ebe:	d11a      	bne.n	8002ef6 <HAL_RCC_OscConfig+0x316>
 8002ec0:	4b15      	ldr	r3, [pc, #84]	@ (8002f18 <HAL_RCC_OscConfig+0x338>)
 8002ec2:	681a      	ldr	r2, [r3, #0]
 8002ec4:	4b14      	ldr	r3, [pc, #80]	@ (8002f18 <HAL_RCC_OscConfig+0x338>)
 8002ec6:	2180      	movs	r1, #128	@ 0x80
 8002ec8:	0049      	lsls	r1, r1, #1
 8002eca:	430a      	orrs	r2, r1
 8002ecc:	601a      	str	r2, [r3, #0]
 8002ece:	f7ff f9a9 	bl	8002224 <HAL_GetTick>
 8002ed2:	0003      	movs	r3, r0
 8002ed4:	61bb      	str	r3, [r7, #24]
 8002ed6:	e008      	b.n	8002eea <HAL_RCC_OscConfig+0x30a>
 8002ed8:	f7ff f9a4 	bl	8002224 <HAL_GetTick>
 8002edc:	0002      	movs	r2, r0
 8002ede:	69bb      	ldr	r3, [r7, #24]
 8002ee0:	1ad3      	subs	r3, r2, r3
 8002ee2:	2b64      	cmp	r3, #100	@ 0x64
 8002ee4:	d901      	bls.n	8002eea <HAL_RCC_OscConfig+0x30a>
 8002ee6:	2303      	movs	r3, #3
 8002ee8:	e185      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002eea:	4b0b      	ldr	r3, [pc, #44]	@ (8002f18 <HAL_RCC_OscConfig+0x338>)
 8002eec:	681a      	ldr	r2, [r3, #0]
 8002eee:	2380      	movs	r3, #128	@ 0x80
 8002ef0:	005b      	lsls	r3, r3, #1
 8002ef2:	4013      	ands	r3, r2
 8002ef4:	d0f0      	beq.n	8002ed8 <HAL_RCC_OscConfig+0x2f8>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	689b      	ldr	r3, [r3, #8]
 8002efa:	2b01      	cmp	r3, #1
 8002efc:	d10e      	bne.n	8002f1c <HAL_RCC_OscConfig+0x33c>
 8002efe:	4b03      	ldr	r3, [pc, #12]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002f00:	6a1a      	ldr	r2, [r3, #32]
 8002f02:	4b02      	ldr	r3, [pc, #8]	@ (8002f0c <HAL_RCC_OscConfig+0x32c>)
 8002f04:	2101      	movs	r1, #1
 8002f06:	430a      	orrs	r2, r1
 8002f08:	621a      	str	r2, [r3, #32]
 8002f0a:	e035      	b.n	8002f78 <HAL_RCC_OscConfig+0x398>
 8002f0c:	40021000 	.word	0x40021000
 8002f10:	fffeffff 	.word	0xfffeffff
 8002f14:	fffbffff 	.word	0xfffbffff
 8002f18:	40007000 	.word	0x40007000
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	689b      	ldr	r3, [r3, #8]
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	d10c      	bne.n	8002f3e <HAL_RCC_OscConfig+0x35e>
 8002f24:	4bb6      	ldr	r3, [pc, #728]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f26:	6a1a      	ldr	r2, [r3, #32]
 8002f28:	4bb5      	ldr	r3, [pc, #724]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f2a:	2101      	movs	r1, #1
 8002f2c:	438a      	bics	r2, r1
 8002f2e:	621a      	str	r2, [r3, #32]
 8002f30:	4bb3      	ldr	r3, [pc, #716]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f32:	6a1a      	ldr	r2, [r3, #32]
 8002f34:	4bb2      	ldr	r3, [pc, #712]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f36:	2104      	movs	r1, #4
 8002f38:	438a      	bics	r2, r1
 8002f3a:	621a      	str	r2, [r3, #32]
 8002f3c:	e01c      	b.n	8002f78 <HAL_RCC_OscConfig+0x398>
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	689b      	ldr	r3, [r3, #8]
 8002f42:	2b05      	cmp	r3, #5
 8002f44:	d10c      	bne.n	8002f60 <HAL_RCC_OscConfig+0x380>
 8002f46:	4bae      	ldr	r3, [pc, #696]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f48:	6a1a      	ldr	r2, [r3, #32]
 8002f4a:	4bad      	ldr	r3, [pc, #692]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f4c:	2104      	movs	r1, #4
 8002f4e:	430a      	orrs	r2, r1
 8002f50:	621a      	str	r2, [r3, #32]
 8002f52:	4bab      	ldr	r3, [pc, #684]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f54:	6a1a      	ldr	r2, [r3, #32]
 8002f56:	4baa      	ldr	r3, [pc, #680]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f58:	2101      	movs	r1, #1
 8002f5a:	430a      	orrs	r2, r1
 8002f5c:	621a      	str	r2, [r3, #32]
 8002f5e:	e00b      	b.n	8002f78 <HAL_RCC_OscConfig+0x398>
 8002f60:	4ba7      	ldr	r3, [pc, #668]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f62:	6a1a      	ldr	r2, [r3, #32]
 8002f64:	4ba6      	ldr	r3, [pc, #664]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f66:	2101      	movs	r1, #1
 8002f68:	438a      	bics	r2, r1
 8002f6a:	621a      	str	r2, [r3, #32]
 8002f6c:	4ba4      	ldr	r3, [pc, #656]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f6e:	6a1a      	ldr	r2, [r3, #32]
 8002f70:	4ba3      	ldr	r3, [pc, #652]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002f72:	2104      	movs	r1, #4
 8002f74:	438a      	bics	r2, r1
 8002f76:	621a      	str	r2, [r3, #32]
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	689b      	ldr	r3, [r3, #8]
 8002f7c:	2b00      	cmp	r3, #0
 8002f7e:	d014      	beq.n	8002faa <HAL_RCC_OscConfig+0x3ca>
 8002f80:	f7ff f950 	bl	8002224 <HAL_GetTick>
 8002f84:	0003      	movs	r3, r0
 8002f86:	61bb      	str	r3, [r7, #24]
 8002f88:	e009      	b.n	8002f9e <HAL_RCC_OscConfig+0x3be>
 8002f8a:	f7ff f94b 	bl	8002224 <HAL_GetTick>
 8002f8e:	0002      	movs	r2, r0
 8002f90:	69bb      	ldr	r3, [r7, #24]
 8002f92:	1ad3      	subs	r3, r2, r3
 8002f94:	4a9b      	ldr	r2, [pc, #620]	@ (8003204 <HAL_RCC_OscConfig+0x624>)
 8002f96:	4293      	cmp	r3, r2
 8002f98:	d901      	bls.n	8002f9e <HAL_RCC_OscConfig+0x3be>
 8002f9a:	2303      	movs	r3, #3
 8002f9c:	e12b      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002f9e:	4b98      	ldr	r3, [pc, #608]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002fa0:	6a1b      	ldr	r3, [r3, #32]
 8002fa2:	2202      	movs	r2, #2
 8002fa4:	4013      	ands	r3, r2
 8002fa6:	d0f0      	beq.n	8002f8a <HAL_RCC_OscConfig+0x3aa>
 8002fa8:	e013      	b.n	8002fd2 <HAL_RCC_OscConfig+0x3f2>
 8002faa:	f7ff f93b 	bl	8002224 <HAL_GetTick>
 8002fae:	0003      	movs	r3, r0
 8002fb0:	61bb      	str	r3, [r7, #24]
 8002fb2:	e009      	b.n	8002fc8 <HAL_RCC_OscConfig+0x3e8>
 8002fb4:	f7ff f936 	bl	8002224 <HAL_GetTick>
 8002fb8:	0002      	movs	r2, r0
 8002fba:	69bb      	ldr	r3, [r7, #24]
 8002fbc:	1ad3      	subs	r3, r2, r3
 8002fbe:	4a91      	ldr	r2, [pc, #580]	@ (8003204 <HAL_RCC_OscConfig+0x624>)
 8002fc0:	4293      	cmp	r3, r2
 8002fc2:	d901      	bls.n	8002fc8 <HAL_RCC_OscConfig+0x3e8>
 8002fc4:	2303      	movs	r3, #3
 8002fc6:	e116      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8002fc8:	4b8d      	ldr	r3, [pc, #564]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002fca:	6a1b      	ldr	r3, [r3, #32]
 8002fcc:	2202      	movs	r2, #2
 8002fce:	4013      	ands	r3, r2
 8002fd0:	d1f0      	bne.n	8002fb4 <HAL_RCC_OscConfig+0x3d4>
 8002fd2:	231f      	movs	r3, #31
 8002fd4:	18fb      	adds	r3, r7, r3
 8002fd6:	781b      	ldrb	r3, [r3, #0]
 8002fd8:	2b01      	cmp	r3, #1
 8002fda:	d105      	bne.n	8002fe8 <HAL_RCC_OscConfig+0x408>
 8002fdc:	4b88      	ldr	r3, [pc, #544]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002fde:	69da      	ldr	r2, [r3, #28]
 8002fe0:	4b87      	ldr	r3, [pc, #540]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002fe2:	4989      	ldr	r1, [pc, #548]	@ (8003208 <HAL_RCC_OscConfig+0x628>)
 8002fe4:	400a      	ands	r2, r1
 8002fe6:	61da      	str	r2, [r3, #28]
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	681b      	ldr	r3, [r3, #0]
 8002fec:	2210      	movs	r2, #16
 8002fee:	4013      	ands	r3, r2
 8002ff0:	d063      	beq.n	80030ba <HAL_RCC_OscConfig+0x4da>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	695b      	ldr	r3, [r3, #20]
 8002ff6:	2b01      	cmp	r3, #1
 8002ff8:	d12a      	bne.n	8003050 <HAL_RCC_OscConfig+0x470>
 8002ffa:	4b81      	ldr	r3, [pc, #516]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8002ffc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002ffe:	4b80      	ldr	r3, [pc, #512]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003000:	2104      	movs	r1, #4
 8003002:	430a      	orrs	r2, r1
 8003004:	635a      	str	r2, [r3, #52]	@ 0x34
 8003006:	4b7e      	ldr	r3, [pc, #504]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003008:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800300a:	4b7d      	ldr	r3, [pc, #500]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800300c:	2101      	movs	r1, #1
 800300e:	430a      	orrs	r2, r1
 8003010:	635a      	str	r2, [r3, #52]	@ 0x34
 8003012:	f7ff f907 	bl	8002224 <HAL_GetTick>
 8003016:	0003      	movs	r3, r0
 8003018:	61bb      	str	r3, [r7, #24]
 800301a:	e008      	b.n	800302e <HAL_RCC_OscConfig+0x44e>
 800301c:	f7ff f902 	bl	8002224 <HAL_GetTick>
 8003020:	0002      	movs	r2, r0
 8003022:	69bb      	ldr	r3, [r7, #24]
 8003024:	1ad3      	subs	r3, r2, r3
 8003026:	2b02      	cmp	r3, #2
 8003028:	d901      	bls.n	800302e <HAL_RCC_OscConfig+0x44e>
 800302a:	2303      	movs	r3, #3
 800302c:	e0e3      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 800302e:	4b74      	ldr	r3, [pc, #464]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003030:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003032:	2202      	movs	r2, #2
 8003034:	4013      	ands	r3, r2
 8003036:	d0f1      	beq.n	800301c <HAL_RCC_OscConfig+0x43c>
 8003038:	4b71      	ldr	r3, [pc, #452]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800303a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800303c:	22f8      	movs	r2, #248	@ 0xf8
 800303e:	4393      	bics	r3, r2
 8003040:	0019      	movs	r1, r3
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	699b      	ldr	r3, [r3, #24]
 8003046:	00da      	lsls	r2, r3, #3
 8003048:	4b6d      	ldr	r3, [pc, #436]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800304a:	430a      	orrs	r2, r1
 800304c:	635a      	str	r2, [r3, #52]	@ 0x34
 800304e:	e034      	b.n	80030ba <HAL_RCC_OscConfig+0x4da>
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	695b      	ldr	r3, [r3, #20]
 8003054:	3305      	adds	r3, #5
 8003056:	d111      	bne.n	800307c <HAL_RCC_OscConfig+0x49c>
 8003058:	4b69      	ldr	r3, [pc, #420]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800305a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800305c:	4b68      	ldr	r3, [pc, #416]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800305e:	2104      	movs	r1, #4
 8003060:	438a      	bics	r2, r1
 8003062:	635a      	str	r2, [r3, #52]	@ 0x34
 8003064:	4b66      	ldr	r3, [pc, #408]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003066:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003068:	22f8      	movs	r2, #248	@ 0xf8
 800306a:	4393      	bics	r3, r2
 800306c:	0019      	movs	r1, r3
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	699b      	ldr	r3, [r3, #24]
 8003072:	00da      	lsls	r2, r3, #3
 8003074:	4b62      	ldr	r3, [pc, #392]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003076:	430a      	orrs	r2, r1
 8003078:	635a      	str	r2, [r3, #52]	@ 0x34
 800307a:	e01e      	b.n	80030ba <HAL_RCC_OscConfig+0x4da>
 800307c:	4b60      	ldr	r3, [pc, #384]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800307e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003080:	4b5f      	ldr	r3, [pc, #380]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003082:	2104      	movs	r1, #4
 8003084:	430a      	orrs	r2, r1
 8003086:	635a      	str	r2, [r3, #52]	@ 0x34
 8003088:	4b5d      	ldr	r3, [pc, #372]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800308a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800308c:	4b5c      	ldr	r3, [pc, #368]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800308e:	2101      	movs	r1, #1
 8003090:	438a      	bics	r2, r1
 8003092:	635a      	str	r2, [r3, #52]	@ 0x34
 8003094:	f7ff f8c6 	bl	8002224 <HAL_GetTick>
 8003098:	0003      	movs	r3, r0
 800309a:	61bb      	str	r3, [r7, #24]
 800309c:	e008      	b.n	80030b0 <HAL_RCC_OscConfig+0x4d0>
 800309e:	f7ff f8c1 	bl	8002224 <HAL_GetTick>
 80030a2:	0002      	movs	r2, r0
 80030a4:	69bb      	ldr	r3, [r7, #24]
 80030a6:	1ad3      	subs	r3, r2, r3
 80030a8:	2b02      	cmp	r3, #2
 80030aa:	d901      	bls.n	80030b0 <HAL_RCC_OscConfig+0x4d0>
 80030ac:	2303      	movs	r3, #3
 80030ae:	e0a2      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 80030b0:	4b53      	ldr	r3, [pc, #332]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 80030b2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80030b4:	2202      	movs	r2, #2
 80030b6:	4013      	ands	r3, r2
 80030b8:	d1f1      	bne.n	800309e <HAL_RCC_OscConfig+0x4be>
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	6a1b      	ldr	r3, [r3, #32]
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d100      	bne.n	80030c4 <HAL_RCC_OscConfig+0x4e4>
 80030c2:	e097      	b.n	80031f4 <HAL_RCC_OscConfig+0x614>
 80030c4:	4b4e      	ldr	r3, [pc, #312]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 80030c6:	685b      	ldr	r3, [r3, #4]
 80030c8:	220c      	movs	r2, #12
 80030ca:	4013      	ands	r3, r2
 80030cc:	2b08      	cmp	r3, #8
 80030ce:	d100      	bne.n	80030d2 <HAL_RCC_OscConfig+0x4f2>
 80030d0:	e06b      	b.n	80031aa <HAL_RCC_OscConfig+0x5ca>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	6a1b      	ldr	r3, [r3, #32]
 80030d6:	2b02      	cmp	r3, #2
 80030d8:	d14c      	bne.n	8003174 <HAL_RCC_OscConfig+0x594>
 80030da:	4b49      	ldr	r3, [pc, #292]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 80030dc:	681a      	ldr	r2, [r3, #0]
 80030de:	4b48      	ldr	r3, [pc, #288]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 80030e0:	494a      	ldr	r1, [pc, #296]	@ (800320c <HAL_RCC_OscConfig+0x62c>)
 80030e2:	400a      	ands	r2, r1
 80030e4:	601a      	str	r2, [r3, #0]
 80030e6:	f7ff f89d 	bl	8002224 <HAL_GetTick>
 80030ea:	0003      	movs	r3, r0
 80030ec:	61bb      	str	r3, [r7, #24]
 80030ee:	e008      	b.n	8003102 <HAL_RCC_OscConfig+0x522>
 80030f0:	f7ff f898 	bl	8002224 <HAL_GetTick>
 80030f4:	0002      	movs	r2, r0
 80030f6:	69bb      	ldr	r3, [r7, #24]
 80030f8:	1ad3      	subs	r3, r2, r3
 80030fa:	2b02      	cmp	r3, #2
 80030fc:	d901      	bls.n	8003102 <HAL_RCC_OscConfig+0x522>
 80030fe:	2303      	movs	r3, #3
 8003100:	e079      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8003102:	4b3f      	ldr	r3, [pc, #252]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003104:	681a      	ldr	r2, [r3, #0]
 8003106:	2380      	movs	r3, #128	@ 0x80
 8003108:	049b      	lsls	r3, r3, #18
 800310a:	4013      	ands	r3, r2
 800310c:	d1f0      	bne.n	80030f0 <HAL_RCC_OscConfig+0x510>
 800310e:	4b3c      	ldr	r3, [pc, #240]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003110:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003112:	220f      	movs	r2, #15
 8003114:	4393      	bics	r3, r2
 8003116:	0019      	movs	r1, r3
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800311c:	4b38      	ldr	r3, [pc, #224]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800311e:	430a      	orrs	r2, r1
 8003120:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003122:	4b37      	ldr	r3, [pc, #220]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003124:	685b      	ldr	r3, [r3, #4]
 8003126:	4a3a      	ldr	r2, [pc, #232]	@ (8003210 <HAL_RCC_OscConfig+0x630>)
 8003128:	4013      	ands	r3, r2
 800312a:	0019      	movs	r1, r3
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003134:	431a      	orrs	r2, r3
 8003136:	4b32      	ldr	r3, [pc, #200]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003138:	430a      	orrs	r2, r1
 800313a:	605a      	str	r2, [r3, #4]
 800313c:	4b30      	ldr	r3, [pc, #192]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800313e:	681a      	ldr	r2, [r3, #0]
 8003140:	4b2f      	ldr	r3, [pc, #188]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003142:	2180      	movs	r1, #128	@ 0x80
 8003144:	0449      	lsls	r1, r1, #17
 8003146:	430a      	orrs	r2, r1
 8003148:	601a      	str	r2, [r3, #0]
 800314a:	f7ff f86b 	bl	8002224 <HAL_GetTick>
 800314e:	0003      	movs	r3, r0
 8003150:	61bb      	str	r3, [r7, #24]
 8003152:	e008      	b.n	8003166 <HAL_RCC_OscConfig+0x586>
 8003154:	f7ff f866 	bl	8002224 <HAL_GetTick>
 8003158:	0002      	movs	r2, r0
 800315a:	69bb      	ldr	r3, [r7, #24]
 800315c:	1ad3      	subs	r3, r2, r3
 800315e:	2b02      	cmp	r3, #2
 8003160:	d901      	bls.n	8003166 <HAL_RCC_OscConfig+0x586>
 8003162:	2303      	movs	r3, #3
 8003164:	e047      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 8003166:	4b26      	ldr	r3, [pc, #152]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003168:	681a      	ldr	r2, [r3, #0]
 800316a:	2380      	movs	r3, #128	@ 0x80
 800316c:	049b      	lsls	r3, r3, #18
 800316e:	4013      	ands	r3, r2
 8003170:	d0f0      	beq.n	8003154 <HAL_RCC_OscConfig+0x574>
 8003172:	e03f      	b.n	80031f4 <HAL_RCC_OscConfig+0x614>
 8003174:	4b22      	ldr	r3, [pc, #136]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 8003176:	681a      	ldr	r2, [r3, #0]
 8003178:	4b21      	ldr	r3, [pc, #132]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800317a:	4924      	ldr	r1, [pc, #144]	@ (800320c <HAL_RCC_OscConfig+0x62c>)
 800317c:	400a      	ands	r2, r1
 800317e:	601a      	str	r2, [r3, #0]
 8003180:	f7ff f850 	bl	8002224 <HAL_GetTick>
 8003184:	0003      	movs	r3, r0
 8003186:	61bb      	str	r3, [r7, #24]
 8003188:	e008      	b.n	800319c <HAL_RCC_OscConfig+0x5bc>
 800318a:	f7ff f84b 	bl	8002224 <HAL_GetTick>
 800318e:	0002      	movs	r2, r0
 8003190:	69bb      	ldr	r3, [r7, #24]
 8003192:	1ad3      	subs	r3, r2, r3
 8003194:	2b02      	cmp	r3, #2
 8003196:	d901      	bls.n	800319c <HAL_RCC_OscConfig+0x5bc>
 8003198:	2303      	movs	r3, #3
 800319a:	e02c      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 800319c:	4b18      	ldr	r3, [pc, #96]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 800319e:	681a      	ldr	r2, [r3, #0]
 80031a0:	2380      	movs	r3, #128	@ 0x80
 80031a2:	049b      	lsls	r3, r3, #18
 80031a4:	4013      	ands	r3, r2
 80031a6:	d1f0      	bne.n	800318a <HAL_RCC_OscConfig+0x5aa>
 80031a8:	e024      	b.n	80031f4 <HAL_RCC_OscConfig+0x614>
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	6a1b      	ldr	r3, [r3, #32]
 80031ae:	2b01      	cmp	r3, #1
 80031b0:	d101      	bne.n	80031b6 <HAL_RCC_OscConfig+0x5d6>
 80031b2:	2301      	movs	r3, #1
 80031b4:	e01f      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 80031b6:	4b12      	ldr	r3, [pc, #72]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 80031b8:	685b      	ldr	r3, [r3, #4]
 80031ba:	617b      	str	r3, [r7, #20]
 80031bc:	4b10      	ldr	r3, [pc, #64]	@ (8003200 <HAL_RCC_OscConfig+0x620>)
 80031be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80031c0:	613b      	str	r3, [r7, #16]
 80031c2:	697a      	ldr	r2, [r7, #20]
 80031c4:	2380      	movs	r3, #128	@ 0x80
 80031c6:	025b      	lsls	r3, r3, #9
 80031c8:	401a      	ands	r2, r3
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031ce:	429a      	cmp	r2, r3
 80031d0:	d10e      	bne.n	80031f0 <HAL_RCC_OscConfig+0x610>
 80031d2:	693b      	ldr	r3, [r7, #16]
 80031d4:	220f      	movs	r2, #15
 80031d6:	401a      	ands	r2, r3
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80031dc:	429a      	cmp	r2, r3
 80031de:	d107      	bne.n	80031f0 <HAL_RCC_OscConfig+0x610>
 80031e0:	697a      	ldr	r2, [r7, #20]
 80031e2:	23f0      	movs	r3, #240	@ 0xf0
 80031e4:	039b      	lsls	r3, r3, #14
 80031e6:	401a      	ands	r2, r3
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80031ec:	429a      	cmp	r2, r3
 80031ee:	d001      	beq.n	80031f4 <HAL_RCC_OscConfig+0x614>
 80031f0:	2301      	movs	r3, #1
 80031f2:	e000      	b.n	80031f6 <HAL_RCC_OscConfig+0x616>
 80031f4:	2300      	movs	r3, #0
 80031f6:	0018      	movs	r0, r3
 80031f8:	46bd      	mov	sp, r7
 80031fa:	b008      	add	sp, #32
 80031fc:	bd80      	pop	{r7, pc}
 80031fe:	46c0      	nop			@ (mov r8, r8)
 8003200:	40021000 	.word	0x40021000
 8003204:	00001388 	.word	0x00001388
 8003208:	efffffff 	.word	0xefffffff
 800320c:	feffffff 	.word	0xfeffffff
 8003210:	ffc2ffff 	.word	0xffc2ffff

08003214 <HAL_RCC_ClockConfig>:
 8003214:	b580      	push	{r7, lr}
 8003216:	b084      	sub	sp, #16
 8003218:	af00      	add	r7, sp, #0
 800321a:	6078      	str	r0, [r7, #4]
 800321c:	6039      	str	r1, [r7, #0]
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	2b00      	cmp	r3, #0
 8003222:	d101      	bne.n	8003228 <HAL_RCC_ClockConfig+0x14>
 8003224:	2301      	movs	r3, #1
 8003226:	e0b3      	b.n	8003390 <HAL_RCC_ClockConfig+0x17c>
 8003228:	4b5b      	ldr	r3, [pc, #364]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	2201      	movs	r2, #1
 800322e:	4013      	ands	r3, r2
 8003230:	683a      	ldr	r2, [r7, #0]
 8003232:	429a      	cmp	r2, r3
 8003234:	d911      	bls.n	800325a <HAL_RCC_ClockConfig+0x46>
 8003236:	4b58      	ldr	r3, [pc, #352]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	2201      	movs	r2, #1
 800323c:	4393      	bics	r3, r2
 800323e:	0019      	movs	r1, r3
 8003240:	4b55      	ldr	r3, [pc, #340]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 8003242:	683a      	ldr	r2, [r7, #0]
 8003244:	430a      	orrs	r2, r1
 8003246:	601a      	str	r2, [r3, #0]
 8003248:	4b53      	ldr	r3, [pc, #332]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	2201      	movs	r2, #1
 800324e:	4013      	ands	r3, r2
 8003250:	683a      	ldr	r2, [r7, #0]
 8003252:	429a      	cmp	r2, r3
 8003254:	d001      	beq.n	800325a <HAL_RCC_ClockConfig+0x46>
 8003256:	2301      	movs	r3, #1
 8003258:	e09a      	b.n	8003390 <HAL_RCC_ClockConfig+0x17c>
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	2202      	movs	r2, #2
 8003260:	4013      	ands	r3, r2
 8003262:	d015      	beq.n	8003290 <HAL_RCC_ClockConfig+0x7c>
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	2204      	movs	r2, #4
 800326a:	4013      	ands	r3, r2
 800326c:	d006      	beq.n	800327c <HAL_RCC_ClockConfig+0x68>
 800326e:	4b4b      	ldr	r3, [pc, #300]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 8003270:	685a      	ldr	r2, [r3, #4]
 8003272:	4b4a      	ldr	r3, [pc, #296]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 8003274:	21e0      	movs	r1, #224	@ 0xe0
 8003276:	00c9      	lsls	r1, r1, #3
 8003278:	430a      	orrs	r2, r1
 800327a:	605a      	str	r2, [r3, #4]
 800327c:	4b47      	ldr	r3, [pc, #284]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 800327e:	685b      	ldr	r3, [r3, #4]
 8003280:	22f0      	movs	r2, #240	@ 0xf0
 8003282:	4393      	bics	r3, r2
 8003284:	0019      	movs	r1, r3
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	689a      	ldr	r2, [r3, #8]
 800328a:	4b44      	ldr	r3, [pc, #272]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 800328c:	430a      	orrs	r2, r1
 800328e:	605a      	str	r2, [r3, #4]
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	2201      	movs	r2, #1
 8003296:	4013      	ands	r3, r2
 8003298:	d040      	beq.n	800331c <HAL_RCC_ClockConfig+0x108>
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	685b      	ldr	r3, [r3, #4]
 800329e:	2b01      	cmp	r3, #1
 80032a0:	d107      	bne.n	80032b2 <HAL_RCC_ClockConfig+0x9e>
 80032a2:	4b3e      	ldr	r3, [pc, #248]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 80032a4:	681a      	ldr	r2, [r3, #0]
 80032a6:	2380      	movs	r3, #128	@ 0x80
 80032a8:	029b      	lsls	r3, r3, #10
 80032aa:	4013      	ands	r3, r2
 80032ac:	d114      	bne.n	80032d8 <HAL_RCC_ClockConfig+0xc4>
 80032ae:	2301      	movs	r3, #1
 80032b0:	e06e      	b.n	8003390 <HAL_RCC_ClockConfig+0x17c>
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	685b      	ldr	r3, [r3, #4]
 80032b6:	2b02      	cmp	r3, #2
 80032b8:	d107      	bne.n	80032ca <HAL_RCC_ClockConfig+0xb6>
 80032ba:	4b38      	ldr	r3, [pc, #224]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 80032bc:	681a      	ldr	r2, [r3, #0]
 80032be:	2380      	movs	r3, #128	@ 0x80
 80032c0:	049b      	lsls	r3, r3, #18
 80032c2:	4013      	ands	r3, r2
 80032c4:	d108      	bne.n	80032d8 <HAL_RCC_ClockConfig+0xc4>
 80032c6:	2301      	movs	r3, #1
 80032c8:	e062      	b.n	8003390 <HAL_RCC_ClockConfig+0x17c>
 80032ca:	4b34      	ldr	r3, [pc, #208]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	2202      	movs	r2, #2
 80032d0:	4013      	ands	r3, r2
 80032d2:	d101      	bne.n	80032d8 <HAL_RCC_ClockConfig+0xc4>
 80032d4:	2301      	movs	r3, #1
 80032d6:	e05b      	b.n	8003390 <HAL_RCC_ClockConfig+0x17c>
 80032d8:	4b30      	ldr	r3, [pc, #192]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 80032da:	685b      	ldr	r3, [r3, #4]
 80032dc:	2203      	movs	r2, #3
 80032de:	4393      	bics	r3, r2
 80032e0:	0019      	movs	r1, r3
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	685a      	ldr	r2, [r3, #4]
 80032e6:	4b2d      	ldr	r3, [pc, #180]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 80032e8:	430a      	orrs	r2, r1
 80032ea:	605a      	str	r2, [r3, #4]
 80032ec:	f7fe ff9a 	bl	8002224 <HAL_GetTick>
 80032f0:	0003      	movs	r3, r0
 80032f2:	60fb      	str	r3, [r7, #12]
 80032f4:	e009      	b.n	800330a <HAL_RCC_ClockConfig+0xf6>
 80032f6:	f7fe ff95 	bl	8002224 <HAL_GetTick>
 80032fa:	0002      	movs	r2, r0
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	1ad3      	subs	r3, r2, r3
 8003300:	4a27      	ldr	r2, [pc, #156]	@ (80033a0 <HAL_RCC_ClockConfig+0x18c>)
 8003302:	4293      	cmp	r3, r2
 8003304:	d901      	bls.n	800330a <HAL_RCC_ClockConfig+0xf6>
 8003306:	2303      	movs	r3, #3
 8003308:	e042      	b.n	8003390 <HAL_RCC_ClockConfig+0x17c>
 800330a:	4b24      	ldr	r3, [pc, #144]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 800330c:	685b      	ldr	r3, [r3, #4]
 800330e:	220c      	movs	r2, #12
 8003310:	401a      	ands	r2, r3
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	685b      	ldr	r3, [r3, #4]
 8003316:	009b      	lsls	r3, r3, #2
 8003318:	429a      	cmp	r2, r3
 800331a:	d1ec      	bne.n	80032f6 <HAL_RCC_ClockConfig+0xe2>
 800331c:	4b1e      	ldr	r3, [pc, #120]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	2201      	movs	r2, #1
 8003322:	4013      	ands	r3, r2
 8003324:	683a      	ldr	r2, [r7, #0]
 8003326:	429a      	cmp	r2, r3
 8003328:	d211      	bcs.n	800334e <HAL_RCC_ClockConfig+0x13a>
 800332a:	4b1b      	ldr	r3, [pc, #108]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	2201      	movs	r2, #1
 8003330:	4393      	bics	r3, r2
 8003332:	0019      	movs	r1, r3
 8003334:	4b18      	ldr	r3, [pc, #96]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 8003336:	683a      	ldr	r2, [r7, #0]
 8003338:	430a      	orrs	r2, r1
 800333a:	601a      	str	r2, [r3, #0]
 800333c:	4b16      	ldr	r3, [pc, #88]	@ (8003398 <HAL_RCC_ClockConfig+0x184>)
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	2201      	movs	r2, #1
 8003342:	4013      	ands	r3, r2
 8003344:	683a      	ldr	r2, [r7, #0]
 8003346:	429a      	cmp	r2, r3
 8003348:	d001      	beq.n	800334e <HAL_RCC_ClockConfig+0x13a>
 800334a:	2301      	movs	r3, #1
 800334c:	e020      	b.n	8003390 <HAL_RCC_ClockConfig+0x17c>
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	2204      	movs	r2, #4
 8003354:	4013      	ands	r3, r2
 8003356:	d009      	beq.n	800336c <HAL_RCC_ClockConfig+0x158>
 8003358:	4b10      	ldr	r3, [pc, #64]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 800335a:	685b      	ldr	r3, [r3, #4]
 800335c:	4a11      	ldr	r2, [pc, #68]	@ (80033a4 <HAL_RCC_ClockConfig+0x190>)
 800335e:	4013      	ands	r3, r2
 8003360:	0019      	movs	r1, r3
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	68da      	ldr	r2, [r3, #12]
 8003366:	4b0d      	ldr	r3, [pc, #52]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 8003368:	430a      	orrs	r2, r1
 800336a:	605a      	str	r2, [r3, #4]
 800336c:	f000 f820 	bl	80033b0 <HAL_RCC_GetSysClockFreq>
 8003370:	0001      	movs	r1, r0
 8003372:	4b0a      	ldr	r3, [pc, #40]	@ (800339c <HAL_RCC_ClockConfig+0x188>)
 8003374:	685b      	ldr	r3, [r3, #4]
 8003376:	091b      	lsrs	r3, r3, #4
 8003378:	220f      	movs	r2, #15
 800337a:	4013      	ands	r3, r2
 800337c:	4a0a      	ldr	r2, [pc, #40]	@ (80033a8 <HAL_RCC_ClockConfig+0x194>)
 800337e:	5cd3      	ldrb	r3, [r2, r3]
 8003380:	000a      	movs	r2, r1
 8003382:	40da      	lsrs	r2, r3
 8003384:	4b09      	ldr	r3, [pc, #36]	@ (80033ac <HAL_RCC_ClockConfig+0x198>)
 8003386:	601a      	str	r2, [r3, #0]
 8003388:	2003      	movs	r0, #3
 800338a:	f7fe ff05 	bl	8002198 <HAL_InitTick>
 800338e:	2300      	movs	r3, #0
 8003390:	0018      	movs	r0, r3
 8003392:	46bd      	mov	sp, r7
 8003394:	b004      	add	sp, #16
 8003396:	bd80      	pop	{r7, pc}
 8003398:	40022000 	.word	0x40022000
 800339c:	40021000 	.word	0x40021000
 80033a0:	00001388 	.word	0x00001388
 80033a4:	fffff8ff 	.word	0xfffff8ff
 80033a8:	080056c8 	.word	0x080056c8
 80033ac:	20000014 	.word	0x20000014

080033b0 <HAL_RCC_GetSysClockFreq>:
 80033b0:	b580      	push	{r7, lr}
 80033b2:	b086      	sub	sp, #24
 80033b4:	af00      	add	r7, sp, #0
 80033b6:	2300      	movs	r3, #0
 80033b8:	60fb      	str	r3, [r7, #12]
 80033ba:	2300      	movs	r3, #0
 80033bc:	60bb      	str	r3, [r7, #8]
 80033be:	2300      	movs	r3, #0
 80033c0:	617b      	str	r3, [r7, #20]
 80033c2:	2300      	movs	r3, #0
 80033c4:	607b      	str	r3, [r7, #4]
 80033c6:	2300      	movs	r3, #0
 80033c8:	613b      	str	r3, [r7, #16]
 80033ca:	4b20      	ldr	r3, [pc, #128]	@ (800344c <HAL_RCC_GetSysClockFreq+0x9c>)
 80033cc:	685b      	ldr	r3, [r3, #4]
 80033ce:	60fb      	str	r3, [r7, #12]
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	220c      	movs	r2, #12
 80033d4:	4013      	ands	r3, r2
 80033d6:	2b04      	cmp	r3, #4
 80033d8:	d002      	beq.n	80033e0 <HAL_RCC_GetSysClockFreq+0x30>
 80033da:	2b08      	cmp	r3, #8
 80033dc:	d003      	beq.n	80033e6 <HAL_RCC_GetSysClockFreq+0x36>
 80033de:	e02c      	b.n	800343a <HAL_RCC_GetSysClockFreq+0x8a>
 80033e0:	4b1b      	ldr	r3, [pc, #108]	@ (8003450 <HAL_RCC_GetSysClockFreq+0xa0>)
 80033e2:	613b      	str	r3, [r7, #16]
 80033e4:	e02c      	b.n	8003440 <HAL_RCC_GetSysClockFreq+0x90>
 80033e6:	68fb      	ldr	r3, [r7, #12]
 80033e8:	0c9b      	lsrs	r3, r3, #18
 80033ea:	220f      	movs	r2, #15
 80033ec:	4013      	ands	r3, r2
 80033ee:	4a19      	ldr	r2, [pc, #100]	@ (8003454 <HAL_RCC_GetSysClockFreq+0xa4>)
 80033f0:	5cd3      	ldrb	r3, [r2, r3]
 80033f2:	607b      	str	r3, [r7, #4]
 80033f4:	4b15      	ldr	r3, [pc, #84]	@ (800344c <HAL_RCC_GetSysClockFreq+0x9c>)
 80033f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80033f8:	220f      	movs	r2, #15
 80033fa:	4013      	ands	r3, r2
 80033fc:	4a16      	ldr	r2, [pc, #88]	@ (8003458 <HAL_RCC_GetSysClockFreq+0xa8>)
 80033fe:	5cd3      	ldrb	r3, [r2, r3]
 8003400:	60bb      	str	r3, [r7, #8]
 8003402:	68fa      	ldr	r2, [r7, #12]
 8003404:	2380      	movs	r3, #128	@ 0x80
 8003406:	025b      	lsls	r3, r3, #9
 8003408:	4013      	ands	r3, r2
 800340a:	d009      	beq.n	8003420 <HAL_RCC_GetSysClockFreq+0x70>
 800340c:	68b9      	ldr	r1, [r7, #8]
 800340e:	4810      	ldr	r0, [pc, #64]	@ (8003450 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003410:	f7fc fe84 	bl	800011c <__udivsi3>
 8003414:	0003      	movs	r3, r0
 8003416:	001a      	movs	r2, r3
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	4353      	muls	r3, r2
 800341c:	617b      	str	r3, [r7, #20]
 800341e:	e009      	b.n	8003434 <HAL_RCC_GetSysClockFreq+0x84>
 8003420:	6879      	ldr	r1, [r7, #4]
 8003422:	000a      	movs	r2, r1
 8003424:	0152      	lsls	r2, r2, #5
 8003426:	1a52      	subs	r2, r2, r1
 8003428:	0193      	lsls	r3, r2, #6
 800342a:	1a9b      	subs	r3, r3, r2
 800342c:	00db      	lsls	r3, r3, #3
 800342e:	185b      	adds	r3, r3, r1
 8003430:	021b      	lsls	r3, r3, #8
 8003432:	617b      	str	r3, [r7, #20]
 8003434:	697b      	ldr	r3, [r7, #20]
 8003436:	613b      	str	r3, [r7, #16]
 8003438:	e002      	b.n	8003440 <HAL_RCC_GetSysClockFreq+0x90>
 800343a:	4b05      	ldr	r3, [pc, #20]	@ (8003450 <HAL_RCC_GetSysClockFreq+0xa0>)
 800343c:	613b      	str	r3, [r7, #16]
 800343e:	46c0      	nop			@ (mov r8, r8)
 8003440:	693b      	ldr	r3, [r7, #16]
 8003442:	0018      	movs	r0, r3
 8003444:	46bd      	mov	sp, r7
 8003446:	b006      	add	sp, #24
 8003448:	bd80      	pop	{r7, pc}
 800344a:	46c0      	nop			@ (mov r8, r8)
 800344c:	40021000 	.word	0x40021000
 8003450:	007a1200 	.word	0x007a1200
 8003454:	080056e0 	.word	0x080056e0
 8003458:	080056f0 	.word	0x080056f0

0800345c <HAL_RCC_GetHCLKFreq>:
 800345c:	b580      	push	{r7, lr}
 800345e:	af00      	add	r7, sp, #0
 8003460:	4b02      	ldr	r3, [pc, #8]	@ (800346c <HAL_RCC_GetHCLKFreq+0x10>)
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	0018      	movs	r0, r3
 8003466:	46bd      	mov	sp, r7
 8003468:	bd80      	pop	{r7, pc}
 800346a:	46c0      	nop			@ (mov r8, r8)
 800346c:	20000014 	.word	0x20000014

08003470 <HAL_RCC_GetPCLK1Freq>:
 8003470:	b580      	push	{r7, lr}
 8003472:	af00      	add	r7, sp, #0
 8003474:	f7ff fff2 	bl	800345c <HAL_RCC_GetHCLKFreq>
 8003478:	0001      	movs	r1, r0
 800347a:	4b06      	ldr	r3, [pc, #24]	@ (8003494 <HAL_RCC_GetPCLK1Freq+0x24>)
 800347c:	685b      	ldr	r3, [r3, #4]
 800347e:	0a1b      	lsrs	r3, r3, #8
 8003480:	2207      	movs	r2, #7
 8003482:	4013      	ands	r3, r2
 8003484:	4a04      	ldr	r2, [pc, #16]	@ (8003498 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003486:	5cd3      	ldrb	r3, [r2, r3]
 8003488:	40d9      	lsrs	r1, r3
 800348a:	000b      	movs	r3, r1
 800348c:	0018      	movs	r0, r3
 800348e:	46bd      	mov	sp, r7
 8003490:	bd80      	pop	{r7, pc}
 8003492:	46c0      	nop			@ (mov r8, r8)
 8003494:	40021000 	.word	0x40021000
 8003498:	080056d8 	.word	0x080056d8

0800349c <HAL_TIM_Base_Init>:
 800349c:	b580      	push	{r7, lr}
 800349e:	b082      	sub	sp, #8
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	6078      	str	r0, [r7, #4]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d101      	bne.n	80034ae <HAL_TIM_Base_Init+0x12>
 80034aa:	2301      	movs	r3, #1
 80034ac:	e042      	b.n	8003534 <HAL_TIM_Base_Init+0x98>
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	223d      	movs	r2, #61	@ 0x3d
 80034b2:	5c9b      	ldrb	r3, [r3, r2]
 80034b4:	b2db      	uxtb	r3, r3
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d107      	bne.n	80034ca <HAL_TIM_Base_Init+0x2e>
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	223c      	movs	r2, #60	@ 0x3c
 80034be:	2100      	movs	r1, #0
 80034c0:	5499      	strb	r1, [r3, r2]
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	0018      	movs	r0, r3
 80034c6:	f7fe fd47 	bl	8001f58 <HAL_TIM_Base_MspInit>
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	223d      	movs	r2, #61	@ 0x3d
 80034ce:	2102      	movs	r1, #2
 80034d0:	5499      	strb	r1, [r3, r2]
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681a      	ldr	r2, [r3, #0]
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	3304      	adds	r3, #4
 80034da:	0019      	movs	r1, r3
 80034dc:	0010      	movs	r0, r2
 80034de:	f000 fa9f 	bl	8003a20 <TIM_Base_SetConfig>
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	2246      	movs	r2, #70	@ 0x46
 80034e6:	2101      	movs	r1, #1
 80034e8:	5499      	strb	r1, [r3, r2]
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	223e      	movs	r2, #62	@ 0x3e
 80034ee:	2101      	movs	r1, #1
 80034f0:	5499      	strb	r1, [r3, r2]
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	223f      	movs	r2, #63	@ 0x3f
 80034f6:	2101      	movs	r1, #1
 80034f8:	5499      	strb	r1, [r3, r2]
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	2240      	movs	r2, #64	@ 0x40
 80034fe:	2101      	movs	r1, #1
 8003500:	5499      	strb	r1, [r3, r2]
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	2241      	movs	r2, #65	@ 0x41
 8003506:	2101      	movs	r1, #1
 8003508:	5499      	strb	r1, [r3, r2]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	2242      	movs	r2, #66	@ 0x42
 800350e:	2101      	movs	r1, #1
 8003510:	5499      	strb	r1, [r3, r2]
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	2243      	movs	r2, #67	@ 0x43
 8003516:	2101      	movs	r1, #1
 8003518:	5499      	strb	r1, [r3, r2]
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	2244      	movs	r2, #68	@ 0x44
 800351e:	2101      	movs	r1, #1
 8003520:	5499      	strb	r1, [r3, r2]
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	2245      	movs	r2, #69	@ 0x45
 8003526:	2101      	movs	r1, #1
 8003528:	5499      	strb	r1, [r3, r2]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	223d      	movs	r2, #61	@ 0x3d
 800352e:	2101      	movs	r1, #1
 8003530:	5499      	strb	r1, [r3, r2]
 8003532:	2300      	movs	r3, #0
 8003534:	0018      	movs	r0, r3
 8003536:	46bd      	mov	sp, r7
 8003538:	b002      	add	sp, #8
 800353a:	bd80      	pop	{r7, pc}

0800353c <HAL_TIM_Base_Start>:
 800353c:	b580      	push	{r7, lr}
 800353e:	b084      	sub	sp, #16
 8003540:	af00      	add	r7, sp, #0
 8003542:	6078      	str	r0, [r7, #4]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	223d      	movs	r2, #61	@ 0x3d
 8003548:	5c9b      	ldrb	r3, [r3, r2]
 800354a:	b2db      	uxtb	r3, r3
 800354c:	2b01      	cmp	r3, #1
 800354e:	d001      	beq.n	8003554 <HAL_TIM_Base_Start+0x18>
 8003550:	2301      	movs	r3, #1
 8003552:	e02d      	b.n	80035b0 <HAL_TIM_Base_Start+0x74>
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	223d      	movs	r2, #61	@ 0x3d
 8003558:	2102      	movs	r1, #2
 800355a:	5499      	strb	r1, [r3, r2]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	4a15      	ldr	r2, [pc, #84]	@ (80035b8 <HAL_TIM_Base_Start+0x7c>)
 8003562:	4293      	cmp	r3, r2
 8003564:	d009      	beq.n	800357a <HAL_TIM_Base_Start+0x3e>
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	4a14      	ldr	r2, [pc, #80]	@ (80035bc <HAL_TIM_Base_Start+0x80>)
 800356c:	4293      	cmp	r3, r2
 800356e:	d004      	beq.n	800357a <HAL_TIM_Base_Start+0x3e>
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	4a12      	ldr	r2, [pc, #72]	@ (80035c0 <HAL_TIM_Base_Start+0x84>)
 8003576:	4293      	cmp	r3, r2
 8003578:	d111      	bne.n	800359e <HAL_TIM_Base_Start+0x62>
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	689b      	ldr	r3, [r3, #8]
 8003580:	2207      	movs	r2, #7
 8003582:	4013      	ands	r3, r2
 8003584:	60fb      	str	r3, [r7, #12]
 8003586:	68fb      	ldr	r3, [r7, #12]
 8003588:	2b06      	cmp	r3, #6
 800358a:	d010      	beq.n	80035ae <HAL_TIM_Base_Start+0x72>
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	681a      	ldr	r2, [r3, #0]
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	681b      	ldr	r3, [r3, #0]
 8003596:	2101      	movs	r1, #1
 8003598:	430a      	orrs	r2, r1
 800359a:	601a      	str	r2, [r3, #0]
 800359c:	e007      	b.n	80035ae <HAL_TIM_Base_Start+0x72>
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	681b      	ldr	r3, [r3, #0]
 80035a2:	681a      	ldr	r2, [r3, #0]
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	2101      	movs	r1, #1
 80035aa:	430a      	orrs	r2, r1
 80035ac:	601a      	str	r2, [r3, #0]
 80035ae:	2300      	movs	r3, #0
 80035b0:	0018      	movs	r0, r3
 80035b2:	46bd      	mov	sp, r7
 80035b4:	b004      	add	sp, #16
 80035b6:	bd80      	pop	{r7, pc}
 80035b8:	40012c00 	.word	0x40012c00
 80035bc:	40000400 	.word	0x40000400
 80035c0:	40014000 	.word	0x40014000

080035c4 <HAL_TIM_Base_Start_IT>:
 80035c4:	b580      	push	{r7, lr}
 80035c6:	b084      	sub	sp, #16
 80035c8:	af00      	add	r7, sp, #0
 80035ca:	6078      	str	r0, [r7, #4]
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	223d      	movs	r2, #61	@ 0x3d
 80035d0:	5c9b      	ldrb	r3, [r3, r2]
 80035d2:	b2db      	uxtb	r3, r3
 80035d4:	2b01      	cmp	r3, #1
 80035d6:	d001      	beq.n	80035dc <HAL_TIM_Base_Start_IT+0x18>
 80035d8:	2301      	movs	r3, #1
 80035da:	e035      	b.n	8003648 <HAL_TIM_Base_Start_IT+0x84>
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	223d      	movs	r2, #61	@ 0x3d
 80035e0:	2102      	movs	r1, #2
 80035e2:	5499      	strb	r1, [r3, r2]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	68da      	ldr	r2, [r3, #12]
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	2101      	movs	r1, #1
 80035f0:	430a      	orrs	r2, r1
 80035f2:	60da      	str	r2, [r3, #12]
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	4a15      	ldr	r2, [pc, #84]	@ (8003650 <HAL_TIM_Base_Start_IT+0x8c>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d009      	beq.n	8003612 <HAL_TIM_Base_Start_IT+0x4e>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	4a14      	ldr	r2, [pc, #80]	@ (8003654 <HAL_TIM_Base_Start_IT+0x90>)
 8003604:	4293      	cmp	r3, r2
 8003606:	d004      	beq.n	8003612 <HAL_TIM_Base_Start_IT+0x4e>
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	4a12      	ldr	r2, [pc, #72]	@ (8003658 <HAL_TIM_Base_Start_IT+0x94>)
 800360e:	4293      	cmp	r3, r2
 8003610:	d111      	bne.n	8003636 <HAL_TIM_Base_Start_IT+0x72>
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	689b      	ldr	r3, [r3, #8]
 8003618:	2207      	movs	r2, #7
 800361a:	4013      	ands	r3, r2
 800361c:	60fb      	str	r3, [r7, #12]
 800361e:	68fb      	ldr	r3, [r7, #12]
 8003620:	2b06      	cmp	r3, #6
 8003622:	d010      	beq.n	8003646 <HAL_TIM_Base_Start_IT+0x82>
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	681a      	ldr	r2, [r3, #0]
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	2101      	movs	r1, #1
 8003630:	430a      	orrs	r2, r1
 8003632:	601a      	str	r2, [r3, #0]
 8003634:	e007      	b.n	8003646 <HAL_TIM_Base_Start_IT+0x82>
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	681a      	ldr	r2, [r3, #0]
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	2101      	movs	r1, #1
 8003642:	430a      	orrs	r2, r1
 8003644:	601a      	str	r2, [r3, #0]
 8003646:	2300      	movs	r3, #0
 8003648:	0018      	movs	r0, r3
 800364a:	46bd      	mov	sp, r7
 800364c:	b004      	add	sp, #16
 800364e:	bd80      	pop	{r7, pc}
 8003650:	40012c00 	.word	0x40012c00
 8003654:	40000400 	.word	0x40000400
 8003658:	40014000 	.word	0x40014000

0800365c <HAL_TIM_IRQHandler>:
 800365c:	b580      	push	{r7, lr}
 800365e:	b084      	sub	sp, #16
 8003660:	af00      	add	r7, sp, #0
 8003662:	6078      	str	r0, [r7, #4]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	68db      	ldr	r3, [r3, #12]
 800366a:	60fb      	str	r3, [r7, #12]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	691b      	ldr	r3, [r3, #16]
 8003672:	60bb      	str	r3, [r7, #8]
 8003674:	68bb      	ldr	r3, [r7, #8]
 8003676:	2202      	movs	r2, #2
 8003678:	4013      	ands	r3, r2
 800367a:	d021      	beq.n	80036c0 <HAL_TIM_IRQHandler+0x64>
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	2202      	movs	r2, #2
 8003680:	4013      	ands	r3, r2
 8003682:	d01d      	beq.n	80036c0 <HAL_TIM_IRQHandler+0x64>
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	2203      	movs	r2, #3
 800368a:	4252      	negs	r2, r2
 800368c:	611a      	str	r2, [r3, #16]
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	2201      	movs	r2, #1
 8003692:	771a      	strb	r2, [r3, #28]
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	699b      	ldr	r3, [r3, #24]
 800369a:	2203      	movs	r2, #3
 800369c:	4013      	ands	r3, r2
 800369e:	d004      	beq.n	80036aa <HAL_TIM_IRQHandler+0x4e>
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	0018      	movs	r0, r3
 80036a4:	f000 f9a4 	bl	80039f0 <HAL_TIM_IC_CaptureCallback>
 80036a8:	e007      	b.n	80036ba <HAL_TIM_IRQHandler+0x5e>
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	0018      	movs	r0, r3
 80036ae:	f000 f997 	bl	80039e0 <HAL_TIM_OC_DelayElapsedCallback>
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	0018      	movs	r0, r3
 80036b6:	f000 f9a3 	bl	8003a00 <HAL_TIM_PWM_PulseFinishedCallback>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	2200      	movs	r2, #0
 80036be:	771a      	strb	r2, [r3, #28]
 80036c0:	68bb      	ldr	r3, [r7, #8]
 80036c2:	2204      	movs	r2, #4
 80036c4:	4013      	ands	r3, r2
 80036c6:	d022      	beq.n	800370e <HAL_TIM_IRQHandler+0xb2>
 80036c8:	68fb      	ldr	r3, [r7, #12]
 80036ca:	2204      	movs	r2, #4
 80036cc:	4013      	ands	r3, r2
 80036ce:	d01e      	beq.n	800370e <HAL_TIM_IRQHandler+0xb2>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	2205      	movs	r2, #5
 80036d6:	4252      	negs	r2, r2
 80036d8:	611a      	str	r2, [r3, #16]
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	2202      	movs	r2, #2
 80036de:	771a      	strb	r2, [r3, #28]
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	681b      	ldr	r3, [r3, #0]
 80036e4:	699a      	ldr	r2, [r3, #24]
 80036e6:	23c0      	movs	r3, #192	@ 0xc0
 80036e8:	009b      	lsls	r3, r3, #2
 80036ea:	4013      	ands	r3, r2
 80036ec:	d004      	beq.n	80036f8 <HAL_TIM_IRQHandler+0x9c>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	0018      	movs	r0, r3
 80036f2:	f000 f97d 	bl	80039f0 <HAL_TIM_IC_CaptureCallback>
 80036f6:	e007      	b.n	8003708 <HAL_TIM_IRQHandler+0xac>
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	0018      	movs	r0, r3
 80036fc:	f000 f970 	bl	80039e0 <HAL_TIM_OC_DelayElapsedCallback>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	0018      	movs	r0, r3
 8003704:	f000 f97c 	bl	8003a00 <HAL_TIM_PWM_PulseFinishedCallback>
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	2200      	movs	r2, #0
 800370c:	771a      	strb	r2, [r3, #28]
 800370e:	68bb      	ldr	r3, [r7, #8]
 8003710:	2208      	movs	r2, #8
 8003712:	4013      	ands	r3, r2
 8003714:	d021      	beq.n	800375a <HAL_TIM_IRQHandler+0xfe>
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	2208      	movs	r2, #8
 800371a:	4013      	ands	r3, r2
 800371c:	d01d      	beq.n	800375a <HAL_TIM_IRQHandler+0xfe>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	2209      	movs	r2, #9
 8003724:	4252      	negs	r2, r2
 8003726:	611a      	str	r2, [r3, #16]
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	2204      	movs	r2, #4
 800372c:	771a      	strb	r2, [r3, #28]
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	69db      	ldr	r3, [r3, #28]
 8003734:	2203      	movs	r2, #3
 8003736:	4013      	ands	r3, r2
 8003738:	d004      	beq.n	8003744 <HAL_TIM_IRQHandler+0xe8>
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	0018      	movs	r0, r3
 800373e:	f000 f957 	bl	80039f0 <HAL_TIM_IC_CaptureCallback>
 8003742:	e007      	b.n	8003754 <HAL_TIM_IRQHandler+0xf8>
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	0018      	movs	r0, r3
 8003748:	f000 f94a 	bl	80039e0 <HAL_TIM_OC_DelayElapsedCallback>
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	0018      	movs	r0, r3
 8003750:	f000 f956 	bl	8003a00 <HAL_TIM_PWM_PulseFinishedCallback>
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	2200      	movs	r2, #0
 8003758:	771a      	strb	r2, [r3, #28]
 800375a:	68bb      	ldr	r3, [r7, #8]
 800375c:	2210      	movs	r2, #16
 800375e:	4013      	ands	r3, r2
 8003760:	d022      	beq.n	80037a8 <HAL_TIM_IRQHandler+0x14c>
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	2210      	movs	r2, #16
 8003766:	4013      	ands	r3, r2
 8003768:	d01e      	beq.n	80037a8 <HAL_TIM_IRQHandler+0x14c>
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	2211      	movs	r2, #17
 8003770:	4252      	negs	r2, r2
 8003772:	611a      	str	r2, [r3, #16]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	2208      	movs	r2, #8
 8003778:	771a      	strb	r2, [r3, #28]
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	69da      	ldr	r2, [r3, #28]
 8003780:	23c0      	movs	r3, #192	@ 0xc0
 8003782:	009b      	lsls	r3, r3, #2
 8003784:	4013      	ands	r3, r2
 8003786:	d004      	beq.n	8003792 <HAL_TIM_IRQHandler+0x136>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	0018      	movs	r0, r3
 800378c:	f000 f930 	bl	80039f0 <HAL_TIM_IC_CaptureCallback>
 8003790:	e007      	b.n	80037a2 <HAL_TIM_IRQHandler+0x146>
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	0018      	movs	r0, r3
 8003796:	f000 f923 	bl	80039e0 <HAL_TIM_OC_DelayElapsedCallback>
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	0018      	movs	r0, r3
 800379e:	f000 f92f 	bl	8003a00 <HAL_TIM_PWM_PulseFinishedCallback>
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	2200      	movs	r2, #0
 80037a6:	771a      	strb	r2, [r3, #28]
 80037a8:	68bb      	ldr	r3, [r7, #8]
 80037aa:	2201      	movs	r2, #1
 80037ac:	4013      	ands	r3, r2
 80037ae:	d00c      	beq.n	80037ca <HAL_TIM_IRQHandler+0x16e>
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	2201      	movs	r2, #1
 80037b4:	4013      	ands	r3, r2
 80037b6:	d008      	beq.n	80037ca <HAL_TIM_IRQHandler+0x16e>
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	2202      	movs	r2, #2
 80037be:	4252      	negs	r2, r2
 80037c0:	611a      	str	r2, [r3, #16]
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	0018      	movs	r0, r3
 80037c6:	f7fd fbb5 	bl	8000f34 <HAL_TIM_PeriodElapsedCallback>
 80037ca:	68bb      	ldr	r3, [r7, #8]
 80037cc:	2280      	movs	r2, #128	@ 0x80
 80037ce:	4013      	ands	r3, r2
 80037d0:	d00c      	beq.n	80037ec <HAL_TIM_IRQHandler+0x190>
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	2280      	movs	r2, #128	@ 0x80
 80037d6:	4013      	ands	r3, r2
 80037d8:	d008      	beq.n	80037ec <HAL_TIM_IRQHandler+0x190>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	2281      	movs	r2, #129	@ 0x81
 80037e0:	4252      	negs	r2, r2
 80037e2:	611a      	str	r2, [r3, #16]
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	0018      	movs	r0, r3
 80037e8:	f000 fa98 	bl	8003d1c <HAL_TIMEx_BreakCallback>
 80037ec:	68bb      	ldr	r3, [r7, #8]
 80037ee:	2240      	movs	r2, #64	@ 0x40
 80037f0:	4013      	ands	r3, r2
 80037f2:	d00c      	beq.n	800380e <HAL_TIM_IRQHandler+0x1b2>
 80037f4:	68fb      	ldr	r3, [r7, #12]
 80037f6:	2240      	movs	r2, #64	@ 0x40
 80037f8:	4013      	ands	r3, r2
 80037fa:	d008      	beq.n	800380e <HAL_TIM_IRQHandler+0x1b2>
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	2241      	movs	r2, #65	@ 0x41
 8003802:	4252      	negs	r2, r2
 8003804:	611a      	str	r2, [r3, #16]
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	0018      	movs	r0, r3
 800380a:	f000 f901 	bl	8003a10 <HAL_TIM_TriggerCallback>
 800380e:	68bb      	ldr	r3, [r7, #8]
 8003810:	2220      	movs	r2, #32
 8003812:	4013      	ands	r3, r2
 8003814:	d00c      	beq.n	8003830 <HAL_TIM_IRQHandler+0x1d4>
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	2220      	movs	r2, #32
 800381a:	4013      	ands	r3, r2
 800381c:	d008      	beq.n	8003830 <HAL_TIM_IRQHandler+0x1d4>
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	2221      	movs	r2, #33	@ 0x21
 8003824:	4252      	negs	r2, r2
 8003826:	611a      	str	r2, [r3, #16]
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	0018      	movs	r0, r3
 800382c:	f000 fa6e 	bl	8003d0c <HAL_TIMEx_CommutCallback>
 8003830:	46c0      	nop			@ (mov r8, r8)
 8003832:	46bd      	mov	sp, r7
 8003834:	b004      	add	sp, #16
 8003836:	bd80      	pop	{r7, pc}

08003838 <HAL_TIM_ConfigClockSource>:
 8003838:	b580      	push	{r7, lr}
 800383a:	b084      	sub	sp, #16
 800383c:	af00      	add	r7, sp, #0
 800383e:	6078      	str	r0, [r7, #4]
 8003840:	6039      	str	r1, [r7, #0]
 8003842:	230f      	movs	r3, #15
 8003844:	18fb      	adds	r3, r7, r3
 8003846:	2200      	movs	r2, #0
 8003848:	701a      	strb	r2, [r3, #0]
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	223c      	movs	r2, #60	@ 0x3c
 800384e:	5c9b      	ldrb	r3, [r3, r2]
 8003850:	2b01      	cmp	r3, #1
 8003852:	d101      	bne.n	8003858 <HAL_TIM_ConfigClockSource+0x20>
 8003854:	2302      	movs	r3, #2
 8003856:	e0bc      	b.n	80039d2 <HAL_TIM_ConfigClockSource+0x19a>
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	223c      	movs	r2, #60	@ 0x3c
 800385c:	2101      	movs	r1, #1
 800385e:	5499      	strb	r1, [r3, r2]
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	223d      	movs	r2, #61	@ 0x3d
 8003864:	2102      	movs	r1, #2
 8003866:	5499      	strb	r1, [r3, r2]
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	689b      	ldr	r3, [r3, #8]
 800386e:	60bb      	str	r3, [r7, #8]
 8003870:	68bb      	ldr	r3, [r7, #8]
 8003872:	2277      	movs	r2, #119	@ 0x77
 8003874:	4393      	bics	r3, r2
 8003876:	60bb      	str	r3, [r7, #8]
 8003878:	68bb      	ldr	r3, [r7, #8]
 800387a:	4a58      	ldr	r2, [pc, #352]	@ (80039dc <HAL_TIM_ConfigClockSource+0x1a4>)
 800387c:	4013      	ands	r3, r2
 800387e:	60bb      	str	r3, [r7, #8]
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	68ba      	ldr	r2, [r7, #8]
 8003886:	609a      	str	r2, [r3, #8]
 8003888:	683b      	ldr	r3, [r7, #0]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	2280      	movs	r2, #128	@ 0x80
 800388e:	0192      	lsls	r2, r2, #6
 8003890:	4293      	cmp	r3, r2
 8003892:	d040      	beq.n	8003916 <HAL_TIM_ConfigClockSource+0xde>
 8003894:	2280      	movs	r2, #128	@ 0x80
 8003896:	0192      	lsls	r2, r2, #6
 8003898:	4293      	cmp	r3, r2
 800389a:	d900      	bls.n	800389e <HAL_TIM_ConfigClockSource+0x66>
 800389c:	e088      	b.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 800389e:	2280      	movs	r2, #128	@ 0x80
 80038a0:	0152      	lsls	r2, r2, #5
 80038a2:	4293      	cmp	r3, r2
 80038a4:	d100      	bne.n	80038a8 <HAL_TIM_ConfigClockSource+0x70>
 80038a6:	e088      	b.n	80039ba <HAL_TIM_ConfigClockSource+0x182>
 80038a8:	2280      	movs	r2, #128	@ 0x80
 80038aa:	0152      	lsls	r2, r2, #5
 80038ac:	4293      	cmp	r3, r2
 80038ae:	d900      	bls.n	80038b2 <HAL_TIM_ConfigClockSource+0x7a>
 80038b0:	e07e      	b.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038b2:	2b70      	cmp	r3, #112	@ 0x70
 80038b4:	d018      	beq.n	80038e8 <HAL_TIM_ConfigClockSource+0xb0>
 80038b6:	d900      	bls.n	80038ba <HAL_TIM_ConfigClockSource+0x82>
 80038b8:	e07a      	b.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038ba:	2b60      	cmp	r3, #96	@ 0x60
 80038bc:	d04f      	beq.n	800395e <HAL_TIM_ConfigClockSource+0x126>
 80038be:	d900      	bls.n	80038c2 <HAL_TIM_ConfigClockSource+0x8a>
 80038c0:	e076      	b.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038c2:	2b50      	cmp	r3, #80	@ 0x50
 80038c4:	d03b      	beq.n	800393e <HAL_TIM_ConfigClockSource+0x106>
 80038c6:	d900      	bls.n	80038ca <HAL_TIM_ConfigClockSource+0x92>
 80038c8:	e072      	b.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038ca:	2b40      	cmp	r3, #64	@ 0x40
 80038cc:	d057      	beq.n	800397e <HAL_TIM_ConfigClockSource+0x146>
 80038ce:	d900      	bls.n	80038d2 <HAL_TIM_ConfigClockSource+0x9a>
 80038d0:	e06e      	b.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038d2:	2b30      	cmp	r3, #48	@ 0x30
 80038d4:	d063      	beq.n	800399e <HAL_TIM_ConfigClockSource+0x166>
 80038d6:	d86b      	bhi.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038d8:	2b20      	cmp	r3, #32
 80038da:	d060      	beq.n	800399e <HAL_TIM_ConfigClockSource+0x166>
 80038dc:	d868      	bhi.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d05d      	beq.n	800399e <HAL_TIM_ConfigClockSource+0x166>
 80038e2:	2b10      	cmp	r3, #16
 80038e4:	d05b      	beq.n	800399e <HAL_TIM_ConfigClockSource+0x166>
 80038e6:	e063      	b.n	80039b0 <HAL_TIM_ConfigClockSource+0x178>
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	6818      	ldr	r0, [r3, #0]
 80038ec:	683b      	ldr	r3, [r7, #0]
 80038ee:	6899      	ldr	r1, [r3, #8]
 80038f0:	683b      	ldr	r3, [r7, #0]
 80038f2:	685a      	ldr	r2, [r3, #4]
 80038f4:	683b      	ldr	r3, [r7, #0]
 80038f6:	68db      	ldr	r3, [r3, #12]
 80038f8:	f000 f990 	bl	8003c1c <TIM_ETR_SetConfig>
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	689b      	ldr	r3, [r3, #8]
 8003902:	60bb      	str	r3, [r7, #8]
 8003904:	68bb      	ldr	r3, [r7, #8]
 8003906:	2277      	movs	r2, #119	@ 0x77
 8003908:	4313      	orrs	r3, r2
 800390a:	60bb      	str	r3, [r7, #8]
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	68ba      	ldr	r2, [r7, #8]
 8003912:	609a      	str	r2, [r3, #8]
 8003914:	e052      	b.n	80039bc <HAL_TIM_ConfigClockSource+0x184>
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	6818      	ldr	r0, [r3, #0]
 800391a:	683b      	ldr	r3, [r7, #0]
 800391c:	6899      	ldr	r1, [r3, #8]
 800391e:	683b      	ldr	r3, [r7, #0]
 8003920:	685a      	ldr	r2, [r3, #4]
 8003922:	683b      	ldr	r3, [r7, #0]
 8003924:	68db      	ldr	r3, [r3, #12]
 8003926:	f000 f979 	bl	8003c1c <TIM_ETR_SetConfig>
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	689a      	ldr	r2, [r3, #8]
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	2180      	movs	r1, #128	@ 0x80
 8003936:	01c9      	lsls	r1, r1, #7
 8003938:	430a      	orrs	r2, r1
 800393a:	609a      	str	r2, [r3, #8]
 800393c:	e03e      	b.n	80039bc <HAL_TIM_ConfigClockSource+0x184>
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	6818      	ldr	r0, [r3, #0]
 8003942:	683b      	ldr	r3, [r7, #0]
 8003944:	6859      	ldr	r1, [r3, #4]
 8003946:	683b      	ldr	r3, [r7, #0]
 8003948:	68db      	ldr	r3, [r3, #12]
 800394a:	001a      	movs	r2, r3
 800394c:	f000 f8ec 	bl	8003b28 <TIM_TI1_ConfigInputStage>
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	2150      	movs	r1, #80	@ 0x50
 8003956:	0018      	movs	r0, r3
 8003958:	f000 f946 	bl	8003be8 <TIM_ITRx_SetConfig>
 800395c:	e02e      	b.n	80039bc <HAL_TIM_ConfigClockSource+0x184>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	6818      	ldr	r0, [r3, #0]
 8003962:	683b      	ldr	r3, [r7, #0]
 8003964:	6859      	ldr	r1, [r3, #4]
 8003966:	683b      	ldr	r3, [r7, #0]
 8003968:	68db      	ldr	r3, [r3, #12]
 800396a:	001a      	movs	r2, r3
 800396c:	f000 f90a 	bl	8003b84 <TIM_TI2_ConfigInputStage>
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	2160      	movs	r1, #96	@ 0x60
 8003976:	0018      	movs	r0, r3
 8003978:	f000 f936 	bl	8003be8 <TIM_ITRx_SetConfig>
 800397c:	e01e      	b.n	80039bc <HAL_TIM_ConfigClockSource+0x184>
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	6818      	ldr	r0, [r3, #0]
 8003982:	683b      	ldr	r3, [r7, #0]
 8003984:	6859      	ldr	r1, [r3, #4]
 8003986:	683b      	ldr	r3, [r7, #0]
 8003988:	68db      	ldr	r3, [r3, #12]
 800398a:	001a      	movs	r2, r3
 800398c:	f000 f8cc 	bl	8003b28 <TIM_TI1_ConfigInputStage>
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	2140      	movs	r1, #64	@ 0x40
 8003996:	0018      	movs	r0, r3
 8003998:	f000 f926 	bl	8003be8 <TIM_ITRx_SetConfig>
 800399c:	e00e      	b.n	80039bc <HAL_TIM_ConfigClockSource+0x184>
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	681a      	ldr	r2, [r3, #0]
 80039a2:	683b      	ldr	r3, [r7, #0]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	0019      	movs	r1, r3
 80039a8:	0010      	movs	r0, r2
 80039aa:	f000 f91d 	bl	8003be8 <TIM_ITRx_SetConfig>
 80039ae:	e005      	b.n	80039bc <HAL_TIM_ConfigClockSource+0x184>
 80039b0:	230f      	movs	r3, #15
 80039b2:	18fb      	adds	r3, r7, r3
 80039b4:	2201      	movs	r2, #1
 80039b6:	701a      	strb	r2, [r3, #0]
 80039b8:	e000      	b.n	80039bc <HAL_TIM_ConfigClockSource+0x184>
 80039ba:	46c0      	nop			@ (mov r8, r8)
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	223d      	movs	r2, #61	@ 0x3d
 80039c0:	2101      	movs	r1, #1
 80039c2:	5499      	strb	r1, [r3, r2]
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	223c      	movs	r2, #60	@ 0x3c
 80039c8:	2100      	movs	r1, #0
 80039ca:	5499      	strb	r1, [r3, r2]
 80039cc:	230f      	movs	r3, #15
 80039ce:	18fb      	adds	r3, r7, r3
 80039d0:	781b      	ldrb	r3, [r3, #0]
 80039d2:	0018      	movs	r0, r3
 80039d4:	46bd      	mov	sp, r7
 80039d6:	b004      	add	sp, #16
 80039d8:	bd80      	pop	{r7, pc}
 80039da:	46c0      	nop			@ (mov r8, r8)
 80039dc:	ffff00ff 	.word	0xffff00ff

080039e0 <HAL_TIM_OC_DelayElapsedCallback>:
 80039e0:	b580      	push	{r7, lr}
 80039e2:	b082      	sub	sp, #8
 80039e4:	af00      	add	r7, sp, #0
 80039e6:	6078      	str	r0, [r7, #4]
 80039e8:	46c0      	nop			@ (mov r8, r8)
 80039ea:	46bd      	mov	sp, r7
 80039ec:	b002      	add	sp, #8
 80039ee:	bd80      	pop	{r7, pc}

080039f0 <HAL_TIM_IC_CaptureCallback>:
 80039f0:	b580      	push	{r7, lr}
 80039f2:	b082      	sub	sp, #8
 80039f4:	af00      	add	r7, sp, #0
 80039f6:	6078      	str	r0, [r7, #4]
 80039f8:	46c0      	nop			@ (mov r8, r8)
 80039fa:	46bd      	mov	sp, r7
 80039fc:	b002      	add	sp, #8
 80039fe:	bd80      	pop	{r7, pc}

08003a00 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003a00:	b580      	push	{r7, lr}
 8003a02:	b082      	sub	sp, #8
 8003a04:	af00      	add	r7, sp, #0
 8003a06:	6078      	str	r0, [r7, #4]
 8003a08:	46c0      	nop			@ (mov r8, r8)
 8003a0a:	46bd      	mov	sp, r7
 8003a0c:	b002      	add	sp, #8
 8003a0e:	bd80      	pop	{r7, pc}

08003a10 <HAL_TIM_TriggerCallback>:
 8003a10:	b580      	push	{r7, lr}
 8003a12:	b082      	sub	sp, #8
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	6078      	str	r0, [r7, #4]
 8003a18:	46c0      	nop			@ (mov r8, r8)
 8003a1a:	46bd      	mov	sp, r7
 8003a1c:	b002      	add	sp, #8
 8003a1e:	bd80      	pop	{r7, pc}

08003a20 <TIM_Base_SetConfig>:
 8003a20:	b580      	push	{r7, lr}
 8003a22:	b084      	sub	sp, #16
 8003a24:	af00      	add	r7, sp, #0
 8003a26:	6078      	str	r0, [r7, #4]
 8003a28:	6039      	str	r1, [r7, #0]
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	60fb      	str	r3, [r7, #12]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	4a36      	ldr	r2, [pc, #216]	@ (8003b0c <TIM_Base_SetConfig+0xec>)
 8003a34:	4293      	cmp	r3, r2
 8003a36:	d003      	beq.n	8003a40 <TIM_Base_SetConfig+0x20>
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	4a35      	ldr	r2, [pc, #212]	@ (8003b10 <TIM_Base_SetConfig+0xf0>)
 8003a3c:	4293      	cmp	r3, r2
 8003a3e:	d108      	bne.n	8003a52 <TIM_Base_SetConfig+0x32>
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	2270      	movs	r2, #112	@ 0x70
 8003a44:	4393      	bics	r3, r2
 8003a46:	60fb      	str	r3, [r7, #12]
 8003a48:	683b      	ldr	r3, [r7, #0]
 8003a4a:	685b      	ldr	r3, [r3, #4]
 8003a4c:	68fa      	ldr	r2, [r7, #12]
 8003a4e:	4313      	orrs	r3, r2
 8003a50:	60fb      	str	r3, [r7, #12]
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	4a2d      	ldr	r2, [pc, #180]	@ (8003b0c <TIM_Base_SetConfig+0xec>)
 8003a56:	4293      	cmp	r3, r2
 8003a58:	d013      	beq.n	8003a82 <TIM_Base_SetConfig+0x62>
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	4a2c      	ldr	r2, [pc, #176]	@ (8003b10 <TIM_Base_SetConfig+0xf0>)
 8003a5e:	4293      	cmp	r3, r2
 8003a60:	d00f      	beq.n	8003a82 <TIM_Base_SetConfig+0x62>
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	4a2b      	ldr	r2, [pc, #172]	@ (8003b14 <TIM_Base_SetConfig+0xf4>)
 8003a66:	4293      	cmp	r3, r2
 8003a68:	d00b      	beq.n	8003a82 <TIM_Base_SetConfig+0x62>
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	4a2a      	ldr	r2, [pc, #168]	@ (8003b18 <TIM_Base_SetConfig+0xf8>)
 8003a6e:	4293      	cmp	r3, r2
 8003a70:	d007      	beq.n	8003a82 <TIM_Base_SetConfig+0x62>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	4a29      	ldr	r2, [pc, #164]	@ (8003b1c <TIM_Base_SetConfig+0xfc>)
 8003a76:	4293      	cmp	r3, r2
 8003a78:	d003      	beq.n	8003a82 <TIM_Base_SetConfig+0x62>
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	4a28      	ldr	r2, [pc, #160]	@ (8003b20 <TIM_Base_SetConfig+0x100>)
 8003a7e:	4293      	cmp	r3, r2
 8003a80:	d108      	bne.n	8003a94 <TIM_Base_SetConfig+0x74>
 8003a82:	68fb      	ldr	r3, [r7, #12]
 8003a84:	4a27      	ldr	r2, [pc, #156]	@ (8003b24 <TIM_Base_SetConfig+0x104>)
 8003a86:	4013      	ands	r3, r2
 8003a88:	60fb      	str	r3, [r7, #12]
 8003a8a:	683b      	ldr	r3, [r7, #0]
 8003a8c:	68db      	ldr	r3, [r3, #12]
 8003a8e:	68fa      	ldr	r2, [r7, #12]
 8003a90:	4313      	orrs	r3, r2
 8003a92:	60fb      	str	r3, [r7, #12]
 8003a94:	68fb      	ldr	r3, [r7, #12]
 8003a96:	2280      	movs	r2, #128	@ 0x80
 8003a98:	4393      	bics	r3, r2
 8003a9a:	001a      	movs	r2, r3
 8003a9c:	683b      	ldr	r3, [r7, #0]
 8003a9e:	695b      	ldr	r3, [r3, #20]
 8003aa0:	4313      	orrs	r3, r2
 8003aa2:	60fb      	str	r3, [r7, #12]
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	68fa      	ldr	r2, [r7, #12]
 8003aa8:	601a      	str	r2, [r3, #0]
 8003aaa:	683b      	ldr	r3, [r7, #0]
 8003aac:	689a      	ldr	r2, [r3, #8]
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003ab2:	683b      	ldr	r3, [r7, #0]
 8003ab4:	681a      	ldr	r2, [r3, #0]
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	629a      	str	r2, [r3, #40]	@ 0x28
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	4a13      	ldr	r2, [pc, #76]	@ (8003b0c <TIM_Base_SetConfig+0xec>)
 8003abe:	4293      	cmp	r3, r2
 8003ac0:	d00b      	beq.n	8003ada <TIM_Base_SetConfig+0xba>
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	4a14      	ldr	r2, [pc, #80]	@ (8003b18 <TIM_Base_SetConfig+0xf8>)
 8003ac6:	4293      	cmp	r3, r2
 8003ac8:	d007      	beq.n	8003ada <TIM_Base_SetConfig+0xba>
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	4a13      	ldr	r2, [pc, #76]	@ (8003b1c <TIM_Base_SetConfig+0xfc>)
 8003ace:	4293      	cmp	r3, r2
 8003ad0:	d003      	beq.n	8003ada <TIM_Base_SetConfig+0xba>
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	4a12      	ldr	r2, [pc, #72]	@ (8003b20 <TIM_Base_SetConfig+0x100>)
 8003ad6:	4293      	cmp	r3, r2
 8003ad8:	d103      	bne.n	8003ae2 <TIM_Base_SetConfig+0xc2>
 8003ada:	683b      	ldr	r3, [r7, #0]
 8003adc:	691a      	ldr	r2, [r3, #16]
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	2201      	movs	r2, #1
 8003ae6:	615a      	str	r2, [r3, #20]
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	691b      	ldr	r3, [r3, #16]
 8003aec:	2201      	movs	r2, #1
 8003aee:	4013      	ands	r3, r2
 8003af0:	2b01      	cmp	r3, #1
 8003af2:	d106      	bne.n	8003b02 <TIM_Base_SetConfig+0xe2>
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	691b      	ldr	r3, [r3, #16]
 8003af8:	2201      	movs	r2, #1
 8003afa:	4393      	bics	r3, r2
 8003afc:	001a      	movs	r2, r3
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	611a      	str	r2, [r3, #16]
 8003b02:	46c0      	nop			@ (mov r8, r8)
 8003b04:	46bd      	mov	sp, r7
 8003b06:	b004      	add	sp, #16
 8003b08:	bd80      	pop	{r7, pc}
 8003b0a:	46c0      	nop			@ (mov r8, r8)
 8003b0c:	40012c00 	.word	0x40012c00
 8003b10:	40000400 	.word	0x40000400
 8003b14:	40002000 	.word	0x40002000
 8003b18:	40014000 	.word	0x40014000
 8003b1c:	40014400 	.word	0x40014400
 8003b20:	40014800 	.word	0x40014800
 8003b24:	fffffcff 	.word	0xfffffcff

08003b28 <TIM_TI1_ConfigInputStage>:
 8003b28:	b580      	push	{r7, lr}
 8003b2a:	b086      	sub	sp, #24
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	60f8      	str	r0, [r7, #12]
 8003b30:	60b9      	str	r1, [r7, #8]
 8003b32:	607a      	str	r2, [r7, #4]
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	6a1b      	ldr	r3, [r3, #32]
 8003b38:	617b      	str	r3, [r7, #20]
 8003b3a:	68fb      	ldr	r3, [r7, #12]
 8003b3c:	6a1b      	ldr	r3, [r3, #32]
 8003b3e:	2201      	movs	r2, #1
 8003b40:	4393      	bics	r3, r2
 8003b42:	001a      	movs	r2, r3
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	621a      	str	r2, [r3, #32]
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	699b      	ldr	r3, [r3, #24]
 8003b4c:	613b      	str	r3, [r7, #16]
 8003b4e:	693b      	ldr	r3, [r7, #16]
 8003b50:	22f0      	movs	r2, #240	@ 0xf0
 8003b52:	4393      	bics	r3, r2
 8003b54:	613b      	str	r3, [r7, #16]
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	011b      	lsls	r3, r3, #4
 8003b5a:	693a      	ldr	r2, [r7, #16]
 8003b5c:	4313      	orrs	r3, r2
 8003b5e:	613b      	str	r3, [r7, #16]
 8003b60:	697b      	ldr	r3, [r7, #20]
 8003b62:	220a      	movs	r2, #10
 8003b64:	4393      	bics	r3, r2
 8003b66:	617b      	str	r3, [r7, #20]
 8003b68:	697a      	ldr	r2, [r7, #20]
 8003b6a:	68bb      	ldr	r3, [r7, #8]
 8003b6c:	4313      	orrs	r3, r2
 8003b6e:	617b      	str	r3, [r7, #20]
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	693a      	ldr	r2, [r7, #16]
 8003b74:	619a      	str	r2, [r3, #24]
 8003b76:	68fb      	ldr	r3, [r7, #12]
 8003b78:	697a      	ldr	r2, [r7, #20]
 8003b7a:	621a      	str	r2, [r3, #32]
 8003b7c:	46c0      	nop			@ (mov r8, r8)
 8003b7e:	46bd      	mov	sp, r7
 8003b80:	b006      	add	sp, #24
 8003b82:	bd80      	pop	{r7, pc}

08003b84 <TIM_TI2_ConfigInputStage>:
 8003b84:	b580      	push	{r7, lr}
 8003b86:	b086      	sub	sp, #24
 8003b88:	af00      	add	r7, sp, #0
 8003b8a:	60f8      	str	r0, [r7, #12]
 8003b8c:	60b9      	str	r1, [r7, #8]
 8003b8e:	607a      	str	r2, [r7, #4]
 8003b90:	68fb      	ldr	r3, [r7, #12]
 8003b92:	6a1b      	ldr	r3, [r3, #32]
 8003b94:	617b      	str	r3, [r7, #20]
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	6a1b      	ldr	r3, [r3, #32]
 8003b9a:	2210      	movs	r2, #16
 8003b9c:	4393      	bics	r3, r2
 8003b9e:	001a      	movs	r2, r3
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	621a      	str	r2, [r3, #32]
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	699b      	ldr	r3, [r3, #24]
 8003ba8:	613b      	str	r3, [r7, #16]
 8003baa:	693b      	ldr	r3, [r7, #16]
 8003bac:	4a0d      	ldr	r2, [pc, #52]	@ (8003be4 <TIM_TI2_ConfigInputStage+0x60>)
 8003bae:	4013      	ands	r3, r2
 8003bb0:	613b      	str	r3, [r7, #16]
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	031b      	lsls	r3, r3, #12
 8003bb6:	693a      	ldr	r2, [r7, #16]
 8003bb8:	4313      	orrs	r3, r2
 8003bba:	613b      	str	r3, [r7, #16]
 8003bbc:	697b      	ldr	r3, [r7, #20]
 8003bbe:	22a0      	movs	r2, #160	@ 0xa0
 8003bc0:	4393      	bics	r3, r2
 8003bc2:	617b      	str	r3, [r7, #20]
 8003bc4:	68bb      	ldr	r3, [r7, #8]
 8003bc6:	011b      	lsls	r3, r3, #4
 8003bc8:	697a      	ldr	r2, [r7, #20]
 8003bca:	4313      	orrs	r3, r2
 8003bcc:	617b      	str	r3, [r7, #20]
 8003bce:	68fb      	ldr	r3, [r7, #12]
 8003bd0:	693a      	ldr	r2, [r7, #16]
 8003bd2:	619a      	str	r2, [r3, #24]
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	697a      	ldr	r2, [r7, #20]
 8003bd8:	621a      	str	r2, [r3, #32]
 8003bda:	46c0      	nop			@ (mov r8, r8)
 8003bdc:	46bd      	mov	sp, r7
 8003bde:	b006      	add	sp, #24
 8003be0:	bd80      	pop	{r7, pc}
 8003be2:	46c0      	nop			@ (mov r8, r8)
 8003be4:	ffff0fff 	.word	0xffff0fff

08003be8 <TIM_ITRx_SetConfig>:
 8003be8:	b580      	push	{r7, lr}
 8003bea:	b084      	sub	sp, #16
 8003bec:	af00      	add	r7, sp, #0
 8003bee:	6078      	str	r0, [r7, #4]
 8003bf0:	6039      	str	r1, [r7, #0]
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	689b      	ldr	r3, [r3, #8]
 8003bf6:	60fb      	str	r3, [r7, #12]
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	2270      	movs	r2, #112	@ 0x70
 8003bfc:	4393      	bics	r3, r2
 8003bfe:	60fb      	str	r3, [r7, #12]
 8003c00:	683a      	ldr	r2, [r7, #0]
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	4313      	orrs	r3, r2
 8003c06:	2207      	movs	r2, #7
 8003c08:	4313      	orrs	r3, r2
 8003c0a:	60fb      	str	r3, [r7, #12]
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	68fa      	ldr	r2, [r7, #12]
 8003c10:	609a      	str	r2, [r3, #8]
 8003c12:	46c0      	nop			@ (mov r8, r8)
 8003c14:	46bd      	mov	sp, r7
 8003c16:	b004      	add	sp, #16
 8003c18:	bd80      	pop	{r7, pc}
	...

08003c1c <TIM_ETR_SetConfig>:
 8003c1c:	b580      	push	{r7, lr}
 8003c1e:	b086      	sub	sp, #24
 8003c20:	af00      	add	r7, sp, #0
 8003c22:	60f8      	str	r0, [r7, #12]
 8003c24:	60b9      	str	r1, [r7, #8]
 8003c26:	607a      	str	r2, [r7, #4]
 8003c28:	603b      	str	r3, [r7, #0]
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	689b      	ldr	r3, [r3, #8]
 8003c2e:	617b      	str	r3, [r7, #20]
 8003c30:	697b      	ldr	r3, [r7, #20]
 8003c32:	4a09      	ldr	r2, [pc, #36]	@ (8003c58 <TIM_ETR_SetConfig+0x3c>)
 8003c34:	4013      	ands	r3, r2
 8003c36:	617b      	str	r3, [r7, #20]
 8003c38:	683b      	ldr	r3, [r7, #0]
 8003c3a:	021a      	lsls	r2, r3, #8
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	431a      	orrs	r2, r3
 8003c40:	68bb      	ldr	r3, [r7, #8]
 8003c42:	4313      	orrs	r3, r2
 8003c44:	697a      	ldr	r2, [r7, #20]
 8003c46:	4313      	orrs	r3, r2
 8003c48:	617b      	str	r3, [r7, #20]
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	697a      	ldr	r2, [r7, #20]
 8003c4e:	609a      	str	r2, [r3, #8]
 8003c50:	46c0      	nop			@ (mov r8, r8)
 8003c52:	46bd      	mov	sp, r7
 8003c54:	b006      	add	sp, #24
 8003c56:	bd80      	pop	{r7, pc}
 8003c58:	ffff00ff 	.word	0xffff00ff

08003c5c <HAL_TIMEx_MasterConfigSynchronization>:
 8003c5c:	b580      	push	{r7, lr}
 8003c5e:	b084      	sub	sp, #16
 8003c60:	af00      	add	r7, sp, #0
 8003c62:	6078      	str	r0, [r7, #4]
 8003c64:	6039      	str	r1, [r7, #0]
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	223c      	movs	r2, #60	@ 0x3c
 8003c6a:	5c9b      	ldrb	r3, [r3, r2]
 8003c6c:	2b01      	cmp	r3, #1
 8003c6e:	d101      	bne.n	8003c74 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003c70:	2302      	movs	r3, #2
 8003c72:	e041      	b.n	8003cf8 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	223c      	movs	r2, #60	@ 0x3c
 8003c78:	2101      	movs	r1, #1
 8003c7a:	5499      	strb	r1, [r3, r2]
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	223d      	movs	r2, #61	@ 0x3d
 8003c80:	2102      	movs	r1, #2
 8003c82:	5499      	strb	r1, [r3, r2]
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	685b      	ldr	r3, [r3, #4]
 8003c8a:	60fb      	str	r3, [r7, #12]
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	689b      	ldr	r3, [r3, #8]
 8003c92:	60bb      	str	r3, [r7, #8]
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	2270      	movs	r2, #112	@ 0x70
 8003c98:	4393      	bics	r3, r2
 8003c9a:	60fb      	str	r3, [r7, #12]
 8003c9c:	683b      	ldr	r3, [r7, #0]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	68fa      	ldr	r2, [r7, #12]
 8003ca2:	4313      	orrs	r3, r2
 8003ca4:	60fb      	str	r3, [r7, #12]
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	681b      	ldr	r3, [r3, #0]
 8003caa:	68fa      	ldr	r2, [r7, #12]
 8003cac:	605a      	str	r2, [r3, #4]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	4a13      	ldr	r2, [pc, #76]	@ (8003d00 <HAL_TIMEx_MasterConfigSynchronization+0xa4>)
 8003cb4:	4293      	cmp	r3, r2
 8003cb6:	d009      	beq.n	8003ccc <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	4a11      	ldr	r2, [pc, #68]	@ (8003d04 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8003cbe:	4293      	cmp	r3, r2
 8003cc0:	d004      	beq.n	8003ccc <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	4a10      	ldr	r2, [pc, #64]	@ (8003d08 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8003cc8:	4293      	cmp	r3, r2
 8003cca:	d10c      	bne.n	8003ce6 <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8003ccc:	68bb      	ldr	r3, [r7, #8]
 8003cce:	2280      	movs	r2, #128	@ 0x80
 8003cd0:	4393      	bics	r3, r2
 8003cd2:	60bb      	str	r3, [r7, #8]
 8003cd4:	683b      	ldr	r3, [r7, #0]
 8003cd6:	685b      	ldr	r3, [r3, #4]
 8003cd8:	68ba      	ldr	r2, [r7, #8]
 8003cda:	4313      	orrs	r3, r2
 8003cdc:	60bb      	str	r3, [r7, #8]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	68ba      	ldr	r2, [r7, #8]
 8003ce4:	609a      	str	r2, [r3, #8]
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	223d      	movs	r2, #61	@ 0x3d
 8003cea:	2101      	movs	r1, #1
 8003cec:	5499      	strb	r1, [r3, r2]
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	223c      	movs	r2, #60	@ 0x3c
 8003cf2:	2100      	movs	r1, #0
 8003cf4:	5499      	strb	r1, [r3, r2]
 8003cf6:	2300      	movs	r3, #0
 8003cf8:	0018      	movs	r0, r3
 8003cfa:	46bd      	mov	sp, r7
 8003cfc:	b004      	add	sp, #16
 8003cfe:	bd80      	pop	{r7, pc}
 8003d00:	40012c00 	.word	0x40012c00
 8003d04:	40000400 	.word	0x40000400
 8003d08:	40014000 	.word	0x40014000

08003d0c <HAL_TIMEx_CommutCallback>:
 8003d0c:	b580      	push	{r7, lr}
 8003d0e:	b082      	sub	sp, #8
 8003d10:	af00      	add	r7, sp, #0
 8003d12:	6078      	str	r0, [r7, #4]
 8003d14:	46c0      	nop			@ (mov r8, r8)
 8003d16:	46bd      	mov	sp, r7
 8003d18:	b002      	add	sp, #8
 8003d1a:	bd80      	pop	{r7, pc}

08003d1c <HAL_TIMEx_BreakCallback>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	b082      	sub	sp, #8
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	6078      	str	r0, [r7, #4]
 8003d24:	46c0      	nop			@ (mov r8, r8)
 8003d26:	46bd      	mov	sp, r7
 8003d28:	b002      	add	sp, #8
 8003d2a:	bd80      	pop	{r7, pc}

08003d2c <HAL_UART_Init>:
 8003d2c:	b580      	push	{r7, lr}
 8003d2e:	b082      	sub	sp, #8
 8003d30:	af00      	add	r7, sp, #0
 8003d32:	6078      	str	r0, [r7, #4]
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	d101      	bne.n	8003d3e <HAL_UART_Init+0x12>
 8003d3a:	2301      	movs	r3, #1
 8003d3c:	e044      	b.n	8003dc8 <HAL_UART_Init+0x9c>
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d107      	bne.n	8003d56 <HAL_UART_Init+0x2a>
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	2278      	movs	r2, #120	@ 0x78
 8003d4a:	2100      	movs	r1, #0
 8003d4c:	5499      	strb	r1, [r3, r2]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	0018      	movs	r0, r3
 8003d52:	f7fe f997 	bl	8002084 <HAL_UART_MspInit>
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	2224      	movs	r2, #36	@ 0x24
 8003d5a:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	681a      	ldr	r2, [r3, #0]
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	2101      	movs	r1, #1
 8003d68:	438a      	bics	r2, r1
 8003d6a:	601a      	str	r2, [r3, #0]
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d70:	2b00      	cmp	r3, #0
 8003d72:	d003      	beq.n	8003d7c <HAL_UART_Init+0x50>
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	0018      	movs	r0, r3
 8003d78:	f000 fa0c 	bl	8004194 <UART_AdvFeatureConfig>
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	0018      	movs	r0, r3
 8003d80:	f000 f8c8 	bl	8003f14 <UART_SetConfig>
 8003d84:	0003      	movs	r3, r0
 8003d86:	2b01      	cmp	r3, #1
 8003d88:	d101      	bne.n	8003d8e <HAL_UART_Init+0x62>
 8003d8a:	2301      	movs	r3, #1
 8003d8c:	e01c      	b.n	8003dc8 <HAL_UART_Init+0x9c>
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	681b      	ldr	r3, [r3, #0]
 8003d92:	685a      	ldr	r2, [r3, #4]
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	490d      	ldr	r1, [pc, #52]	@ (8003dd0 <HAL_UART_Init+0xa4>)
 8003d9a:	400a      	ands	r2, r1
 8003d9c:	605a      	str	r2, [r3, #4]
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	689a      	ldr	r2, [r3, #8]
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	2108      	movs	r1, #8
 8003daa:	438a      	bics	r2, r1
 8003dac:	609a      	str	r2, [r3, #8]
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	681a      	ldr	r2, [r3, #0]
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	681b      	ldr	r3, [r3, #0]
 8003db8:	2101      	movs	r1, #1
 8003dba:	430a      	orrs	r2, r1
 8003dbc:	601a      	str	r2, [r3, #0]
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	0018      	movs	r0, r3
 8003dc2:	f000 fa9b 	bl	80042fc <UART_CheckIdleState>
 8003dc6:	0003      	movs	r3, r0
 8003dc8:	0018      	movs	r0, r3
 8003dca:	46bd      	mov	sp, r7
 8003dcc:	b002      	add	sp, #8
 8003dce:	bd80      	pop	{r7, pc}
 8003dd0:	fffff7ff 	.word	0xfffff7ff

08003dd4 <HAL_UART_Transmit>:
 8003dd4:	b580      	push	{r7, lr}
 8003dd6:	b08a      	sub	sp, #40	@ 0x28
 8003dd8:	af02      	add	r7, sp, #8
 8003dda:	60f8      	str	r0, [r7, #12]
 8003ddc:	60b9      	str	r1, [r7, #8]
 8003dde:	603b      	str	r3, [r7, #0]
 8003de0:	1dbb      	adds	r3, r7, #6
 8003de2:	801a      	strh	r2, [r3, #0]
 8003de4:	68fb      	ldr	r3, [r7, #12]
 8003de6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003de8:	2b20      	cmp	r3, #32
 8003dea:	d000      	beq.n	8003dee <HAL_UART_Transmit+0x1a>
 8003dec:	e08c      	b.n	8003f08 <HAL_UART_Transmit+0x134>
 8003dee:	68bb      	ldr	r3, [r7, #8]
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d003      	beq.n	8003dfc <HAL_UART_Transmit+0x28>
 8003df4:	1dbb      	adds	r3, r7, #6
 8003df6:	881b      	ldrh	r3, [r3, #0]
 8003df8:	2b00      	cmp	r3, #0
 8003dfa:	d101      	bne.n	8003e00 <HAL_UART_Transmit+0x2c>
 8003dfc:	2301      	movs	r3, #1
 8003dfe:	e084      	b.n	8003f0a <HAL_UART_Transmit+0x136>
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	689a      	ldr	r2, [r3, #8]
 8003e04:	2380      	movs	r3, #128	@ 0x80
 8003e06:	015b      	lsls	r3, r3, #5
 8003e08:	429a      	cmp	r2, r3
 8003e0a:	d109      	bne.n	8003e20 <HAL_UART_Transmit+0x4c>
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	691b      	ldr	r3, [r3, #16]
 8003e10:	2b00      	cmp	r3, #0
 8003e12:	d105      	bne.n	8003e20 <HAL_UART_Transmit+0x4c>
 8003e14:	68bb      	ldr	r3, [r7, #8]
 8003e16:	2201      	movs	r2, #1
 8003e18:	4013      	ands	r3, r2
 8003e1a:	d001      	beq.n	8003e20 <HAL_UART_Transmit+0x4c>
 8003e1c:	2301      	movs	r3, #1
 8003e1e:	e074      	b.n	8003f0a <HAL_UART_Transmit+0x136>
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	2284      	movs	r2, #132	@ 0x84
 8003e24:	2100      	movs	r1, #0
 8003e26:	5099      	str	r1, [r3, r2]
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	2221      	movs	r2, #33	@ 0x21
 8003e2c:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003e2e:	f7fe f9f9 	bl	8002224 <HAL_GetTick>
 8003e32:	0003      	movs	r3, r0
 8003e34:	617b      	str	r3, [r7, #20]
 8003e36:	68fb      	ldr	r3, [r7, #12]
 8003e38:	1dba      	adds	r2, r7, #6
 8003e3a:	2150      	movs	r1, #80	@ 0x50
 8003e3c:	8812      	ldrh	r2, [r2, #0]
 8003e3e:	525a      	strh	r2, [r3, r1]
 8003e40:	68fb      	ldr	r3, [r7, #12]
 8003e42:	1dba      	adds	r2, r7, #6
 8003e44:	2152      	movs	r1, #82	@ 0x52
 8003e46:	8812      	ldrh	r2, [r2, #0]
 8003e48:	525a      	strh	r2, [r3, r1]
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	689a      	ldr	r2, [r3, #8]
 8003e4e:	2380      	movs	r3, #128	@ 0x80
 8003e50:	015b      	lsls	r3, r3, #5
 8003e52:	429a      	cmp	r2, r3
 8003e54:	d108      	bne.n	8003e68 <HAL_UART_Transmit+0x94>
 8003e56:	68fb      	ldr	r3, [r7, #12]
 8003e58:	691b      	ldr	r3, [r3, #16]
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	d104      	bne.n	8003e68 <HAL_UART_Transmit+0x94>
 8003e5e:	2300      	movs	r3, #0
 8003e60:	61fb      	str	r3, [r7, #28]
 8003e62:	68bb      	ldr	r3, [r7, #8]
 8003e64:	61bb      	str	r3, [r7, #24]
 8003e66:	e003      	b.n	8003e70 <HAL_UART_Transmit+0x9c>
 8003e68:	68bb      	ldr	r3, [r7, #8]
 8003e6a:	61fb      	str	r3, [r7, #28]
 8003e6c:	2300      	movs	r3, #0
 8003e6e:	61bb      	str	r3, [r7, #24]
 8003e70:	e02f      	b.n	8003ed2 <HAL_UART_Transmit+0xfe>
 8003e72:	697a      	ldr	r2, [r7, #20]
 8003e74:	68f8      	ldr	r0, [r7, #12]
 8003e76:	683b      	ldr	r3, [r7, #0]
 8003e78:	9300      	str	r3, [sp, #0]
 8003e7a:	0013      	movs	r3, r2
 8003e7c:	2200      	movs	r2, #0
 8003e7e:	2180      	movs	r1, #128	@ 0x80
 8003e80:	f000 fae4 	bl	800444c <UART_WaitOnFlagUntilTimeout>
 8003e84:	1e03      	subs	r3, r0, #0
 8003e86:	d004      	beq.n	8003e92 <HAL_UART_Transmit+0xbe>
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	2220      	movs	r2, #32
 8003e8c:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003e8e:	2303      	movs	r3, #3
 8003e90:	e03b      	b.n	8003f0a <HAL_UART_Transmit+0x136>
 8003e92:	69fb      	ldr	r3, [r7, #28]
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d10b      	bne.n	8003eb0 <HAL_UART_Transmit+0xdc>
 8003e98:	69bb      	ldr	r3, [r7, #24]
 8003e9a:	881a      	ldrh	r2, [r3, #0]
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	05d2      	lsls	r2, r2, #23
 8003ea2:	0dd2      	lsrs	r2, r2, #23
 8003ea4:	b292      	uxth	r2, r2
 8003ea6:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003ea8:	69bb      	ldr	r3, [r7, #24]
 8003eaa:	3302      	adds	r3, #2
 8003eac:	61bb      	str	r3, [r7, #24]
 8003eae:	e007      	b.n	8003ec0 <HAL_UART_Transmit+0xec>
 8003eb0:	69fb      	ldr	r3, [r7, #28]
 8003eb2:	781a      	ldrb	r2, [r3, #0]
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003eba:	69fb      	ldr	r3, [r7, #28]
 8003ebc:	3301      	adds	r3, #1
 8003ebe:	61fb      	str	r3, [r7, #28]
 8003ec0:	68fb      	ldr	r3, [r7, #12]
 8003ec2:	2252      	movs	r2, #82	@ 0x52
 8003ec4:	5a9b      	ldrh	r3, [r3, r2]
 8003ec6:	b29b      	uxth	r3, r3
 8003ec8:	3b01      	subs	r3, #1
 8003eca:	b299      	uxth	r1, r3
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	2252      	movs	r2, #82	@ 0x52
 8003ed0:	5299      	strh	r1, [r3, r2]
 8003ed2:	68fb      	ldr	r3, [r7, #12]
 8003ed4:	2252      	movs	r2, #82	@ 0x52
 8003ed6:	5a9b      	ldrh	r3, [r3, r2]
 8003ed8:	b29b      	uxth	r3, r3
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	d1c9      	bne.n	8003e72 <HAL_UART_Transmit+0x9e>
 8003ede:	697a      	ldr	r2, [r7, #20]
 8003ee0:	68f8      	ldr	r0, [r7, #12]
 8003ee2:	683b      	ldr	r3, [r7, #0]
 8003ee4:	9300      	str	r3, [sp, #0]
 8003ee6:	0013      	movs	r3, r2
 8003ee8:	2200      	movs	r2, #0
 8003eea:	2140      	movs	r1, #64	@ 0x40
 8003eec:	f000 faae 	bl	800444c <UART_WaitOnFlagUntilTimeout>
 8003ef0:	1e03      	subs	r3, r0, #0
 8003ef2:	d004      	beq.n	8003efe <HAL_UART_Transmit+0x12a>
 8003ef4:	68fb      	ldr	r3, [r7, #12]
 8003ef6:	2220      	movs	r2, #32
 8003ef8:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003efa:	2303      	movs	r3, #3
 8003efc:	e005      	b.n	8003f0a <HAL_UART_Transmit+0x136>
 8003efe:	68fb      	ldr	r3, [r7, #12]
 8003f00:	2220      	movs	r2, #32
 8003f02:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003f04:	2300      	movs	r3, #0
 8003f06:	e000      	b.n	8003f0a <HAL_UART_Transmit+0x136>
 8003f08:	2302      	movs	r3, #2
 8003f0a:	0018      	movs	r0, r3
 8003f0c:	46bd      	mov	sp, r7
 8003f0e:	b008      	add	sp, #32
 8003f10:	bd80      	pop	{r7, pc}
	...

08003f14 <UART_SetConfig>:
 8003f14:	b580      	push	{r7, lr}
 8003f16:	b088      	sub	sp, #32
 8003f18:	af00      	add	r7, sp, #0
 8003f1a:	6078      	str	r0, [r7, #4]
 8003f1c:	231e      	movs	r3, #30
 8003f1e:	18fb      	adds	r3, r7, r3
 8003f20:	2200      	movs	r2, #0
 8003f22:	701a      	strb	r2, [r3, #0]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	689a      	ldr	r2, [r3, #8]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	691b      	ldr	r3, [r3, #16]
 8003f2c:	431a      	orrs	r2, r3
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	695b      	ldr	r3, [r3, #20]
 8003f32:	431a      	orrs	r2, r3
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	69db      	ldr	r3, [r3, #28]
 8003f38:	4313      	orrs	r3, r2
 8003f3a:	617b      	str	r3, [r7, #20]
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	4a8d      	ldr	r2, [pc, #564]	@ (8004178 <UART_SetConfig+0x264>)
 8003f44:	4013      	ands	r3, r2
 8003f46:	0019      	movs	r1, r3
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	697a      	ldr	r2, [r7, #20]
 8003f4e:	430a      	orrs	r2, r1
 8003f50:	601a      	str	r2, [r3, #0]
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	685b      	ldr	r3, [r3, #4]
 8003f58:	4a88      	ldr	r2, [pc, #544]	@ (800417c <UART_SetConfig+0x268>)
 8003f5a:	4013      	ands	r3, r2
 8003f5c:	0019      	movs	r1, r3
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	68da      	ldr	r2, [r3, #12]
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	430a      	orrs	r2, r1
 8003f68:	605a      	str	r2, [r3, #4]
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	699b      	ldr	r3, [r3, #24]
 8003f6e:	617b      	str	r3, [r7, #20]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	6a1b      	ldr	r3, [r3, #32]
 8003f74:	697a      	ldr	r2, [r7, #20]
 8003f76:	4313      	orrs	r3, r2
 8003f78:	617b      	str	r3, [r7, #20]
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	689b      	ldr	r3, [r3, #8]
 8003f80:	4a7f      	ldr	r2, [pc, #508]	@ (8004180 <UART_SetConfig+0x26c>)
 8003f82:	4013      	ands	r3, r2
 8003f84:	0019      	movs	r1, r3
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	697a      	ldr	r2, [r7, #20]
 8003f8c:	430a      	orrs	r2, r1
 8003f8e:	609a      	str	r2, [r3, #8]
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	4a7b      	ldr	r2, [pc, #492]	@ (8004184 <UART_SetConfig+0x270>)
 8003f96:	4293      	cmp	r3, r2
 8003f98:	d127      	bne.n	8003fea <UART_SetConfig+0xd6>
 8003f9a:	4b7b      	ldr	r3, [pc, #492]	@ (8004188 <UART_SetConfig+0x274>)
 8003f9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003f9e:	2203      	movs	r2, #3
 8003fa0:	4013      	ands	r3, r2
 8003fa2:	2b03      	cmp	r3, #3
 8003fa4:	d00d      	beq.n	8003fc2 <UART_SetConfig+0xae>
 8003fa6:	d81b      	bhi.n	8003fe0 <UART_SetConfig+0xcc>
 8003fa8:	2b02      	cmp	r3, #2
 8003faa:	d014      	beq.n	8003fd6 <UART_SetConfig+0xc2>
 8003fac:	d818      	bhi.n	8003fe0 <UART_SetConfig+0xcc>
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	d002      	beq.n	8003fb8 <UART_SetConfig+0xa4>
 8003fb2:	2b01      	cmp	r3, #1
 8003fb4:	d00a      	beq.n	8003fcc <UART_SetConfig+0xb8>
 8003fb6:	e013      	b.n	8003fe0 <UART_SetConfig+0xcc>
 8003fb8:	231f      	movs	r3, #31
 8003fba:	18fb      	adds	r3, r7, r3
 8003fbc:	2200      	movs	r2, #0
 8003fbe:	701a      	strb	r2, [r3, #0]
 8003fc0:	e021      	b.n	8004006 <UART_SetConfig+0xf2>
 8003fc2:	231f      	movs	r3, #31
 8003fc4:	18fb      	adds	r3, r7, r3
 8003fc6:	2202      	movs	r2, #2
 8003fc8:	701a      	strb	r2, [r3, #0]
 8003fca:	e01c      	b.n	8004006 <UART_SetConfig+0xf2>
 8003fcc:	231f      	movs	r3, #31
 8003fce:	18fb      	adds	r3, r7, r3
 8003fd0:	2204      	movs	r2, #4
 8003fd2:	701a      	strb	r2, [r3, #0]
 8003fd4:	e017      	b.n	8004006 <UART_SetConfig+0xf2>
 8003fd6:	231f      	movs	r3, #31
 8003fd8:	18fb      	adds	r3, r7, r3
 8003fda:	2208      	movs	r2, #8
 8003fdc:	701a      	strb	r2, [r3, #0]
 8003fde:	e012      	b.n	8004006 <UART_SetConfig+0xf2>
 8003fe0:	231f      	movs	r3, #31
 8003fe2:	18fb      	adds	r3, r7, r3
 8003fe4:	2210      	movs	r2, #16
 8003fe6:	701a      	strb	r2, [r3, #0]
 8003fe8:	e00d      	b.n	8004006 <UART_SetConfig+0xf2>
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	4a67      	ldr	r2, [pc, #412]	@ (800418c <UART_SetConfig+0x278>)
 8003ff0:	4293      	cmp	r3, r2
 8003ff2:	d104      	bne.n	8003ffe <UART_SetConfig+0xea>
 8003ff4:	231f      	movs	r3, #31
 8003ff6:	18fb      	adds	r3, r7, r3
 8003ff8:	2200      	movs	r2, #0
 8003ffa:	701a      	strb	r2, [r3, #0]
 8003ffc:	e003      	b.n	8004006 <UART_SetConfig+0xf2>
 8003ffe:	231f      	movs	r3, #31
 8004000:	18fb      	adds	r3, r7, r3
 8004002:	2210      	movs	r2, #16
 8004004:	701a      	strb	r2, [r3, #0]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	69da      	ldr	r2, [r3, #28]
 800400a:	2380      	movs	r3, #128	@ 0x80
 800400c:	021b      	lsls	r3, r3, #8
 800400e:	429a      	cmp	r2, r3
 8004010:	d15c      	bne.n	80040cc <UART_SetConfig+0x1b8>
 8004012:	231f      	movs	r3, #31
 8004014:	18fb      	adds	r3, r7, r3
 8004016:	781b      	ldrb	r3, [r3, #0]
 8004018:	2b08      	cmp	r3, #8
 800401a:	d015      	beq.n	8004048 <UART_SetConfig+0x134>
 800401c:	dc18      	bgt.n	8004050 <UART_SetConfig+0x13c>
 800401e:	2b04      	cmp	r3, #4
 8004020:	d00d      	beq.n	800403e <UART_SetConfig+0x12a>
 8004022:	dc15      	bgt.n	8004050 <UART_SetConfig+0x13c>
 8004024:	2b00      	cmp	r3, #0
 8004026:	d002      	beq.n	800402e <UART_SetConfig+0x11a>
 8004028:	2b02      	cmp	r3, #2
 800402a:	d005      	beq.n	8004038 <UART_SetConfig+0x124>
 800402c:	e010      	b.n	8004050 <UART_SetConfig+0x13c>
 800402e:	f7ff fa1f 	bl	8003470 <HAL_RCC_GetPCLK1Freq>
 8004032:	0003      	movs	r3, r0
 8004034:	61bb      	str	r3, [r7, #24]
 8004036:	e012      	b.n	800405e <UART_SetConfig+0x14a>
 8004038:	4b55      	ldr	r3, [pc, #340]	@ (8004190 <UART_SetConfig+0x27c>)
 800403a:	61bb      	str	r3, [r7, #24]
 800403c:	e00f      	b.n	800405e <UART_SetConfig+0x14a>
 800403e:	f7ff f9b7 	bl	80033b0 <HAL_RCC_GetSysClockFreq>
 8004042:	0003      	movs	r3, r0
 8004044:	61bb      	str	r3, [r7, #24]
 8004046:	e00a      	b.n	800405e <UART_SetConfig+0x14a>
 8004048:	2380      	movs	r3, #128	@ 0x80
 800404a:	021b      	lsls	r3, r3, #8
 800404c:	61bb      	str	r3, [r7, #24]
 800404e:	e006      	b.n	800405e <UART_SetConfig+0x14a>
 8004050:	2300      	movs	r3, #0
 8004052:	61bb      	str	r3, [r7, #24]
 8004054:	231e      	movs	r3, #30
 8004056:	18fb      	adds	r3, r7, r3
 8004058:	2201      	movs	r2, #1
 800405a:	701a      	strb	r2, [r3, #0]
 800405c:	46c0      	nop			@ (mov r8, r8)
 800405e:	69bb      	ldr	r3, [r7, #24]
 8004060:	2b00      	cmp	r3, #0
 8004062:	d100      	bne.n	8004066 <UART_SetConfig+0x152>
 8004064:	e07a      	b.n	800415c <UART_SetConfig+0x248>
 8004066:	69bb      	ldr	r3, [r7, #24]
 8004068:	005a      	lsls	r2, r3, #1
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	685b      	ldr	r3, [r3, #4]
 800406e:	085b      	lsrs	r3, r3, #1
 8004070:	18d2      	adds	r2, r2, r3
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	685b      	ldr	r3, [r3, #4]
 8004076:	0019      	movs	r1, r3
 8004078:	0010      	movs	r0, r2
 800407a:	f7fc f84f 	bl	800011c <__udivsi3>
 800407e:	0003      	movs	r3, r0
 8004080:	613b      	str	r3, [r7, #16]
 8004082:	693b      	ldr	r3, [r7, #16]
 8004084:	2b0f      	cmp	r3, #15
 8004086:	d91c      	bls.n	80040c2 <UART_SetConfig+0x1ae>
 8004088:	693a      	ldr	r2, [r7, #16]
 800408a:	2380      	movs	r3, #128	@ 0x80
 800408c:	025b      	lsls	r3, r3, #9
 800408e:	429a      	cmp	r2, r3
 8004090:	d217      	bcs.n	80040c2 <UART_SetConfig+0x1ae>
 8004092:	693b      	ldr	r3, [r7, #16]
 8004094:	b29a      	uxth	r2, r3
 8004096:	200e      	movs	r0, #14
 8004098:	183b      	adds	r3, r7, r0
 800409a:	210f      	movs	r1, #15
 800409c:	438a      	bics	r2, r1
 800409e:	801a      	strh	r2, [r3, #0]
 80040a0:	693b      	ldr	r3, [r7, #16]
 80040a2:	085b      	lsrs	r3, r3, #1
 80040a4:	b29b      	uxth	r3, r3
 80040a6:	2207      	movs	r2, #7
 80040a8:	4013      	ands	r3, r2
 80040aa:	b299      	uxth	r1, r3
 80040ac:	183b      	adds	r3, r7, r0
 80040ae:	183a      	adds	r2, r7, r0
 80040b0:	8812      	ldrh	r2, [r2, #0]
 80040b2:	430a      	orrs	r2, r1
 80040b4:	801a      	strh	r2, [r3, #0]
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	183a      	adds	r2, r7, r0
 80040bc:	8812      	ldrh	r2, [r2, #0]
 80040be:	60da      	str	r2, [r3, #12]
 80040c0:	e04c      	b.n	800415c <UART_SetConfig+0x248>
 80040c2:	231e      	movs	r3, #30
 80040c4:	18fb      	adds	r3, r7, r3
 80040c6:	2201      	movs	r2, #1
 80040c8:	701a      	strb	r2, [r3, #0]
 80040ca:	e047      	b.n	800415c <UART_SetConfig+0x248>
 80040cc:	231f      	movs	r3, #31
 80040ce:	18fb      	adds	r3, r7, r3
 80040d0:	781b      	ldrb	r3, [r3, #0]
 80040d2:	2b08      	cmp	r3, #8
 80040d4:	d015      	beq.n	8004102 <UART_SetConfig+0x1ee>
 80040d6:	dc18      	bgt.n	800410a <UART_SetConfig+0x1f6>
 80040d8:	2b04      	cmp	r3, #4
 80040da:	d00d      	beq.n	80040f8 <UART_SetConfig+0x1e4>
 80040dc:	dc15      	bgt.n	800410a <UART_SetConfig+0x1f6>
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d002      	beq.n	80040e8 <UART_SetConfig+0x1d4>
 80040e2:	2b02      	cmp	r3, #2
 80040e4:	d005      	beq.n	80040f2 <UART_SetConfig+0x1de>
 80040e6:	e010      	b.n	800410a <UART_SetConfig+0x1f6>
 80040e8:	f7ff f9c2 	bl	8003470 <HAL_RCC_GetPCLK1Freq>
 80040ec:	0003      	movs	r3, r0
 80040ee:	61bb      	str	r3, [r7, #24]
 80040f0:	e012      	b.n	8004118 <UART_SetConfig+0x204>
 80040f2:	4b27      	ldr	r3, [pc, #156]	@ (8004190 <UART_SetConfig+0x27c>)
 80040f4:	61bb      	str	r3, [r7, #24]
 80040f6:	e00f      	b.n	8004118 <UART_SetConfig+0x204>
 80040f8:	f7ff f95a 	bl	80033b0 <HAL_RCC_GetSysClockFreq>
 80040fc:	0003      	movs	r3, r0
 80040fe:	61bb      	str	r3, [r7, #24]
 8004100:	e00a      	b.n	8004118 <UART_SetConfig+0x204>
 8004102:	2380      	movs	r3, #128	@ 0x80
 8004104:	021b      	lsls	r3, r3, #8
 8004106:	61bb      	str	r3, [r7, #24]
 8004108:	e006      	b.n	8004118 <UART_SetConfig+0x204>
 800410a:	2300      	movs	r3, #0
 800410c:	61bb      	str	r3, [r7, #24]
 800410e:	231e      	movs	r3, #30
 8004110:	18fb      	adds	r3, r7, r3
 8004112:	2201      	movs	r2, #1
 8004114:	701a      	strb	r2, [r3, #0]
 8004116:	46c0      	nop			@ (mov r8, r8)
 8004118:	69bb      	ldr	r3, [r7, #24]
 800411a:	2b00      	cmp	r3, #0
 800411c:	d01e      	beq.n	800415c <UART_SetConfig+0x248>
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	685b      	ldr	r3, [r3, #4]
 8004122:	085a      	lsrs	r2, r3, #1
 8004124:	69bb      	ldr	r3, [r7, #24]
 8004126:	18d2      	adds	r2, r2, r3
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	685b      	ldr	r3, [r3, #4]
 800412c:	0019      	movs	r1, r3
 800412e:	0010      	movs	r0, r2
 8004130:	f7fb fff4 	bl	800011c <__udivsi3>
 8004134:	0003      	movs	r3, r0
 8004136:	613b      	str	r3, [r7, #16]
 8004138:	693b      	ldr	r3, [r7, #16]
 800413a:	2b0f      	cmp	r3, #15
 800413c:	d90a      	bls.n	8004154 <UART_SetConfig+0x240>
 800413e:	693a      	ldr	r2, [r7, #16]
 8004140:	2380      	movs	r3, #128	@ 0x80
 8004142:	025b      	lsls	r3, r3, #9
 8004144:	429a      	cmp	r2, r3
 8004146:	d205      	bcs.n	8004154 <UART_SetConfig+0x240>
 8004148:	693b      	ldr	r3, [r7, #16]
 800414a:	b29a      	uxth	r2, r3
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	60da      	str	r2, [r3, #12]
 8004152:	e003      	b.n	800415c <UART_SetConfig+0x248>
 8004154:	231e      	movs	r3, #30
 8004156:	18fb      	adds	r3, r7, r3
 8004158:	2201      	movs	r2, #1
 800415a:	701a      	strb	r2, [r3, #0]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	2200      	movs	r2, #0
 8004160:	669a      	str	r2, [r3, #104]	@ 0x68
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	2200      	movs	r2, #0
 8004166:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004168:	231e      	movs	r3, #30
 800416a:	18fb      	adds	r3, r7, r3
 800416c:	781b      	ldrb	r3, [r3, #0]
 800416e:	0018      	movs	r0, r3
 8004170:	46bd      	mov	sp, r7
 8004172:	b008      	add	sp, #32
 8004174:	bd80      	pop	{r7, pc}
 8004176:	46c0      	nop			@ (mov r8, r8)
 8004178:	ffff69f3 	.word	0xffff69f3
 800417c:	ffffcfff 	.word	0xffffcfff
 8004180:	fffff4ff 	.word	0xfffff4ff
 8004184:	40013800 	.word	0x40013800
 8004188:	40021000 	.word	0x40021000
 800418c:	40004400 	.word	0x40004400
 8004190:	007a1200 	.word	0x007a1200

08004194 <UART_AdvFeatureConfig>:
 8004194:	b580      	push	{r7, lr}
 8004196:	b082      	sub	sp, #8
 8004198:	af00      	add	r7, sp, #0
 800419a:	6078      	str	r0, [r7, #4]
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041a0:	2208      	movs	r2, #8
 80041a2:	4013      	ands	r3, r2
 80041a4:	d00b      	beq.n	80041be <UART_AdvFeatureConfig+0x2a>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	685b      	ldr	r3, [r3, #4]
 80041ac:	4a4a      	ldr	r2, [pc, #296]	@ (80042d8 <UART_AdvFeatureConfig+0x144>)
 80041ae:	4013      	ands	r3, r2
 80041b0:	0019      	movs	r1, r3
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	430a      	orrs	r2, r1
 80041bc:	605a      	str	r2, [r3, #4]
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041c2:	2201      	movs	r2, #1
 80041c4:	4013      	ands	r3, r2
 80041c6:	d00b      	beq.n	80041e0 <UART_AdvFeatureConfig+0x4c>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	685b      	ldr	r3, [r3, #4]
 80041ce:	4a43      	ldr	r2, [pc, #268]	@ (80042dc <UART_AdvFeatureConfig+0x148>)
 80041d0:	4013      	ands	r3, r2
 80041d2:	0019      	movs	r1, r3
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	430a      	orrs	r2, r1
 80041de:	605a      	str	r2, [r3, #4]
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041e4:	2202      	movs	r2, #2
 80041e6:	4013      	ands	r3, r2
 80041e8:	d00b      	beq.n	8004202 <UART_AdvFeatureConfig+0x6e>
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	685b      	ldr	r3, [r3, #4]
 80041f0:	4a3b      	ldr	r2, [pc, #236]	@ (80042e0 <UART_AdvFeatureConfig+0x14c>)
 80041f2:	4013      	ands	r3, r2
 80041f4:	0019      	movs	r1, r3
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	430a      	orrs	r2, r1
 8004200:	605a      	str	r2, [r3, #4]
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004206:	2204      	movs	r2, #4
 8004208:	4013      	ands	r3, r2
 800420a:	d00b      	beq.n	8004224 <UART_AdvFeatureConfig+0x90>
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	685b      	ldr	r3, [r3, #4]
 8004212:	4a34      	ldr	r2, [pc, #208]	@ (80042e4 <UART_AdvFeatureConfig+0x150>)
 8004214:	4013      	ands	r3, r2
 8004216:	0019      	movs	r1, r3
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	430a      	orrs	r2, r1
 8004222:	605a      	str	r2, [r3, #4]
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004228:	2210      	movs	r2, #16
 800422a:	4013      	ands	r3, r2
 800422c:	d00b      	beq.n	8004246 <UART_AdvFeatureConfig+0xb2>
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	689b      	ldr	r3, [r3, #8]
 8004234:	4a2c      	ldr	r2, [pc, #176]	@ (80042e8 <UART_AdvFeatureConfig+0x154>)
 8004236:	4013      	ands	r3, r2
 8004238:	0019      	movs	r1, r3
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	430a      	orrs	r2, r1
 8004244:	609a      	str	r2, [r3, #8]
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800424a:	2220      	movs	r2, #32
 800424c:	4013      	ands	r3, r2
 800424e:	d00b      	beq.n	8004268 <UART_AdvFeatureConfig+0xd4>
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	689b      	ldr	r3, [r3, #8]
 8004256:	4a25      	ldr	r2, [pc, #148]	@ (80042ec <UART_AdvFeatureConfig+0x158>)
 8004258:	4013      	ands	r3, r2
 800425a:	0019      	movs	r1, r3
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	430a      	orrs	r2, r1
 8004266:	609a      	str	r2, [r3, #8]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800426c:	2240      	movs	r2, #64	@ 0x40
 800426e:	4013      	ands	r3, r2
 8004270:	d01d      	beq.n	80042ae <UART_AdvFeatureConfig+0x11a>
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	685b      	ldr	r3, [r3, #4]
 8004278:	4a1d      	ldr	r2, [pc, #116]	@ (80042f0 <UART_AdvFeatureConfig+0x15c>)
 800427a:	4013      	ands	r3, r2
 800427c:	0019      	movs	r1, r3
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	430a      	orrs	r2, r1
 8004288:	605a      	str	r2, [r3, #4]
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800428e:	2380      	movs	r3, #128	@ 0x80
 8004290:	035b      	lsls	r3, r3, #13
 8004292:	429a      	cmp	r2, r3
 8004294:	d10b      	bne.n	80042ae <UART_AdvFeatureConfig+0x11a>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	685b      	ldr	r3, [r3, #4]
 800429c:	4a15      	ldr	r2, [pc, #84]	@ (80042f4 <UART_AdvFeatureConfig+0x160>)
 800429e:	4013      	ands	r3, r2
 80042a0:	0019      	movs	r1, r3
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	430a      	orrs	r2, r1
 80042ac:	605a      	str	r2, [r3, #4]
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042b2:	2280      	movs	r2, #128	@ 0x80
 80042b4:	4013      	ands	r3, r2
 80042b6:	d00b      	beq.n	80042d0 <UART_AdvFeatureConfig+0x13c>
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	685b      	ldr	r3, [r3, #4]
 80042be:	4a0e      	ldr	r2, [pc, #56]	@ (80042f8 <UART_AdvFeatureConfig+0x164>)
 80042c0:	4013      	ands	r3, r2
 80042c2:	0019      	movs	r1, r3
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	430a      	orrs	r2, r1
 80042ce:	605a      	str	r2, [r3, #4]
 80042d0:	46c0      	nop			@ (mov r8, r8)
 80042d2:	46bd      	mov	sp, r7
 80042d4:	b002      	add	sp, #8
 80042d6:	bd80      	pop	{r7, pc}
 80042d8:	ffff7fff 	.word	0xffff7fff
 80042dc:	fffdffff 	.word	0xfffdffff
 80042e0:	fffeffff 	.word	0xfffeffff
 80042e4:	fffbffff 	.word	0xfffbffff
 80042e8:	ffffefff 	.word	0xffffefff
 80042ec:	ffffdfff 	.word	0xffffdfff
 80042f0:	ffefffff 	.word	0xffefffff
 80042f4:	ff9fffff 	.word	0xff9fffff
 80042f8:	fff7ffff 	.word	0xfff7ffff

080042fc <UART_CheckIdleState>:
 80042fc:	b580      	push	{r7, lr}
 80042fe:	b092      	sub	sp, #72	@ 0x48
 8004300:	af02      	add	r7, sp, #8
 8004302:	6078      	str	r0, [r7, #4]
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	2284      	movs	r2, #132	@ 0x84
 8004308:	2100      	movs	r1, #0
 800430a:	5099      	str	r1, [r3, r2]
 800430c:	f7fd ff8a 	bl	8002224 <HAL_GetTick>
 8004310:	0003      	movs	r3, r0
 8004312:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	2208      	movs	r2, #8
 800431c:	4013      	ands	r3, r2
 800431e:	2b08      	cmp	r3, #8
 8004320:	d12c      	bne.n	800437c <UART_CheckIdleState+0x80>
 8004322:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004324:	2280      	movs	r2, #128	@ 0x80
 8004326:	0391      	lsls	r1, r2, #14
 8004328:	6878      	ldr	r0, [r7, #4]
 800432a:	4a46      	ldr	r2, [pc, #280]	@ (8004444 <UART_CheckIdleState+0x148>)
 800432c:	9200      	str	r2, [sp, #0]
 800432e:	2200      	movs	r2, #0
 8004330:	f000 f88c 	bl	800444c <UART_WaitOnFlagUntilTimeout>
 8004334:	1e03      	subs	r3, r0, #0
 8004336:	d021      	beq.n	800437c <UART_CheckIdleState+0x80>
 8004338:	f3ef 8310 	mrs	r3, PRIMASK
 800433c:	627b      	str	r3, [r7, #36]	@ 0x24
 800433e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004340:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004342:	2301      	movs	r3, #1
 8004344:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004346:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004348:	f383 8810 	msr	PRIMASK, r3
 800434c:	46c0      	nop			@ (mov r8, r8)
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	681a      	ldr	r2, [r3, #0]
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	2180      	movs	r1, #128	@ 0x80
 800435a:	438a      	bics	r2, r1
 800435c:	601a      	str	r2, [r3, #0]
 800435e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004360:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004362:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004364:	f383 8810 	msr	PRIMASK, r3
 8004368:	46c0      	nop			@ (mov r8, r8)
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	2220      	movs	r2, #32
 800436e:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	2278      	movs	r2, #120	@ 0x78
 8004374:	2100      	movs	r1, #0
 8004376:	5499      	strb	r1, [r3, r2]
 8004378:	2303      	movs	r3, #3
 800437a:	e05f      	b.n	800443c <UART_CheckIdleState+0x140>
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	2204      	movs	r2, #4
 8004384:	4013      	ands	r3, r2
 8004386:	2b04      	cmp	r3, #4
 8004388:	d146      	bne.n	8004418 <UART_CheckIdleState+0x11c>
 800438a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800438c:	2280      	movs	r2, #128	@ 0x80
 800438e:	03d1      	lsls	r1, r2, #15
 8004390:	6878      	ldr	r0, [r7, #4]
 8004392:	4a2c      	ldr	r2, [pc, #176]	@ (8004444 <UART_CheckIdleState+0x148>)
 8004394:	9200      	str	r2, [sp, #0]
 8004396:	2200      	movs	r2, #0
 8004398:	f000 f858 	bl	800444c <UART_WaitOnFlagUntilTimeout>
 800439c:	1e03      	subs	r3, r0, #0
 800439e:	d03b      	beq.n	8004418 <UART_CheckIdleState+0x11c>
 80043a0:	f3ef 8310 	mrs	r3, PRIMASK
 80043a4:	60fb      	str	r3, [r7, #12]
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	637b      	str	r3, [r7, #52]	@ 0x34
 80043aa:	2301      	movs	r3, #1
 80043ac:	613b      	str	r3, [r7, #16]
 80043ae:	693b      	ldr	r3, [r7, #16]
 80043b0:	f383 8810 	msr	PRIMASK, r3
 80043b4:	46c0      	nop			@ (mov r8, r8)
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	681a      	ldr	r2, [r3, #0]
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	4921      	ldr	r1, [pc, #132]	@ (8004448 <UART_CheckIdleState+0x14c>)
 80043c2:	400a      	ands	r2, r1
 80043c4:	601a      	str	r2, [r3, #0]
 80043c6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80043c8:	617b      	str	r3, [r7, #20]
 80043ca:	697b      	ldr	r3, [r7, #20]
 80043cc:	f383 8810 	msr	PRIMASK, r3
 80043d0:	46c0      	nop			@ (mov r8, r8)
 80043d2:	f3ef 8310 	mrs	r3, PRIMASK
 80043d6:	61bb      	str	r3, [r7, #24]
 80043d8:	69bb      	ldr	r3, [r7, #24]
 80043da:	633b      	str	r3, [r7, #48]	@ 0x30
 80043dc:	2301      	movs	r3, #1
 80043de:	61fb      	str	r3, [r7, #28]
 80043e0:	69fb      	ldr	r3, [r7, #28]
 80043e2:	f383 8810 	msr	PRIMASK, r3
 80043e6:	46c0      	nop			@ (mov r8, r8)
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	689a      	ldr	r2, [r3, #8]
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	2101      	movs	r1, #1
 80043f4:	438a      	bics	r2, r1
 80043f6:	609a      	str	r2, [r3, #8]
 80043f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80043fa:	623b      	str	r3, [r7, #32]
 80043fc:	6a3b      	ldr	r3, [r7, #32]
 80043fe:	f383 8810 	msr	PRIMASK, r3
 8004402:	46c0      	nop			@ (mov r8, r8)
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	2280      	movs	r2, #128	@ 0x80
 8004408:	2120      	movs	r1, #32
 800440a:	5099      	str	r1, [r3, r2]
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	2278      	movs	r2, #120	@ 0x78
 8004410:	2100      	movs	r1, #0
 8004412:	5499      	strb	r1, [r3, r2]
 8004414:	2303      	movs	r3, #3
 8004416:	e011      	b.n	800443c <UART_CheckIdleState+0x140>
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	2220      	movs	r2, #32
 800441c:	67da      	str	r2, [r3, #124]	@ 0x7c
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	2280      	movs	r2, #128	@ 0x80
 8004422:	2120      	movs	r1, #32
 8004424:	5099      	str	r1, [r3, r2]
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	2200      	movs	r2, #0
 800442a:	661a      	str	r2, [r3, #96]	@ 0x60
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	2200      	movs	r2, #0
 8004430:	665a      	str	r2, [r3, #100]	@ 0x64
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	2278      	movs	r2, #120	@ 0x78
 8004436:	2100      	movs	r1, #0
 8004438:	5499      	strb	r1, [r3, r2]
 800443a:	2300      	movs	r3, #0
 800443c:	0018      	movs	r0, r3
 800443e:	46bd      	mov	sp, r7
 8004440:	b010      	add	sp, #64	@ 0x40
 8004442:	bd80      	pop	{r7, pc}
 8004444:	01ffffff 	.word	0x01ffffff
 8004448:	fffffedf 	.word	0xfffffedf

0800444c <UART_WaitOnFlagUntilTimeout>:
 800444c:	b580      	push	{r7, lr}
 800444e:	b084      	sub	sp, #16
 8004450:	af00      	add	r7, sp, #0
 8004452:	60f8      	str	r0, [r7, #12]
 8004454:	60b9      	str	r1, [r7, #8]
 8004456:	603b      	str	r3, [r7, #0]
 8004458:	1dfb      	adds	r3, r7, #7
 800445a:	701a      	strb	r2, [r3, #0]
 800445c:	e051      	b.n	8004502 <UART_WaitOnFlagUntilTimeout+0xb6>
 800445e:	69bb      	ldr	r3, [r7, #24]
 8004460:	3301      	adds	r3, #1
 8004462:	d04e      	beq.n	8004502 <UART_WaitOnFlagUntilTimeout+0xb6>
 8004464:	f7fd fede 	bl	8002224 <HAL_GetTick>
 8004468:	0002      	movs	r2, r0
 800446a:	683b      	ldr	r3, [r7, #0]
 800446c:	1ad3      	subs	r3, r2, r3
 800446e:	69ba      	ldr	r2, [r7, #24]
 8004470:	429a      	cmp	r2, r3
 8004472:	d302      	bcc.n	800447a <UART_WaitOnFlagUntilTimeout+0x2e>
 8004474:	69bb      	ldr	r3, [r7, #24]
 8004476:	2b00      	cmp	r3, #0
 8004478:	d101      	bne.n	800447e <UART_WaitOnFlagUntilTimeout+0x32>
 800447a:	2303      	movs	r3, #3
 800447c:	e051      	b.n	8004522 <UART_WaitOnFlagUntilTimeout+0xd6>
 800447e:	68fb      	ldr	r3, [r7, #12]
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	2204      	movs	r2, #4
 8004486:	4013      	ands	r3, r2
 8004488:	d03b      	beq.n	8004502 <UART_WaitOnFlagUntilTimeout+0xb6>
 800448a:	68bb      	ldr	r3, [r7, #8]
 800448c:	2b80      	cmp	r3, #128	@ 0x80
 800448e:	d038      	beq.n	8004502 <UART_WaitOnFlagUntilTimeout+0xb6>
 8004490:	68bb      	ldr	r3, [r7, #8]
 8004492:	2b40      	cmp	r3, #64	@ 0x40
 8004494:	d035      	beq.n	8004502 <UART_WaitOnFlagUntilTimeout+0xb6>
 8004496:	68fb      	ldr	r3, [r7, #12]
 8004498:	681b      	ldr	r3, [r3, #0]
 800449a:	69db      	ldr	r3, [r3, #28]
 800449c:	2208      	movs	r2, #8
 800449e:	4013      	ands	r3, r2
 80044a0:	2b08      	cmp	r3, #8
 80044a2:	d111      	bne.n	80044c8 <UART_WaitOnFlagUntilTimeout+0x7c>
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	2208      	movs	r2, #8
 80044aa:	621a      	str	r2, [r3, #32]
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	0018      	movs	r0, r3
 80044b0:	f000 f83c 	bl	800452c <UART_EndRxTransfer>
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	2284      	movs	r2, #132	@ 0x84
 80044b8:	2108      	movs	r1, #8
 80044ba:	5099      	str	r1, [r3, r2]
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	2278      	movs	r2, #120	@ 0x78
 80044c0:	2100      	movs	r1, #0
 80044c2:	5499      	strb	r1, [r3, r2]
 80044c4:	2301      	movs	r3, #1
 80044c6:	e02c      	b.n	8004522 <UART_WaitOnFlagUntilTimeout+0xd6>
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	681b      	ldr	r3, [r3, #0]
 80044cc:	69da      	ldr	r2, [r3, #28]
 80044ce:	2380      	movs	r3, #128	@ 0x80
 80044d0:	011b      	lsls	r3, r3, #4
 80044d2:	401a      	ands	r2, r3
 80044d4:	2380      	movs	r3, #128	@ 0x80
 80044d6:	011b      	lsls	r3, r3, #4
 80044d8:	429a      	cmp	r2, r3
 80044da:	d112      	bne.n	8004502 <UART_WaitOnFlagUntilTimeout+0xb6>
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	2280      	movs	r2, #128	@ 0x80
 80044e2:	0112      	lsls	r2, r2, #4
 80044e4:	621a      	str	r2, [r3, #32]
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	0018      	movs	r0, r3
 80044ea:	f000 f81f 	bl	800452c <UART_EndRxTransfer>
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	2284      	movs	r2, #132	@ 0x84
 80044f2:	2120      	movs	r1, #32
 80044f4:	5099      	str	r1, [r3, r2]
 80044f6:	68fb      	ldr	r3, [r7, #12]
 80044f8:	2278      	movs	r2, #120	@ 0x78
 80044fa:	2100      	movs	r1, #0
 80044fc:	5499      	strb	r1, [r3, r2]
 80044fe:	2303      	movs	r3, #3
 8004500:	e00f      	b.n	8004522 <UART_WaitOnFlagUntilTimeout+0xd6>
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	69db      	ldr	r3, [r3, #28]
 8004508:	68ba      	ldr	r2, [r7, #8]
 800450a:	4013      	ands	r3, r2
 800450c:	68ba      	ldr	r2, [r7, #8]
 800450e:	1ad3      	subs	r3, r2, r3
 8004510:	425a      	negs	r2, r3
 8004512:	4153      	adcs	r3, r2
 8004514:	b2db      	uxtb	r3, r3
 8004516:	001a      	movs	r2, r3
 8004518:	1dfb      	adds	r3, r7, #7
 800451a:	781b      	ldrb	r3, [r3, #0]
 800451c:	429a      	cmp	r2, r3
 800451e:	d09e      	beq.n	800445e <UART_WaitOnFlagUntilTimeout+0x12>
 8004520:	2300      	movs	r3, #0
 8004522:	0018      	movs	r0, r3
 8004524:	46bd      	mov	sp, r7
 8004526:	b004      	add	sp, #16
 8004528:	bd80      	pop	{r7, pc}
	...

0800452c <UART_EndRxTransfer>:
 800452c:	b580      	push	{r7, lr}
 800452e:	b08e      	sub	sp, #56	@ 0x38
 8004530:	af00      	add	r7, sp, #0
 8004532:	6078      	str	r0, [r7, #4]
 8004534:	f3ef 8310 	mrs	r3, PRIMASK
 8004538:	617b      	str	r3, [r7, #20]
 800453a:	697b      	ldr	r3, [r7, #20]
 800453c:	637b      	str	r3, [r7, #52]	@ 0x34
 800453e:	2301      	movs	r3, #1
 8004540:	61bb      	str	r3, [r7, #24]
 8004542:	69bb      	ldr	r3, [r7, #24]
 8004544:	f383 8810 	msr	PRIMASK, r3
 8004548:	46c0      	nop			@ (mov r8, r8)
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	681a      	ldr	r2, [r3, #0]
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	4926      	ldr	r1, [pc, #152]	@ (80045f0 <UART_EndRxTransfer+0xc4>)
 8004556:	400a      	ands	r2, r1
 8004558:	601a      	str	r2, [r3, #0]
 800455a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800455c:	61fb      	str	r3, [r7, #28]
 800455e:	69fb      	ldr	r3, [r7, #28]
 8004560:	f383 8810 	msr	PRIMASK, r3
 8004564:	46c0      	nop			@ (mov r8, r8)
 8004566:	f3ef 8310 	mrs	r3, PRIMASK
 800456a:	623b      	str	r3, [r7, #32]
 800456c:	6a3b      	ldr	r3, [r7, #32]
 800456e:	633b      	str	r3, [r7, #48]	@ 0x30
 8004570:	2301      	movs	r3, #1
 8004572:	627b      	str	r3, [r7, #36]	@ 0x24
 8004574:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004576:	f383 8810 	msr	PRIMASK, r3
 800457a:	46c0      	nop			@ (mov r8, r8)
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	689a      	ldr	r2, [r3, #8]
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	2101      	movs	r1, #1
 8004588:	438a      	bics	r2, r1
 800458a:	609a      	str	r2, [r3, #8]
 800458c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800458e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004590:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004592:	f383 8810 	msr	PRIMASK, r3
 8004596:	46c0      	nop			@ (mov r8, r8)
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800459c:	2b01      	cmp	r3, #1
 800459e:	d118      	bne.n	80045d2 <UART_EndRxTransfer+0xa6>
 80045a0:	f3ef 8310 	mrs	r3, PRIMASK
 80045a4:	60bb      	str	r3, [r7, #8]
 80045a6:	68bb      	ldr	r3, [r7, #8]
 80045a8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80045aa:	2301      	movs	r3, #1
 80045ac:	60fb      	str	r3, [r7, #12]
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	f383 8810 	msr	PRIMASK, r3
 80045b4:	46c0      	nop			@ (mov r8, r8)
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	681a      	ldr	r2, [r3, #0]
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	2110      	movs	r1, #16
 80045c2:	438a      	bics	r2, r1
 80045c4:	601a      	str	r2, [r3, #0]
 80045c6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80045c8:	613b      	str	r3, [r7, #16]
 80045ca:	693b      	ldr	r3, [r7, #16]
 80045cc:	f383 8810 	msr	PRIMASK, r3
 80045d0:	46c0      	nop			@ (mov r8, r8)
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	2280      	movs	r2, #128	@ 0x80
 80045d6:	2120      	movs	r1, #32
 80045d8:	5099      	str	r1, [r3, r2]
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	2200      	movs	r2, #0
 80045de:	661a      	str	r2, [r3, #96]	@ 0x60
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	2200      	movs	r2, #0
 80045e4:	669a      	str	r2, [r3, #104]	@ 0x68
 80045e6:	46c0      	nop			@ (mov r8, r8)
 80045e8:	46bd      	mov	sp, r7
 80045ea:	b00e      	add	sp, #56	@ 0x38
 80045ec:	bd80      	pop	{r7, pc}
 80045ee:	46c0      	nop			@ (mov r8, r8)
 80045f0:	fffffedf 	.word	0xfffffedf

080045f4 <srand>:
 80045f4:	4b11      	ldr	r3, [pc, #68]	@ (800463c <srand+0x48>)
 80045f6:	b570      	push	{r4, r5, r6, lr}
 80045f8:	681d      	ldr	r5, [r3, #0]
 80045fa:	0004      	movs	r4, r0
 80045fc:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80045fe:	2b00      	cmp	r3, #0
 8004600:	d116      	bne.n	8004630 <srand+0x3c>
 8004602:	2018      	movs	r0, #24
 8004604:	f000 fa76 	bl	8004af4 <malloc>
 8004608:	1e02      	subs	r2, r0, #0
 800460a:	6328      	str	r0, [r5, #48]	@ 0x30
 800460c:	d104      	bne.n	8004618 <srand+0x24>
 800460e:	2146      	movs	r1, #70	@ 0x46
 8004610:	4b0b      	ldr	r3, [pc, #44]	@ (8004640 <srand+0x4c>)
 8004612:	480c      	ldr	r0, [pc, #48]	@ (8004644 <srand+0x50>)
 8004614:	f000 fa06 	bl	8004a24 <__assert_func>
 8004618:	4b0b      	ldr	r3, [pc, #44]	@ (8004648 <srand+0x54>)
 800461a:	2100      	movs	r1, #0
 800461c:	6003      	str	r3, [r0, #0]
 800461e:	4b0b      	ldr	r3, [pc, #44]	@ (800464c <srand+0x58>)
 8004620:	6043      	str	r3, [r0, #4]
 8004622:	4b0b      	ldr	r3, [pc, #44]	@ (8004650 <srand+0x5c>)
 8004624:	6083      	str	r3, [r0, #8]
 8004626:	230b      	movs	r3, #11
 8004628:	8183      	strh	r3, [r0, #12]
 800462a:	2001      	movs	r0, #1
 800462c:	6110      	str	r0, [r2, #16]
 800462e:	6151      	str	r1, [r2, #20]
 8004630:	2200      	movs	r2, #0
 8004632:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8004634:	611c      	str	r4, [r3, #16]
 8004636:	615a      	str	r2, [r3, #20]
 8004638:	bd70      	pop	{r4, r5, r6, pc}
 800463a:	46c0      	nop			@ (mov r8, r8)
 800463c:	2000002c 	.word	0x2000002c
 8004640:	08005700 	.word	0x08005700
 8004644:	08005717 	.word	0x08005717
 8004648:	abcd330e 	.word	0xabcd330e
 800464c:	e66d1234 	.word	0xe66d1234
 8004650:	0005deec 	.word	0x0005deec

08004654 <rand>:
 8004654:	4b16      	ldr	r3, [pc, #88]	@ (80046b0 <rand+0x5c>)
 8004656:	b510      	push	{r4, lr}
 8004658:	681c      	ldr	r4, [r3, #0]
 800465a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800465c:	2b00      	cmp	r3, #0
 800465e:	d116      	bne.n	800468e <rand+0x3a>
 8004660:	2018      	movs	r0, #24
 8004662:	f000 fa47 	bl	8004af4 <malloc>
 8004666:	1e02      	subs	r2, r0, #0
 8004668:	6320      	str	r0, [r4, #48]	@ 0x30
 800466a:	d104      	bne.n	8004676 <rand+0x22>
 800466c:	2152      	movs	r1, #82	@ 0x52
 800466e:	4b11      	ldr	r3, [pc, #68]	@ (80046b4 <rand+0x60>)
 8004670:	4811      	ldr	r0, [pc, #68]	@ (80046b8 <rand+0x64>)
 8004672:	f000 f9d7 	bl	8004a24 <__assert_func>
 8004676:	4b11      	ldr	r3, [pc, #68]	@ (80046bc <rand+0x68>)
 8004678:	2100      	movs	r1, #0
 800467a:	6003      	str	r3, [r0, #0]
 800467c:	4b10      	ldr	r3, [pc, #64]	@ (80046c0 <rand+0x6c>)
 800467e:	6043      	str	r3, [r0, #4]
 8004680:	4b10      	ldr	r3, [pc, #64]	@ (80046c4 <rand+0x70>)
 8004682:	6083      	str	r3, [r0, #8]
 8004684:	230b      	movs	r3, #11
 8004686:	8183      	strh	r3, [r0, #12]
 8004688:	2001      	movs	r0, #1
 800468a:	6110      	str	r0, [r2, #16]
 800468c:	6151      	str	r1, [r2, #20]
 800468e:	6b24      	ldr	r4, [r4, #48]	@ 0x30
 8004690:	4a0d      	ldr	r2, [pc, #52]	@ (80046c8 <rand+0x74>)
 8004692:	6920      	ldr	r0, [r4, #16]
 8004694:	6961      	ldr	r1, [r4, #20]
 8004696:	4b0d      	ldr	r3, [pc, #52]	@ (80046cc <rand+0x78>)
 8004698:	f7fb feb6 	bl	8000408 <__aeabi_lmul>
 800469c:	2201      	movs	r2, #1
 800469e:	2300      	movs	r3, #0
 80046a0:	1880      	adds	r0, r0, r2
 80046a2:	4159      	adcs	r1, r3
 80046a4:	6120      	str	r0, [r4, #16]
 80046a6:	6161      	str	r1, [r4, #20]
 80046a8:	0048      	lsls	r0, r1, #1
 80046aa:	0840      	lsrs	r0, r0, #1
 80046ac:	bd10      	pop	{r4, pc}
 80046ae:	46c0      	nop			@ (mov r8, r8)
 80046b0:	2000002c 	.word	0x2000002c
 80046b4:	08005700 	.word	0x08005700
 80046b8:	08005717 	.word	0x08005717
 80046bc:	abcd330e 	.word	0xabcd330e
 80046c0:	e66d1234 	.word	0xe66d1234
 80046c4:	0005deec 	.word	0x0005deec
 80046c8:	4c957f2d 	.word	0x4c957f2d
 80046cc:	5851f42d 	.word	0x5851f42d

080046d0 <std>:
 80046d0:	2300      	movs	r3, #0
 80046d2:	b510      	push	{r4, lr}
 80046d4:	0004      	movs	r4, r0
 80046d6:	6003      	str	r3, [r0, #0]
 80046d8:	6043      	str	r3, [r0, #4]
 80046da:	6083      	str	r3, [r0, #8]
 80046dc:	8181      	strh	r1, [r0, #12]
 80046de:	6643      	str	r3, [r0, #100]	@ 0x64
 80046e0:	81c2      	strh	r2, [r0, #14]
 80046e2:	6103      	str	r3, [r0, #16]
 80046e4:	6143      	str	r3, [r0, #20]
 80046e6:	6183      	str	r3, [r0, #24]
 80046e8:	0019      	movs	r1, r3
 80046ea:	2208      	movs	r2, #8
 80046ec:	305c      	adds	r0, #92	@ 0x5c
 80046ee:	f000 f90d 	bl	800490c <memset>
 80046f2:	4b0b      	ldr	r3, [pc, #44]	@ (8004720 <std+0x50>)
 80046f4:	6224      	str	r4, [r4, #32]
 80046f6:	6263      	str	r3, [r4, #36]	@ 0x24
 80046f8:	4b0a      	ldr	r3, [pc, #40]	@ (8004724 <std+0x54>)
 80046fa:	62a3      	str	r3, [r4, #40]	@ 0x28
 80046fc:	4b0a      	ldr	r3, [pc, #40]	@ (8004728 <std+0x58>)
 80046fe:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8004700:	4b0a      	ldr	r3, [pc, #40]	@ (800472c <std+0x5c>)
 8004702:	6323      	str	r3, [r4, #48]	@ 0x30
 8004704:	4b0a      	ldr	r3, [pc, #40]	@ (8004730 <std+0x60>)
 8004706:	429c      	cmp	r4, r3
 8004708:	d005      	beq.n	8004716 <std+0x46>
 800470a:	4b0a      	ldr	r3, [pc, #40]	@ (8004734 <std+0x64>)
 800470c:	429c      	cmp	r4, r3
 800470e:	d002      	beq.n	8004716 <std+0x46>
 8004710:	4b09      	ldr	r3, [pc, #36]	@ (8004738 <std+0x68>)
 8004712:	429c      	cmp	r4, r3
 8004714:	d103      	bne.n	800471e <std+0x4e>
 8004716:	0020      	movs	r0, r4
 8004718:	3058      	adds	r0, #88	@ 0x58
 800471a:	f000 f977 	bl	8004a0c <__retarget_lock_init_recursive>
 800471e:	bd10      	pop	{r4, pc}
 8004720:	08004859 	.word	0x08004859
 8004724:	08004881 	.word	0x08004881
 8004728:	080048b9 	.word	0x080048b9
 800472c:	080048e5 	.word	0x080048e5
 8004730:	200002e0 	.word	0x200002e0
 8004734:	20000348 	.word	0x20000348
 8004738:	200003b0 	.word	0x200003b0

0800473c <stdio_exit_handler>:
 800473c:	b510      	push	{r4, lr}
 800473e:	4a03      	ldr	r2, [pc, #12]	@ (800474c <stdio_exit_handler+0x10>)
 8004740:	4903      	ldr	r1, [pc, #12]	@ (8004750 <stdio_exit_handler+0x14>)
 8004742:	4804      	ldr	r0, [pc, #16]	@ (8004754 <stdio_exit_handler+0x18>)
 8004744:	f000 f86c 	bl	8004820 <_fwalk_sglue>
 8004748:	bd10      	pop	{r4, pc}
 800474a:	46c0      	nop			@ (mov r8, r8)
 800474c:	20000020 	.word	0x20000020
 8004750:	08004d79 	.word	0x08004d79
 8004754:	20000030 	.word	0x20000030

08004758 <cleanup_stdio>:
 8004758:	6841      	ldr	r1, [r0, #4]
 800475a:	4b0b      	ldr	r3, [pc, #44]	@ (8004788 <cleanup_stdio+0x30>)
 800475c:	b510      	push	{r4, lr}
 800475e:	0004      	movs	r4, r0
 8004760:	4299      	cmp	r1, r3
 8004762:	d001      	beq.n	8004768 <cleanup_stdio+0x10>
 8004764:	f000 fb08 	bl	8004d78 <_fflush_r>
 8004768:	68a1      	ldr	r1, [r4, #8]
 800476a:	4b08      	ldr	r3, [pc, #32]	@ (800478c <cleanup_stdio+0x34>)
 800476c:	4299      	cmp	r1, r3
 800476e:	d002      	beq.n	8004776 <cleanup_stdio+0x1e>
 8004770:	0020      	movs	r0, r4
 8004772:	f000 fb01 	bl	8004d78 <_fflush_r>
 8004776:	68e1      	ldr	r1, [r4, #12]
 8004778:	4b05      	ldr	r3, [pc, #20]	@ (8004790 <cleanup_stdio+0x38>)
 800477a:	4299      	cmp	r1, r3
 800477c:	d002      	beq.n	8004784 <cleanup_stdio+0x2c>
 800477e:	0020      	movs	r0, r4
 8004780:	f000 fafa 	bl	8004d78 <_fflush_r>
 8004784:	bd10      	pop	{r4, pc}
 8004786:	46c0      	nop			@ (mov r8, r8)
 8004788:	200002e0 	.word	0x200002e0
 800478c:	20000348 	.word	0x20000348
 8004790:	200003b0 	.word	0x200003b0

08004794 <global_stdio_init.part.0>:
 8004794:	b510      	push	{r4, lr}
 8004796:	4b09      	ldr	r3, [pc, #36]	@ (80047bc <global_stdio_init.part.0+0x28>)
 8004798:	4a09      	ldr	r2, [pc, #36]	@ (80047c0 <global_stdio_init.part.0+0x2c>)
 800479a:	2104      	movs	r1, #4
 800479c:	601a      	str	r2, [r3, #0]
 800479e:	4809      	ldr	r0, [pc, #36]	@ (80047c4 <global_stdio_init.part.0+0x30>)
 80047a0:	2200      	movs	r2, #0
 80047a2:	f7ff ff95 	bl	80046d0 <std>
 80047a6:	2201      	movs	r2, #1
 80047a8:	2109      	movs	r1, #9
 80047aa:	4807      	ldr	r0, [pc, #28]	@ (80047c8 <global_stdio_init.part.0+0x34>)
 80047ac:	f7ff ff90 	bl	80046d0 <std>
 80047b0:	2202      	movs	r2, #2
 80047b2:	2112      	movs	r1, #18
 80047b4:	4805      	ldr	r0, [pc, #20]	@ (80047cc <global_stdio_init.part.0+0x38>)
 80047b6:	f7ff ff8b 	bl	80046d0 <std>
 80047ba:	bd10      	pop	{r4, pc}
 80047bc:	20000418 	.word	0x20000418
 80047c0:	0800473d 	.word	0x0800473d
 80047c4:	200002e0 	.word	0x200002e0
 80047c8:	20000348 	.word	0x20000348
 80047cc:	200003b0 	.word	0x200003b0

080047d0 <__sfp_lock_acquire>:
 80047d0:	b510      	push	{r4, lr}
 80047d2:	4802      	ldr	r0, [pc, #8]	@ (80047dc <__sfp_lock_acquire+0xc>)
 80047d4:	f000 f91b 	bl	8004a0e <__retarget_lock_acquire_recursive>
 80047d8:	bd10      	pop	{r4, pc}
 80047da:	46c0      	nop			@ (mov r8, r8)
 80047dc:	20000421 	.word	0x20000421

080047e0 <__sfp_lock_release>:
 80047e0:	b510      	push	{r4, lr}
 80047e2:	4802      	ldr	r0, [pc, #8]	@ (80047ec <__sfp_lock_release+0xc>)
 80047e4:	f000 f914 	bl	8004a10 <__retarget_lock_release_recursive>
 80047e8:	bd10      	pop	{r4, pc}
 80047ea:	46c0      	nop			@ (mov r8, r8)
 80047ec:	20000421 	.word	0x20000421

080047f0 <__sinit>:
 80047f0:	b510      	push	{r4, lr}
 80047f2:	0004      	movs	r4, r0
 80047f4:	f7ff ffec 	bl	80047d0 <__sfp_lock_acquire>
 80047f8:	6a23      	ldr	r3, [r4, #32]
 80047fa:	2b00      	cmp	r3, #0
 80047fc:	d002      	beq.n	8004804 <__sinit+0x14>
 80047fe:	f7ff ffef 	bl	80047e0 <__sfp_lock_release>
 8004802:	bd10      	pop	{r4, pc}
 8004804:	4b04      	ldr	r3, [pc, #16]	@ (8004818 <__sinit+0x28>)
 8004806:	6223      	str	r3, [r4, #32]
 8004808:	4b04      	ldr	r3, [pc, #16]	@ (800481c <__sinit+0x2c>)
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	2b00      	cmp	r3, #0
 800480e:	d1f6      	bne.n	80047fe <__sinit+0xe>
 8004810:	f7ff ffc0 	bl	8004794 <global_stdio_init.part.0>
 8004814:	e7f3      	b.n	80047fe <__sinit+0xe>
 8004816:	46c0      	nop			@ (mov r8, r8)
 8004818:	08004759 	.word	0x08004759
 800481c:	20000418 	.word	0x20000418

08004820 <_fwalk_sglue>:
 8004820:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004822:	0014      	movs	r4, r2
 8004824:	2600      	movs	r6, #0
 8004826:	9000      	str	r0, [sp, #0]
 8004828:	9101      	str	r1, [sp, #4]
 800482a:	68a5      	ldr	r5, [r4, #8]
 800482c:	6867      	ldr	r7, [r4, #4]
 800482e:	3f01      	subs	r7, #1
 8004830:	d504      	bpl.n	800483c <_fwalk_sglue+0x1c>
 8004832:	6824      	ldr	r4, [r4, #0]
 8004834:	2c00      	cmp	r4, #0
 8004836:	d1f8      	bne.n	800482a <_fwalk_sglue+0xa>
 8004838:	0030      	movs	r0, r6
 800483a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800483c:	89ab      	ldrh	r3, [r5, #12]
 800483e:	2b01      	cmp	r3, #1
 8004840:	d908      	bls.n	8004854 <_fwalk_sglue+0x34>
 8004842:	220e      	movs	r2, #14
 8004844:	5eab      	ldrsh	r3, [r5, r2]
 8004846:	3301      	adds	r3, #1
 8004848:	d004      	beq.n	8004854 <_fwalk_sglue+0x34>
 800484a:	0029      	movs	r1, r5
 800484c:	9800      	ldr	r0, [sp, #0]
 800484e:	9b01      	ldr	r3, [sp, #4]
 8004850:	4798      	blx	r3
 8004852:	4306      	orrs	r6, r0
 8004854:	3568      	adds	r5, #104	@ 0x68
 8004856:	e7ea      	b.n	800482e <_fwalk_sglue+0xe>

08004858 <__sread>:
 8004858:	b570      	push	{r4, r5, r6, lr}
 800485a:	000c      	movs	r4, r1
 800485c:	250e      	movs	r5, #14
 800485e:	5f49      	ldrsh	r1, [r1, r5]
 8004860:	f000 f882 	bl	8004968 <_read_r>
 8004864:	2800      	cmp	r0, #0
 8004866:	db03      	blt.n	8004870 <__sread+0x18>
 8004868:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800486a:	181b      	adds	r3, r3, r0
 800486c:	6563      	str	r3, [r4, #84]	@ 0x54
 800486e:	bd70      	pop	{r4, r5, r6, pc}
 8004870:	89a3      	ldrh	r3, [r4, #12]
 8004872:	4a02      	ldr	r2, [pc, #8]	@ (800487c <__sread+0x24>)
 8004874:	4013      	ands	r3, r2
 8004876:	81a3      	strh	r3, [r4, #12]
 8004878:	e7f9      	b.n	800486e <__sread+0x16>
 800487a:	46c0      	nop			@ (mov r8, r8)
 800487c:	ffffefff 	.word	0xffffefff

08004880 <__swrite>:
 8004880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004882:	001f      	movs	r7, r3
 8004884:	898b      	ldrh	r3, [r1, #12]
 8004886:	0005      	movs	r5, r0
 8004888:	000c      	movs	r4, r1
 800488a:	0016      	movs	r6, r2
 800488c:	05db      	lsls	r3, r3, #23
 800488e:	d505      	bpl.n	800489c <__swrite+0x1c>
 8004890:	230e      	movs	r3, #14
 8004892:	5ec9      	ldrsh	r1, [r1, r3]
 8004894:	2200      	movs	r2, #0
 8004896:	2302      	movs	r3, #2
 8004898:	f000 f852 	bl	8004940 <_lseek_r>
 800489c:	89a3      	ldrh	r3, [r4, #12]
 800489e:	4a05      	ldr	r2, [pc, #20]	@ (80048b4 <__swrite+0x34>)
 80048a0:	0028      	movs	r0, r5
 80048a2:	4013      	ands	r3, r2
 80048a4:	81a3      	strh	r3, [r4, #12]
 80048a6:	0032      	movs	r2, r6
 80048a8:	230e      	movs	r3, #14
 80048aa:	5ee1      	ldrsh	r1, [r4, r3]
 80048ac:	003b      	movs	r3, r7
 80048ae:	f000 f86f 	bl	8004990 <_write_r>
 80048b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80048b4:	ffffefff 	.word	0xffffefff

080048b8 <__sseek>:
 80048b8:	b570      	push	{r4, r5, r6, lr}
 80048ba:	000c      	movs	r4, r1
 80048bc:	250e      	movs	r5, #14
 80048be:	5f49      	ldrsh	r1, [r1, r5]
 80048c0:	f000 f83e 	bl	8004940 <_lseek_r>
 80048c4:	89a3      	ldrh	r3, [r4, #12]
 80048c6:	1c42      	adds	r2, r0, #1
 80048c8:	d103      	bne.n	80048d2 <__sseek+0x1a>
 80048ca:	4a05      	ldr	r2, [pc, #20]	@ (80048e0 <__sseek+0x28>)
 80048cc:	4013      	ands	r3, r2
 80048ce:	81a3      	strh	r3, [r4, #12]
 80048d0:	bd70      	pop	{r4, r5, r6, pc}
 80048d2:	2280      	movs	r2, #128	@ 0x80
 80048d4:	0152      	lsls	r2, r2, #5
 80048d6:	4313      	orrs	r3, r2
 80048d8:	81a3      	strh	r3, [r4, #12]
 80048da:	6560      	str	r0, [r4, #84]	@ 0x54
 80048dc:	e7f8      	b.n	80048d0 <__sseek+0x18>
 80048de:	46c0      	nop			@ (mov r8, r8)
 80048e0:	ffffefff 	.word	0xffffefff

080048e4 <__sclose>:
 80048e4:	b510      	push	{r4, lr}
 80048e6:	230e      	movs	r3, #14
 80048e8:	5ec9      	ldrsh	r1, [r1, r3]
 80048ea:	f000 f817 	bl	800491c <_close_r>
 80048ee:	bd10      	pop	{r4, pc}

080048f0 <memcmp>:
 80048f0:	b530      	push	{r4, r5, lr}
 80048f2:	2400      	movs	r4, #0
 80048f4:	3901      	subs	r1, #1
 80048f6:	42a2      	cmp	r2, r4
 80048f8:	d101      	bne.n	80048fe <memcmp+0xe>
 80048fa:	2000      	movs	r0, #0
 80048fc:	e005      	b.n	800490a <memcmp+0x1a>
 80048fe:	5d03      	ldrb	r3, [r0, r4]
 8004900:	3401      	adds	r4, #1
 8004902:	5d0d      	ldrb	r5, [r1, r4]
 8004904:	42ab      	cmp	r3, r5
 8004906:	d0f6      	beq.n	80048f6 <memcmp+0x6>
 8004908:	1b58      	subs	r0, r3, r5
 800490a:	bd30      	pop	{r4, r5, pc}

0800490c <memset>:
 800490c:	0003      	movs	r3, r0
 800490e:	1882      	adds	r2, r0, r2
 8004910:	4293      	cmp	r3, r2
 8004912:	d100      	bne.n	8004916 <memset+0xa>
 8004914:	4770      	bx	lr
 8004916:	7019      	strb	r1, [r3, #0]
 8004918:	3301      	adds	r3, #1
 800491a:	e7f9      	b.n	8004910 <memset+0x4>

0800491c <_close_r>:
 800491c:	2300      	movs	r3, #0
 800491e:	b570      	push	{r4, r5, r6, lr}
 8004920:	4d06      	ldr	r5, [pc, #24]	@ (800493c <_close_r+0x20>)
 8004922:	0004      	movs	r4, r0
 8004924:	0008      	movs	r0, r1
 8004926:	602b      	str	r3, [r5, #0]
 8004928:	f7fd f9b4 	bl	8001c94 <_close>
 800492c:	1c43      	adds	r3, r0, #1
 800492e:	d103      	bne.n	8004938 <_close_r+0x1c>
 8004930:	682b      	ldr	r3, [r5, #0]
 8004932:	2b00      	cmp	r3, #0
 8004934:	d000      	beq.n	8004938 <_close_r+0x1c>
 8004936:	6023      	str	r3, [r4, #0]
 8004938:	bd70      	pop	{r4, r5, r6, pc}
 800493a:	46c0      	nop			@ (mov r8, r8)
 800493c:	2000041c 	.word	0x2000041c

08004940 <_lseek_r>:
 8004940:	b570      	push	{r4, r5, r6, lr}
 8004942:	0004      	movs	r4, r0
 8004944:	0008      	movs	r0, r1
 8004946:	0011      	movs	r1, r2
 8004948:	001a      	movs	r2, r3
 800494a:	2300      	movs	r3, #0
 800494c:	4d05      	ldr	r5, [pc, #20]	@ (8004964 <_lseek_r+0x24>)
 800494e:	602b      	str	r3, [r5, #0]
 8004950:	f7fd f9c1 	bl	8001cd6 <_lseek>
 8004954:	1c43      	adds	r3, r0, #1
 8004956:	d103      	bne.n	8004960 <_lseek_r+0x20>
 8004958:	682b      	ldr	r3, [r5, #0]
 800495a:	2b00      	cmp	r3, #0
 800495c:	d000      	beq.n	8004960 <_lseek_r+0x20>
 800495e:	6023      	str	r3, [r4, #0]
 8004960:	bd70      	pop	{r4, r5, r6, pc}
 8004962:	46c0      	nop			@ (mov r8, r8)
 8004964:	2000041c 	.word	0x2000041c

08004968 <_read_r>:
 8004968:	b570      	push	{r4, r5, r6, lr}
 800496a:	0004      	movs	r4, r0
 800496c:	0008      	movs	r0, r1
 800496e:	0011      	movs	r1, r2
 8004970:	001a      	movs	r2, r3
 8004972:	2300      	movs	r3, #0
 8004974:	4d05      	ldr	r5, [pc, #20]	@ (800498c <_read_r+0x24>)
 8004976:	602b      	str	r3, [r5, #0]
 8004978:	f7fd f953 	bl	8001c22 <_read>
 800497c:	1c43      	adds	r3, r0, #1
 800497e:	d103      	bne.n	8004988 <_read_r+0x20>
 8004980:	682b      	ldr	r3, [r5, #0]
 8004982:	2b00      	cmp	r3, #0
 8004984:	d000      	beq.n	8004988 <_read_r+0x20>
 8004986:	6023      	str	r3, [r4, #0]
 8004988:	bd70      	pop	{r4, r5, r6, pc}
 800498a:	46c0      	nop			@ (mov r8, r8)
 800498c:	2000041c 	.word	0x2000041c

08004990 <_write_r>:
 8004990:	b570      	push	{r4, r5, r6, lr}
 8004992:	0004      	movs	r4, r0
 8004994:	0008      	movs	r0, r1
 8004996:	0011      	movs	r1, r2
 8004998:	001a      	movs	r2, r3
 800499a:	2300      	movs	r3, #0
 800499c:	4d05      	ldr	r5, [pc, #20]	@ (80049b4 <_write_r+0x24>)
 800499e:	602b      	str	r3, [r5, #0]
 80049a0:	f7fd f95c 	bl	8001c5c <_write>
 80049a4:	1c43      	adds	r3, r0, #1
 80049a6:	d103      	bne.n	80049b0 <_write_r+0x20>
 80049a8:	682b      	ldr	r3, [r5, #0]
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d000      	beq.n	80049b0 <_write_r+0x20>
 80049ae:	6023      	str	r3, [r4, #0]
 80049b0:	bd70      	pop	{r4, r5, r6, pc}
 80049b2:	46c0      	nop			@ (mov r8, r8)
 80049b4:	2000041c 	.word	0x2000041c

080049b8 <__errno>:
 80049b8:	4b01      	ldr	r3, [pc, #4]	@ (80049c0 <__errno+0x8>)
 80049ba:	6818      	ldr	r0, [r3, #0]
 80049bc:	4770      	bx	lr
 80049be:	46c0      	nop			@ (mov r8, r8)
 80049c0:	2000002c 	.word	0x2000002c

080049c4 <__libc_init_array>:
 80049c4:	b570      	push	{r4, r5, r6, lr}
 80049c6:	2600      	movs	r6, #0
 80049c8:	4c0c      	ldr	r4, [pc, #48]	@ (80049fc <__libc_init_array+0x38>)
 80049ca:	4d0d      	ldr	r5, [pc, #52]	@ (8004a00 <__libc_init_array+0x3c>)
 80049cc:	1b64      	subs	r4, r4, r5
 80049ce:	10a4      	asrs	r4, r4, #2
 80049d0:	42a6      	cmp	r6, r4
 80049d2:	d109      	bne.n	80049e8 <__libc_init_array+0x24>
 80049d4:	2600      	movs	r6, #0
 80049d6:	f000 fe6b 	bl	80056b0 <_init>
 80049da:	4c0a      	ldr	r4, [pc, #40]	@ (8004a04 <__libc_init_array+0x40>)
 80049dc:	4d0a      	ldr	r5, [pc, #40]	@ (8004a08 <__libc_init_array+0x44>)
 80049de:	1b64      	subs	r4, r4, r5
 80049e0:	10a4      	asrs	r4, r4, #2
 80049e2:	42a6      	cmp	r6, r4
 80049e4:	d105      	bne.n	80049f2 <__libc_init_array+0x2e>
 80049e6:	bd70      	pop	{r4, r5, r6, pc}
 80049e8:	00b3      	lsls	r3, r6, #2
 80049ea:	58eb      	ldr	r3, [r5, r3]
 80049ec:	4798      	blx	r3
 80049ee:	3601      	adds	r6, #1
 80049f0:	e7ee      	b.n	80049d0 <__libc_init_array+0xc>
 80049f2:	00b3      	lsls	r3, r6, #2
 80049f4:	58eb      	ldr	r3, [r5, r3]
 80049f6:	4798      	blx	r3
 80049f8:	3601      	adds	r6, #1
 80049fa:	e7f2      	b.n	80049e2 <__libc_init_array+0x1e>
 80049fc:	080057e0 	.word	0x080057e0
 8004a00:	080057e0 	.word	0x080057e0
 8004a04:	080057e4 	.word	0x080057e4
 8004a08:	080057e0 	.word	0x080057e0

08004a0c <__retarget_lock_init_recursive>:
 8004a0c:	4770      	bx	lr

08004a0e <__retarget_lock_acquire_recursive>:
 8004a0e:	4770      	bx	lr

08004a10 <__retarget_lock_release_recursive>:
 8004a10:	4770      	bx	lr

08004a12 <memcpy>:
 8004a12:	2300      	movs	r3, #0
 8004a14:	b510      	push	{r4, lr}
 8004a16:	429a      	cmp	r2, r3
 8004a18:	d100      	bne.n	8004a1c <memcpy+0xa>
 8004a1a:	bd10      	pop	{r4, pc}
 8004a1c:	5ccc      	ldrb	r4, [r1, r3]
 8004a1e:	54c4      	strb	r4, [r0, r3]
 8004a20:	3301      	adds	r3, #1
 8004a22:	e7f8      	b.n	8004a16 <memcpy+0x4>

08004a24 <__assert_func>:
 8004a24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004a26:	0014      	movs	r4, r2
 8004a28:	001a      	movs	r2, r3
 8004a2a:	4b09      	ldr	r3, [pc, #36]	@ (8004a50 <__assert_func+0x2c>)
 8004a2c:	0005      	movs	r5, r0
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	000e      	movs	r6, r1
 8004a32:	68d8      	ldr	r0, [r3, #12]
 8004a34:	4b07      	ldr	r3, [pc, #28]	@ (8004a54 <__assert_func+0x30>)
 8004a36:	2c00      	cmp	r4, #0
 8004a38:	d101      	bne.n	8004a3e <__assert_func+0x1a>
 8004a3a:	4b07      	ldr	r3, [pc, #28]	@ (8004a58 <__assert_func+0x34>)
 8004a3c:	001c      	movs	r4, r3
 8004a3e:	4907      	ldr	r1, [pc, #28]	@ (8004a5c <__assert_func+0x38>)
 8004a40:	9301      	str	r3, [sp, #4]
 8004a42:	9402      	str	r4, [sp, #8]
 8004a44:	002b      	movs	r3, r5
 8004a46:	9600      	str	r6, [sp, #0]
 8004a48:	f000 f9c2 	bl	8004dd0 <fiprintf>
 8004a4c:	f000 f9e2 	bl	8004e14 <abort>
 8004a50:	2000002c 	.word	0x2000002c
 8004a54:	0800576f 	.word	0x0800576f
 8004a58:	080057aa 	.word	0x080057aa
 8004a5c:	0800577c 	.word	0x0800577c

08004a60 <_free_r>:
 8004a60:	b570      	push	{r4, r5, r6, lr}
 8004a62:	0005      	movs	r5, r0
 8004a64:	1e0c      	subs	r4, r1, #0
 8004a66:	d010      	beq.n	8004a8a <_free_r+0x2a>
 8004a68:	3c04      	subs	r4, #4
 8004a6a:	6823      	ldr	r3, [r4, #0]
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	da00      	bge.n	8004a72 <_free_r+0x12>
 8004a70:	18e4      	adds	r4, r4, r3
 8004a72:	0028      	movs	r0, r5
 8004a74:	f000 f8ea 	bl	8004c4c <__malloc_lock>
 8004a78:	4a1d      	ldr	r2, [pc, #116]	@ (8004af0 <_free_r+0x90>)
 8004a7a:	6813      	ldr	r3, [r2, #0]
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d105      	bne.n	8004a8c <_free_r+0x2c>
 8004a80:	6063      	str	r3, [r4, #4]
 8004a82:	6014      	str	r4, [r2, #0]
 8004a84:	0028      	movs	r0, r5
 8004a86:	f000 f8e9 	bl	8004c5c <__malloc_unlock>
 8004a8a:	bd70      	pop	{r4, r5, r6, pc}
 8004a8c:	42a3      	cmp	r3, r4
 8004a8e:	d908      	bls.n	8004aa2 <_free_r+0x42>
 8004a90:	6820      	ldr	r0, [r4, #0]
 8004a92:	1821      	adds	r1, r4, r0
 8004a94:	428b      	cmp	r3, r1
 8004a96:	d1f3      	bne.n	8004a80 <_free_r+0x20>
 8004a98:	6819      	ldr	r1, [r3, #0]
 8004a9a:	685b      	ldr	r3, [r3, #4]
 8004a9c:	1809      	adds	r1, r1, r0
 8004a9e:	6021      	str	r1, [r4, #0]
 8004aa0:	e7ee      	b.n	8004a80 <_free_r+0x20>
 8004aa2:	001a      	movs	r2, r3
 8004aa4:	685b      	ldr	r3, [r3, #4]
 8004aa6:	2b00      	cmp	r3, #0
 8004aa8:	d001      	beq.n	8004aae <_free_r+0x4e>
 8004aaa:	42a3      	cmp	r3, r4
 8004aac:	d9f9      	bls.n	8004aa2 <_free_r+0x42>
 8004aae:	6811      	ldr	r1, [r2, #0]
 8004ab0:	1850      	adds	r0, r2, r1
 8004ab2:	42a0      	cmp	r0, r4
 8004ab4:	d10b      	bne.n	8004ace <_free_r+0x6e>
 8004ab6:	6820      	ldr	r0, [r4, #0]
 8004ab8:	1809      	adds	r1, r1, r0
 8004aba:	1850      	adds	r0, r2, r1
 8004abc:	6011      	str	r1, [r2, #0]
 8004abe:	4283      	cmp	r3, r0
 8004ac0:	d1e0      	bne.n	8004a84 <_free_r+0x24>
 8004ac2:	6818      	ldr	r0, [r3, #0]
 8004ac4:	685b      	ldr	r3, [r3, #4]
 8004ac6:	1841      	adds	r1, r0, r1
 8004ac8:	6011      	str	r1, [r2, #0]
 8004aca:	6053      	str	r3, [r2, #4]
 8004acc:	e7da      	b.n	8004a84 <_free_r+0x24>
 8004ace:	42a0      	cmp	r0, r4
 8004ad0:	d902      	bls.n	8004ad8 <_free_r+0x78>
 8004ad2:	230c      	movs	r3, #12
 8004ad4:	602b      	str	r3, [r5, #0]
 8004ad6:	e7d5      	b.n	8004a84 <_free_r+0x24>
 8004ad8:	6820      	ldr	r0, [r4, #0]
 8004ada:	1821      	adds	r1, r4, r0
 8004adc:	428b      	cmp	r3, r1
 8004ade:	d103      	bne.n	8004ae8 <_free_r+0x88>
 8004ae0:	6819      	ldr	r1, [r3, #0]
 8004ae2:	685b      	ldr	r3, [r3, #4]
 8004ae4:	1809      	adds	r1, r1, r0
 8004ae6:	6021      	str	r1, [r4, #0]
 8004ae8:	6063      	str	r3, [r4, #4]
 8004aea:	6054      	str	r4, [r2, #4]
 8004aec:	e7ca      	b.n	8004a84 <_free_r+0x24>
 8004aee:	46c0      	nop			@ (mov r8, r8)
 8004af0:	20000428 	.word	0x20000428

08004af4 <malloc>:
 8004af4:	b510      	push	{r4, lr}
 8004af6:	4b03      	ldr	r3, [pc, #12]	@ (8004b04 <malloc+0x10>)
 8004af8:	0001      	movs	r1, r0
 8004afa:	6818      	ldr	r0, [r3, #0]
 8004afc:	f000 f826 	bl	8004b4c <_malloc_r>
 8004b00:	bd10      	pop	{r4, pc}
 8004b02:	46c0      	nop			@ (mov r8, r8)
 8004b04:	2000002c 	.word	0x2000002c

08004b08 <sbrk_aligned>:
 8004b08:	b570      	push	{r4, r5, r6, lr}
 8004b0a:	4e0f      	ldr	r6, [pc, #60]	@ (8004b48 <sbrk_aligned+0x40>)
 8004b0c:	000d      	movs	r5, r1
 8004b0e:	6831      	ldr	r1, [r6, #0]
 8004b10:	0004      	movs	r4, r0
 8004b12:	2900      	cmp	r1, #0
 8004b14:	d102      	bne.n	8004b1c <sbrk_aligned+0x14>
 8004b16:	f000 f96b 	bl	8004df0 <_sbrk_r>
 8004b1a:	6030      	str	r0, [r6, #0]
 8004b1c:	0029      	movs	r1, r5
 8004b1e:	0020      	movs	r0, r4
 8004b20:	f000 f966 	bl	8004df0 <_sbrk_r>
 8004b24:	1c43      	adds	r3, r0, #1
 8004b26:	d103      	bne.n	8004b30 <sbrk_aligned+0x28>
 8004b28:	2501      	movs	r5, #1
 8004b2a:	426d      	negs	r5, r5
 8004b2c:	0028      	movs	r0, r5
 8004b2e:	bd70      	pop	{r4, r5, r6, pc}
 8004b30:	2303      	movs	r3, #3
 8004b32:	1cc5      	adds	r5, r0, #3
 8004b34:	439d      	bics	r5, r3
 8004b36:	42a8      	cmp	r0, r5
 8004b38:	d0f8      	beq.n	8004b2c <sbrk_aligned+0x24>
 8004b3a:	1a29      	subs	r1, r5, r0
 8004b3c:	0020      	movs	r0, r4
 8004b3e:	f000 f957 	bl	8004df0 <_sbrk_r>
 8004b42:	3001      	adds	r0, #1
 8004b44:	d1f2      	bne.n	8004b2c <sbrk_aligned+0x24>
 8004b46:	e7ef      	b.n	8004b28 <sbrk_aligned+0x20>
 8004b48:	20000424 	.word	0x20000424

08004b4c <_malloc_r>:
 8004b4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004b4e:	2203      	movs	r2, #3
 8004b50:	1ccb      	adds	r3, r1, #3
 8004b52:	4393      	bics	r3, r2
 8004b54:	3308      	adds	r3, #8
 8004b56:	0005      	movs	r5, r0
 8004b58:	001f      	movs	r7, r3
 8004b5a:	2b0c      	cmp	r3, #12
 8004b5c:	d234      	bcs.n	8004bc8 <_malloc_r+0x7c>
 8004b5e:	270c      	movs	r7, #12
 8004b60:	42b9      	cmp	r1, r7
 8004b62:	d833      	bhi.n	8004bcc <_malloc_r+0x80>
 8004b64:	0028      	movs	r0, r5
 8004b66:	f000 f871 	bl	8004c4c <__malloc_lock>
 8004b6a:	4e37      	ldr	r6, [pc, #220]	@ (8004c48 <_malloc_r+0xfc>)
 8004b6c:	6833      	ldr	r3, [r6, #0]
 8004b6e:	001c      	movs	r4, r3
 8004b70:	2c00      	cmp	r4, #0
 8004b72:	d12f      	bne.n	8004bd4 <_malloc_r+0x88>
 8004b74:	0039      	movs	r1, r7
 8004b76:	0028      	movs	r0, r5
 8004b78:	f7ff ffc6 	bl	8004b08 <sbrk_aligned>
 8004b7c:	0004      	movs	r4, r0
 8004b7e:	1c43      	adds	r3, r0, #1
 8004b80:	d15f      	bne.n	8004c42 <_malloc_r+0xf6>
 8004b82:	6834      	ldr	r4, [r6, #0]
 8004b84:	9400      	str	r4, [sp, #0]
 8004b86:	9b00      	ldr	r3, [sp, #0]
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	d14a      	bne.n	8004c22 <_malloc_r+0xd6>
 8004b8c:	2c00      	cmp	r4, #0
 8004b8e:	d052      	beq.n	8004c36 <_malloc_r+0xea>
 8004b90:	6823      	ldr	r3, [r4, #0]
 8004b92:	0028      	movs	r0, r5
 8004b94:	18e3      	adds	r3, r4, r3
 8004b96:	9900      	ldr	r1, [sp, #0]
 8004b98:	9301      	str	r3, [sp, #4]
 8004b9a:	f000 f929 	bl	8004df0 <_sbrk_r>
 8004b9e:	9b01      	ldr	r3, [sp, #4]
 8004ba0:	4283      	cmp	r3, r0
 8004ba2:	d148      	bne.n	8004c36 <_malloc_r+0xea>
 8004ba4:	6823      	ldr	r3, [r4, #0]
 8004ba6:	0028      	movs	r0, r5
 8004ba8:	1aff      	subs	r7, r7, r3
 8004baa:	0039      	movs	r1, r7
 8004bac:	f7ff ffac 	bl	8004b08 <sbrk_aligned>
 8004bb0:	3001      	adds	r0, #1
 8004bb2:	d040      	beq.n	8004c36 <_malloc_r+0xea>
 8004bb4:	6823      	ldr	r3, [r4, #0]
 8004bb6:	19db      	adds	r3, r3, r7
 8004bb8:	6023      	str	r3, [r4, #0]
 8004bba:	6833      	ldr	r3, [r6, #0]
 8004bbc:	685a      	ldr	r2, [r3, #4]
 8004bbe:	2a00      	cmp	r2, #0
 8004bc0:	d133      	bne.n	8004c2a <_malloc_r+0xde>
 8004bc2:	9b00      	ldr	r3, [sp, #0]
 8004bc4:	6033      	str	r3, [r6, #0]
 8004bc6:	e019      	b.n	8004bfc <_malloc_r+0xb0>
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	dac9      	bge.n	8004b60 <_malloc_r+0x14>
 8004bcc:	230c      	movs	r3, #12
 8004bce:	602b      	str	r3, [r5, #0]
 8004bd0:	2000      	movs	r0, #0
 8004bd2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004bd4:	6821      	ldr	r1, [r4, #0]
 8004bd6:	1bc9      	subs	r1, r1, r7
 8004bd8:	d420      	bmi.n	8004c1c <_malloc_r+0xd0>
 8004bda:	290b      	cmp	r1, #11
 8004bdc:	d90a      	bls.n	8004bf4 <_malloc_r+0xa8>
 8004bde:	19e2      	adds	r2, r4, r7
 8004be0:	6027      	str	r7, [r4, #0]
 8004be2:	42a3      	cmp	r3, r4
 8004be4:	d104      	bne.n	8004bf0 <_malloc_r+0xa4>
 8004be6:	6032      	str	r2, [r6, #0]
 8004be8:	6863      	ldr	r3, [r4, #4]
 8004bea:	6011      	str	r1, [r2, #0]
 8004bec:	6053      	str	r3, [r2, #4]
 8004bee:	e005      	b.n	8004bfc <_malloc_r+0xb0>
 8004bf0:	605a      	str	r2, [r3, #4]
 8004bf2:	e7f9      	b.n	8004be8 <_malloc_r+0x9c>
 8004bf4:	6862      	ldr	r2, [r4, #4]
 8004bf6:	42a3      	cmp	r3, r4
 8004bf8:	d10e      	bne.n	8004c18 <_malloc_r+0xcc>
 8004bfa:	6032      	str	r2, [r6, #0]
 8004bfc:	0028      	movs	r0, r5
 8004bfe:	f000 f82d 	bl	8004c5c <__malloc_unlock>
 8004c02:	0020      	movs	r0, r4
 8004c04:	2207      	movs	r2, #7
 8004c06:	300b      	adds	r0, #11
 8004c08:	1d23      	adds	r3, r4, #4
 8004c0a:	4390      	bics	r0, r2
 8004c0c:	1ac2      	subs	r2, r0, r3
 8004c0e:	4298      	cmp	r0, r3
 8004c10:	d0df      	beq.n	8004bd2 <_malloc_r+0x86>
 8004c12:	1a1b      	subs	r3, r3, r0
 8004c14:	50a3      	str	r3, [r4, r2]
 8004c16:	e7dc      	b.n	8004bd2 <_malloc_r+0x86>
 8004c18:	605a      	str	r2, [r3, #4]
 8004c1a:	e7ef      	b.n	8004bfc <_malloc_r+0xb0>
 8004c1c:	0023      	movs	r3, r4
 8004c1e:	6864      	ldr	r4, [r4, #4]
 8004c20:	e7a6      	b.n	8004b70 <_malloc_r+0x24>
 8004c22:	9c00      	ldr	r4, [sp, #0]
 8004c24:	6863      	ldr	r3, [r4, #4]
 8004c26:	9300      	str	r3, [sp, #0]
 8004c28:	e7ad      	b.n	8004b86 <_malloc_r+0x3a>
 8004c2a:	001a      	movs	r2, r3
 8004c2c:	685b      	ldr	r3, [r3, #4]
 8004c2e:	42a3      	cmp	r3, r4
 8004c30:	d1fb      	bne.n	8004c2a <_malloc_r+0xde>
 8004c32:	2300      	movs	r3, #0
 8004c34:	e7da      	b.n	8004bec <_malloc_r+0xa0>
 8004c36:	230c      	movs	r3, #12
 8004c38:	0028      	movs	r0, r5
 8004c3a:	602b      	str	r3, [r5, #0]
 8004c3c:	f000 f80e 	bl	8004c5c <__malloc_unlock>
 8004c40:	e7c6      	b.n	8004bd0 <_malloc_r+0x84>
 8004c42:	6007      	str	r7, [r0, #0]
 8004c44:	e7da      	b.n	8004bfc <_malloc_r+0xb0>
 8004c46:	46c0      	nop			@ (mov r8, r8)
 8004c48:	20000428 	.word	0x20000428

08004c4c <__malloc_lock>:
 8004c4c:	b510      	push	{r4, lr}
 8004c4e:	4802      	ldr	r0, [pc, #8]	@ (8004c58 <__malloc_lock+0xc>)
 8004c50:	f7ff fedd 	bl	8004a0e <__retarget_lock_acquire_recursive>
 8004c54:	bd10      	pop	{r4, pc}
 8004c56:	46c0      	nop			@ (mov r8, r8)
 8004c58:	20000420 	.word	0x20000420

08004c5c <__malloc_unlock>:
 8004c5c:	b510      	push	{r4, lr}
 8004c5e:	4802      	ldr	r0, [pc, #8]	@ (8004c68 <__malloc_unlock+0xc>)
 8004c60:	f7ff fed6 	bl	8004a10 <__retarget_lock_release_recursive>
 8004c64:	bd10      	pop	{r4, pc}
 8004c66:	46c0      	nop			@ (mov r8, r8)
 8004c68:	20000420 	.word	0x20000420

08004c6c <__sflush_r>:
 8004c6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004c6e:	220c      	movs	r2, #12
 8004c70:	5e8b      	ldrsh	r3, [r1, r2]
 8004c72:	0005      	movs	r5, r0
 8004c74:	000c      	movs	r4, r1
 8004c76:	071a      	lsls	r2, r3, #28
 8004c78:	d456      	bmi.n	8004d28 <__sflush_r+0xbc>
 8004c7a:	684a      	ldr	r2, [r1, #4]
 8004c7c:	2a00      	cmp	r2, #0
 8004c7e:	dc02      	bgt.n	8004c86 <__sflush_r+0x1a>
 8004c80:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8004c82:	2a00      	cmp	r2, #0
 8004c84:	dd4e      	ble.n	8004d24 <__sflush_r+0xb8>
 8004c86:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8004c88:	2f00      	cmp	r7, #0
 8004c8a:	d04b      	beq.n	8004d24 <__sflush_r+0xb8>
 8004c8c:	2200      	movs	r2, #0
 8004c8e:	2080      	movs	r0, #128	@ 0x80
 8004c90:	682e      	ldr	r6, [r5, #0]
 8004c92:	602a      	str	r2, [r5, #0]
 8004c94:	001a      	movs	r2, r3
 8004c96:	0140      	lsls	r0, r0, #5
 8004c98:	6a21      	ldr	r1, [r4, #32]
 8004c9a:	4002      	ands	r2, r0
 8004c9c:	4203      	tst	r3, r0
 8004c9e:	d033      	beq.n	8004d08 <__sflush_r+0x9c>
 8004ca0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004ca2:	89a3      	ldrh	r3, [r4, #12]
 8004ca4:	075b      	lsls	r3, r3, #29
 8004ca6:	d506      	bpl.n	8004cb6 <__sflush_r+0x4a>
 8004ca8:	6863      	ldr	r3, [r4, #4]
 8004caa:	1ad2      	subs	r2, r2, r3
 8004cac:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004cae:	2b00      	cmp	r3, #0
 8004cb0:	d001      	beq.n	8004cb6 <__sflush_r+0x4a>
 8004cb2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004cb4:	1ad2      	subs	r2, r2, r3
 8004cb6:	2300      	movs	r3, #0
 8004cb8:	0028      	movs	r0, r5
 8004cba:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8004cbc:	6a21      	ldr	r1, [r4, #32]
 8004cbe:	47b8      	blx	r7
 8004cc0:	89a2      	ldrh	r2, [r4, #12]
 8004cc2:	1c43      	adds	r3, r0, #1
 8004cc4:	d106      	bne.n	8004cd4 <__sflush_r+0x68>
 8004cc6:	6829      	ldr	r1, [r5, #0]
 8004cc8:	291d      	cmp	r1, #29
 8004cca:	d846      	bhi.n	8004d5a <__sflush_r+0xee>
 8004ccc:	4b29      	ldr	r3, [pc, #164]	@ (8004d74 <__sflush_r+0x108>)
 8004cce:	410b      	asrs	r3, r1
 8004cd0:	07db      	lsls	r3, r3, #31
 8004cd2:	d442      	bmi.n	8004d5a <__sflush_r+0xee>
 8004cd4:	2300      	movs	r3, #0
 8004cd6:	6063      	str	r3, [r4, #4]
 8004cd8:	6923      	ldr	r3, [r4, #16]
 8004cda:	6023      	str	r3, [r4, #0]
 8004cdc:	04d2      	lsls	r2, r2, #19
 8004cde:	d505      	bpl.n	8004cec <__sflush_r+0x80>
 8004ce0:	1c43      	adds	r3, r0, #1
 8004ce2:	d102      	bne.n	8004cea <__sflush_r+0x7e>
 8004ce4:	682b      	ldr	r3, [r5, #0]
 8004ce6:	2b00      	cmp	r3, #0
 8004ce8:	d100      	bne.n	8004cec <__sflush_r+0x80>
 8004cea:	6560      	str	r0, [r4, #84]	@ 0x54
 8004cec:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004cee:	602e      	str	r6, [r5, #0]
 8004cf0:	2900      	cmp	r1, #0
 8004cf2:	d017      	beq.n	8004d24 <__sflush_r+0xb8>
 8004cf4:	0023      	movs	r3, r4
 8004cf6:	3344      	adds	r3, #68	@ 0x44
 8004cf8:	4299      	cmp	r1, r3
 8004cfa:	d002      	beq.n	8004d02 <__sflush_r+0x96>
 8004cfc:	0028      	movs	r0, r5
 8004cfe:	f7ff feaf 	bl	8004a60 <_free_r>
 8004d02:	2300      	movs	r3, #0
 8004d04:	6363      	str	r3, [r4, #52]	@ 0x34
 8004d06:	e00d      	b.n	8004d24 <__sflush_r+0xb8>
 8004d08:	2301      	movs	r3, #1
 8004d0a:	0028      	movs	r0, r5
 8004d0c:	47b8      	blx	r7
 8004d0e:	0002      	movs	r2, r0
 8004d10:	1c43      	adds	r3, r0, #1
 8004d12:	d1c6      	bne.n	8004ca2 <__sflush_r+0x36>
 8004d14:	682b      	ldr	r3, [r5, #0]
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d0c3      	beq.n	8004ca2 <__sflush_r+0x36>
 8004d1a:	2b1d      	cmp	r3, #29
 8004d1c:	d001      	beq.n	8004d22 <__sflush_r+0xb6>
 8004d1e:	2b16      	cmp	r3, #22
 8004d20:	d11a      	bne.n	8004d58 <__sflush_r+0xec>
 8004d22:	602e      	str	r6, [r5, #0]
 8004d24:	2000      	movs	r0, #0
 8004d26:	e01e      	b.n	8004d66 <__sflush_r+0xfa>
 8004d28:	690e      	ldr	r6, [r1, #16]
 8004d2a:	2e00      	cmp	r6, #0
 8004d2c:	d0fa      	beq.n	8004d24 <__sflush_r+0xb8>
 8004d2e:	680f      	ldr	r7, [r1, #0]
 8004d30:	600e      	str	r6, [r1, #0]
 8004d32:	1bba      	subs	r2, r7, r6
 8004d34:	9201      	str	r2, [sp, #4]
 8004d36:	2200      	movs	r2, #0
 8004d38:	079b      	lsls	r3, r3, #30
 8004d3a:	d100      	bne.n	8004d3e <__sflush_r+0xd2>
 8004d3c:	694a      	ldr	r2, [r1, #20]
 8004d3e:	60a2      	str	r2, [r4, #8]
 8004d40:	9b01      	ldr	r3, [sp, #4]
 8004d42:	2b00      	cmp	r3, #0
 8004d44:	ddee      	ble.n	8004d24 <__sflush_r+0xb8>
 8004d46:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8004d48:	0032      	movs	r2, r6
 8004d4a:	001f      	movs	r7, r3
 8004d4c:	0028      	movs	r0, r5
 8004d4e:	9b01      	ldr	r3, [sp, #4]
 8004d50:	6a21      	ldr	r1, [r4, #32]
 8004d52:	47b8      	blx	r7
 8004d54:	2800      	cmp	r0, #0
 8004d56:	dc07      	bgt.n	8004d68 <__sflush_r+0xfc>
 8004d58:	89a2      	ldrh	r2, [r4, #12]
 8004d5a:	2340      	movs	r3, #64	@ 0x40
 8004d5c:	2001      	movs	r0, #1
 8004d5e:	4313      	orrs	r3, r2
 8004d60:	b21b      	sxth	r3, r3
 8004d62:	81a3      	strh	r3, [r4, #12]
 8004d64:	4240      	negs	r0, r0
 8004d66:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004d68:	9b01      	ldr	r3, [sp, #4]
 8004d6a:	1836      	adds	r6, r6, r0
 8004d6c:	1a1b      	subs	r3, r3, r0
 8004d6e:	9301      	str	r3, [sp, #4]
 8004d70:	e7e6      	b.n	8004d40 <__sflush_r+0xd4>
 8004d72:	46c0      	nop			@ (mov r8, r8)
 8004d74:	dfbffffe 	.word	0xdfbffffe

08004d78 <_fflush_r>:
 8004d78:	690b      	ldr	r3, [r1, #16]
 8004d7a:	b570      	push	{r4, r5, r6, lr}
 8004d7c:	0005      	movs	r5, r0
 8004d7e:	000c      	movs	r4, r1
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d102      	bne.n	8004d8a <_fflush_r+0x12>
 8004d84:	2500      	movs	r5, #0
 8004d86:	0028      	movs	r0, r5
 8004d88:	bd70      	pop	{r4, r5, r6, pc}
 8004d8a:	2800      	cmp	r0, #0
 8004d8c:	d004      	beq.n	8004d98 <_fflush_r+0x20>
 8004d8e:	6a03      	ldr	r3, [r0, #32]
 8004d90:	2b00      	cmp	r3, #0
 8004d92:	d101      	bne.n	8004d98 <_fflush_r+0x20>
 8004d94:	f7ff fd2c 	bl	80047f0 <__sinit>
 8004d98:	220c      	movs	r2, #12
 8004d9a:	5ea3      	ldrsh	r3, [r4, r2]
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	d0f1      	beq.n	8004d84 <_fflush_r+0xc>
 8004da0:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004da2:	07d2      	lsls	r2, r2, #31
 8004da4:	d404      	bmi.n	8004db0 <_fflush_r+0x38>
 8004da6:	059b      	lsls	r3, r3, #22
 8004da8:	d402      	bmi.n	8004db0 <_fflush_r+0x38>
 8004daa:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004dac:	f7ff fe2f 	bl	8004a0e <__retarget_lock_acquire_recursive>
 8004db0:	0028      	movs	r0, r5
 8004db2:	0021      	movs	r1, r4
 8004db4:	f7ff ff5a 	bl	8004c6c <__sflush_r>
 8004db8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004dba:	0005      	movs	r5, r0
 8004dbc:	07db      	lsls	r3, r3, #31
 8004dbe:	d4e2      	bmi.n	8004d86 <_fflush_r+0xe>
 8004dc0:	89a3      	ldrh	r3, [r4, #12]
 8004dc2:	059b      	lsls	r3, r3, #22
 8004dc4:	d4df      	bmi.n	8004d86 <_fflush_r+0xe>
 8004dc6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004dc8:	f7ff fe22 	bl	8004a10 <__retarget_lock_release_recursive>
 8004dcc:	e7db      	b.n	8004d86 <_fflush_r+0xe>
	...

08004dd0 <fiprintf>:
 8004dd0:	b40e      	push	{r1, r2, r3}
 8004dd2:	b517      	push	{r0, r1, r2, r4, lr}
 8004dd4:	4c05      	ldr	r4, [pc, #20]	@ (8004dec <fiprintf+0x1c>)
 8004dd6:	ab05      	add	r3, sp, #20
 8004dd8:	cb04      	ldmia	r3!, {r2}
 8004dda:	0001      	movs	r1, r0
 8004ddc:	6820      	ldr	r0, [r4, #0]
 8004dde:	9301      	str	r3, [sp, #4]
 8004de0:	f000 f846 	bl	8004e70 <_vfiprintf_r>
 8004de4:	bc1e      	pop	{r1, r2, r3, r4}
 8004de6:	bc08      	pop	{r3}
 8004de8:	b003      	add	sp, #12
 8004dea:	4718      	bx	r3
 8004dec:	2000002c 	.word	0x2000002c

08004df0 <_sbrk_r>:
 8004df0:	2300      	movs	r3, #0
 8004df2:	b570      	push	{r4, r5, r6, lr}
 8004df4:	4d06      	ldr	r5, [pc, #24]	@ (8004e10 <_sbrk_r+0x20>)
 8004df6:	0004      	movs	r4, r0
 8004df8:	0008      	movs	r0, r1
 8004dfa:	602b      	str	r3, [r5, #0]
 8004dfc:	f7fc ff76 	bl	8001cec <_sbrk>
 8004e00:	1c43      	adds	r3, r0, #1
 8004e02:	d103      	bne.n	8004e0c <_sbrk_r+0x1c>
 8004e04:	682b      	ldr	r3, [r5, #0]
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	d000      	beq.n	8004e0c <_sbrk_r+0x1c>
 8004e0a:	6023      	str	r3, [r4, #0]
 8004e0c:	bd70      	pop	{r4, r5, r6, pc}
 8004e0e:	46c0      	nop			@ (mov r8, r8)
 8004e10:	2000041c 	.word	0x2000041c

08004e14 <abort>:
 8004e14:	2006      	movs	r0, #6
 8004e16:	b510      	push	{r4, lr}
 8004e18:	f000 fb8e 	bl	8005538 <raise>
 8004e1c:	2001      	movs	r0, #1
 8004e1e:	f7fc fef3 	bl	8001c08 <_exit>

08004e22 <__sfputc_r>:
 8004e22:	6893      	ldr	r3, [r2, #8]
 8004e24:	b510      	push	{r4, lr}
 8004e26:	3b01      	subs	r3, #1
 8004e28:	6093      	str	r3, [r2, #8]
 8004e2a:	2b00      	cmp	r3, #0
 8004e2c:	da04      	bge.n	8004e38 <__sfputc_r+0x16>
 8004e2e:	6994      	ldr	r4, [r2, #24]
 8004e30:	42a3      	cmp	r3, r4
 8004e32:	db07      	blt.n	8004e44 <__sfputc_r+0x22>
 8004e34:	290a      	cmp	r1, #10
 8004e36:	d005      	beq.n	8004e44 <__sfputc_r+0x22>
 8004e38:	6813      	ldr	r3, [r2, #0]
 8004e3a:	1c58      	adds	r0, r3, #1
 8004e3c:	6010      	str	r0, [r2, #0]
 8004e3e:	7019      	strb	r1, [r3, #0]
 8004e40:	0008      	movs	r0, r1
 8004e42:	bd10      	pop	{r4, pc}
 8004e44:	f000 faae 	bl	80053a4 <__swbuf_r>
 8004e48:	0001      	movs	r1, r0
 8004e4a:	e7f9      	b.n	8004e40 <__sfputc_r+0x1e>

08004e4c <__sfputs_r>:
 8004e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e4e:	0006      	movs	r6, r0
 8004e50:	000f      	movs	r7, r1
 8004e52:	0014      	movs	r4, r2
 8004e54:	18d5      	adds	r5, r2, r3
 8004e56:	42ac      	cmp	r4, r5
 8004e58:	d101      	bne.n	8004e5e <__sfputs_r+0x12>
 8004e5a:	2000      	movs	r0, #0
 8004e5c:	e007      	b.n	8004e6e <__sfputs_r+0x22>
 8004e5e:	7821      	ldrb	r1, [r4, #0]
 8004e60:	003a      	movs	r2, r7
 8004e62:	0030      	movs	r0, r6
 8004e64:	f7ff ffdd 	bl	8004e22 <__sfputc_r>
 8004e68:	3401      	adds	r4, #1
 8004e6a:	1c43      	adds	r3, r0, #1
 8004e6c:	d1f3      	bne.n	8004e56 <__sfputs_r+0xa>
 8004e6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004e70 <_vfiprintf_r>:
 8004e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e72:	b0a1      	sub	sp, #132	@ 0x84
 8004e74:	000f      	movs	r7, r1
 8004e76:	0015      	movs	r5, r2
 8004e78:	001e      	movs	r6, r3
 8004e7a:	9003      	str	r0, [sp, #12]
 8004e7c:	2800      	cmp	r0, #0
 8004e7e:	d004      	beq.n	8004e8a <_vfiprintf_r+0x1a>
 8004e80:	6a03      	ldr	r3, [r0, #32]
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d101      	bne.n	8004e8a <_vfiprintf_r+0x1a>
 8004e86:	f7ff fcb3 	bl	80047f0 <__sinit>
 8004e8a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004e8c:	07db      	lsls	r3, r3, #31
 8004e8e:	d405      	bmi.n	8004e9c <_vfiprintf_r+0x2c>
 8004e90:	89bb      	ldrh	r3, [r7, #12]
 8004e92:	059b      	lsls	r3, r3, #22
 8004e94:	d402      	bmi.n	8004e9c <_vfiprintf_r+0x2c>
 8004e96:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8004e98:	f7ff fdb9 	bl	8004a0e <__retarget_lock_acquire_recursive>
 8004e9c:	89bb      	ldrh	r3, [r7, #12]
 8004e9e:	071b      	lsls	r3, r3, #28
 8004ea0:	d502      	bpl.n	8004ea8 <_vfiprintf_r+0x38>
 8004ea2:	693b      	ldr	r3, [r7, #16]
 8004ea4:	2b00      	cmp	r3, #0
 8004ea6:	d113      	bne.n	8004ed0 <_vfiprintf_r+0x60>
 8004ea8:	0039      	movs	r1, r7
 8004eaa:	9803      	ldr	r0, [sp, #12]
 8004eac:	f000 fabc 	bl	8005428 <__swsetup_r>
 8004eb0:	2800      	cmp	r0, #0
 8004eb2:	d00d      	beq.n	8004ed0 <_vfiprintf_r+0x60>
 8004eb4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004eb6:	07db      	lsls	r3, r3, #31
 8004eb8:	d503      	bpl.n	8004ec2 <_vfiprintf_r+0x52>
 8004eba:	2001      	movs	r0, #1
 8004ebc:	4240      	negs	r0, r0
 8004ebe:	b021      	add	sp, #132	@ 0x84
 8004ec0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004ec2:	89bb      	ldrh	r3, [r7, #12]
 8004ec4:	059b      	lsls	r3, r3, #22
 8004ec6:	d4f8      	bmi.n	8004eba <_vfiprintf_r+0x4a>
 8004ec8:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8004eca:	f7ff fda1 	bl	8004a10 <__retarget_lock_release_recursive>
 8004ece:	e7f4      	b.n	8004eba <_vfiprintf_r+0x4a>
 8004ed0:	2300      	movs	r3, #0
 8004ed2:	ac08      	add	r4, sp, #32
 8004ed4:	6163      	str	r3, [r4, #20]
 8004ed6:	3320      	adds	r3, #32
 8004ed8:	7663      	strb	r3, [r4, #25]
 8004eda:	3310      	adds	r3, #16
 8004edc:	76a3      	strb	r3, [r4, #26]
 8004ede:	9607      	str	r6, [sp, #28]
 8004ee0:	002e      	movs	r6, r5
 8004ee2:	7833      	ldrb	r3, [r6, #0]
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	d001      	beq.n	8004eec <_vfiprintf_r+0x7c>
 8004ee8:	2b25      	cmp	r3, #37	@ 0x25
 8004eea:	d148      	bne.n	8004f7e <_vfiprintf_r+0x10e>
 8004eec:	1b73      	subs	r3, r6, r5
 8004eee:	9305      	str	r3, [sp, #20]
 8004ef0:	42ae      	cmp	r6, r5
 8004ef2:	d00b      	beq.n	8004f0c <_vfiprintf_r+0x9c>
 8004ef4:	002a      	movs	r2, r5
 8004ef6:	0039      	movs	r1, r7
 8004ef8:	9803      	ldr	r0, [sp, #12]
 8004efa:	f7ff ffa7 	bl	8004e4c <__sfputs_r>
 8004efe:	3001      	adds	r0, #1
 8004f00:	d100      	bne.n	8004f04 <_vfiprintf_r+0x94>
 8004f02:	e0ae      	b.n	8005062 <_vfiprintf_r+0x1f2>
 8004f04:	6963      	ldr	r3, [r4, #20]
 8004f06:	9a05      	ldr	r2, [sp, #20]
 8004f08:	189b      	adds	r3, r3, r2
 8004f0a:	6163      	str	r3, [r4, #20]
 8004f0c:	7833      	ldrb	r3, [r6, #0]
 8004f0e:	2b00      	cmp	r3, #0
 8004f10:	d100      	bne.n	8004f14 <_vfiprintf_r+0xa4>
 8004f12:	e0a6      	b.n	8005062 <_vfiprintf_r+0x1f2>
 8004f14:	2201      	movs	r2, #1
 8004f16:	2300      	movs	r3, #0
 8004f18:	4252      	negs	r2, r2
 8004f1a:	6062      	str	r2, [r4, #4]
 8004f1c:	a904      	add	r1, sp, #16
 8004f1e:	3254      	adds	r2, #84	@ 0x54
 8004f20:	1852      	adds	r2, r2, r1
 8004f22:	1c75      	adds	r5, r6, #1
 8004f24:	6023      	str	r3, [r4, #0]
 8004f26:	60e3      	str	r3, [r4, #12]
 8004f28:	60a3      	str	r3, [r4, #8]
 8004f2a:	7013      	strb	r3, [r2, #0]
 8004f2c:	65a3      	str	r3, [r4, #88]	@ 0x58
 8004f2e:	4b59      	ldr	r3, [pc, #356]	@ (8005094 <_vfiprintf_r+0x224>)
 8004f30:	2205      	movs	r2, #5
 8004f32:	0018      	movs	r0, r3
 8004f34:	7829      	ldrb	r1, [r5, #0]
 8004f36:	9305      	str	r3, [sp, #20]
 8004f38:	f000 fb1e 	bl	8005578 <memchr>
 8004f3c:	1c6e      	adds	r6, r5, #1
 8004f3e:	2800      	cmp	r0, #0
 8004f40:	d11f      	bne.n	8004f82 <_vfiprintf_r+0x112>
 8004f42:	6822      	ldr	r2, [r4, #0]
 8004f44:	06d3      	lsls	r3, r2, #27
 8004f46:	d504      	bpl.n	8004f52 <_vfiprintf_r+0xe2>
 8004f48:	2353      	movs	r3, #83	@ 0x53
 8004f4a:	a904      	add	r1, sp, #16
 8004f4c:	185b      	adds	r3, r3, r1
 8004f4e:	2120      	movs	r1, #32
 8004f50:	7019      	strb	r1, [r3, #0]
 8004f52:	0713      	lsls	r3, r2, #28
 8004f54:	d504      	bpl.n	8004f60 <_vfiprintf_r+0xf0>
 8004f56:	2353      	movs	r3, #83	@ 0x53
 8004f58:	a904      	add	r1, sp, #16
 8004f5a:	185b      	adds	r3, r3, r1
 8004f5c:	212b      	movs	r1, #43	@ 0x2b
 8004f5e:	7019      	strb	r1, [r3, #0]
 8004f60:	782b      	ldrb	r3, [r5, #0]
 8004f62:	2b2a      	cmp	r3, #42	@ 0x2a
 8004f64:	d016      	beq.n	8004f94 <_vfiprintf_r+0x124>
 8004f66:	002e      	movs	r6, r5
 8004f68:	2100      	movs	r1, #0
 8004f6a:	200a      	movs	r0, #10
 8004f6c:	68e3      	ldr	r3, [r4, #12]
 8004f6e:	7832      	ldrb	r2, [r6, #0]
 8004f70:	1c75      	adds	r5, r6, #1
 8004f72:	3a30      	subs	r2, #48	@ 0x30
 8004f74:	2a09      	cmp	r2, #9
 8004f76:	d950      	bls.n	800501a <_vfiprintf_r+0x1aa>
 8004f78:	2900      	cmp	r1, #0
 8004f7a:	d111      	bne.n	8004fa0 <_vfiprintf_r+0x130>
 8004f7c:	e017      	b.n	8004fae <_vfiprintf_r+0x13e>
 8004f7e:	3601      	adds	r6, #1
 8004f80:	e7af      	b.n	8004ee2 <_vfiprintf_r+0x72>
 8004f82:	9b05      	ldr	r3, [sp, #20]
 8004f84:	6822      	ldr	r2, [r4, #0]
 8004f86:	1ac0      	subs	r0, r0, r3
 8004f88:	2301      	movs	r3, #1
 8004f8a:	4083      	lsls	r3, r0
 8004f8c:	4313      	orrs	r3, r2
 8004f8e:	0035      	movs	r5, r6
 8004f90:	6023      	str	r3, [r4, #0]
 8004f92:	e7cc      	b.n	8004f2e <_vfiprintf_r+0xbe>
 8004f94:	9b07      	ldr	r3, [sp, #28]
 8004f96:	1d19      	adds	r1, r3, #4
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	9107      	str	r1, [sp, #28]
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	db01      	blt.n	8004fa4 <_vfiprintf_r+0x134>
 8004fa0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004fa2:	e004      	b.n	8004fae <_vfiprintf_r+0x13e>
 8004fa4:	425b      	negs	r3, r3
 8004fa6:	60e3      	str	r3, [r4, #12]
 8004fa8:	2302      	movs	r3, #2
 8004faa:	4313      	orrs	r3, r2
 8004fac:	6023      	str	r3, [r4, #0]
 8004fae:	7833      	ldrb	r3, [r6, #0]
 8004fb0:	2b2e      	cmp	r3, #46	@ 0x2e
 8004fb2:	d10c      	bne.n	8004fce <_vfiprintf_r+0x15e>
 8004fb4:	7873      	ldrb	r3, [r6, #1]
 8004fb6:	2b2a      	cmp	r3, #42	@ 0x2a
 8004fb8:	d134      	bne.n	8005024 <_vfiprintf_r+0x1b4>
 8004fba:	9b07      	ldr	r3, [sp, #28]
 8004fbc:	3602      	adds	r6, #2
 8004fbe:	1d1a      	adds	r2, r3, #4
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	9207      	str	r2, [sp, #28]
 8004fc4:	2b00      	cmp	r3, #0
 8004fc6:	da01      	bge.n	8004fcc <_vfiprintf_r+0x15c>
 8004fc8:	2301      	movs	r3, #1
 8004fca:	425b      	negs	r3, r3
 8004fcc:	9309      	str	r3, [sp, #36]	@ 0x24
 8004fce:	4d32      	ldr	r5, [pc, #200]	@ (8005098 <_vfiprintf_r+0x228>)
 8004fd0:	2203      	movs	r2, #3
 8004fd2:	0028      	movs	r0, r5
 8004fd4:	7831      	ldrb	r1, [r6, #0]
 8004fd6:	f000 facf 	bl	8005578 <memchr>
 8004fda:	2800      	cmp	r0, #0
 8004fdc:	d006      	beq.n	8004fec <_vfiprintf_r+0x17c>
 8004fde:	2340      	movs	r3, #64	@ 0x40
 8004fe0:	1b40      	subs	r0, r0, r5
 8004fe2:	4083      	lsls	r3, r0
 8004fe4:	6822      	ldr	r2, [r4, #0]
 8004fe6:	3601      	adds	r6, #1
 8004fe8:	4313      	orrs	r3, r2
 8004fea:	6023      	str	r3, [r4, #0]
 8004fec:	7831      	ldrb	r1, [r6, #0]
 8004fee:	2206      	movs	r2, #6
 8004ff0:	482a      	ldr	r0, [pc, #168]	@ (800509c <_vfiprintf_r+0x22c>)
 8004ff2:	1c75      	adds	r5, r6, #1
 8004ff4:	7621      	strb	r1, [r4, #24]
 8004ff6:	f000 fabf 	bl	8005578 <memchr>
 8004ffa:	2800      	cmp	r0, #0
 8004ffc:	d040      	beq.n	8005080 <_vfiprintf_r+0x210>
 8004ffe:	4b28      	ldr	r3, [pc, #160]	@ (80050a0 <_vfiprintf_r+0x230>)
 8005000:	2b00      	cmp	r3, #0
 8005002:	d122      	bne.n	800504a <_vfiprintf_r+0x1da>
 8005004:	2207      	movs	r2, #7
 8005006:	9b07      	ldr	r3, [sp, #28]
 8005008:	3307      	adds	r3, #7
 800500a:	4393      	bics	r3, r2
 800500c:	3308      	adds	r3, #8
 800500e:	9307      	str	r3, [sp, #28]
 8005010:	6963      	ldr	r3, [r4, #20]
 8005012:	9a04      	ldr	r2, [sp, #16]
 8005014:	189b      	adds	r3, r3, r2
 8005016:	6163      	str	r3, [r4, #20]
 8005018:	e762      	b.n	8004ee0 <_vfiprintf_r+0x70>
 800501a:	4343      	muls	r3, r0
 800501c:	002e      	movs	r6, r5
 800501e:	2101      	movs	r1, #1
 8005020:	189b      	adds	r3, r3, r2
 8005022:	e7a4      	b.n	8004f6e <_vfiprintf_r+0xfe>
 8005024:	2300      	movs	r3, #0
 8005026:	200a      	movs	r0, #10
 8005028:	0019      	movs	r1, r3
 800502a:	3601      	adds	r6, #1
 800502c:	6063      	str	r3, [r4, #4]
 800502e:	7832      	ldrb	r2, [r6, #0]
 8005030:	1c75      	adds	r5, r6, #1
 8005032:	3a30      	subs	r2, #48	@ 0x30
 8005034:	2a09      	cmp	r2, #9
 8005036:	d903      	bls.n	8005040 <_vfiprintf_r+0x1d0>
 8005038:	2b00      	cmp	r3, #0
 800503a:	d0c8      	beq.n	8004fce <_vfiprintf_r+0x15e>
 800503c:	9109      	str	r1, [sp, #36]	@ 0x24
 800503e:	e7c6      	b.n	8004fce <_vfiprintf_r+0x15e>
 8005040:	4341      	muls	r1, r0
 8005042:	002e      	movs	r6, r5
 8005044:	2301      	movs	r3, #1
 8005046:	1889      	adds	r1, r1, r2
 8005048:	e7f1      	b.n	800502e <_vfiprintf_r+0x1be>
 800504a:	aa07      	add	r2, sp, #28
 800504c:	9200      	str	r2, [sp, #0]
 800504e:	0021      	movs	r1, r4
 8005050:	003a      	movs	r2, r7
 8005052:	4b14      	ldr	r3, [pc, #80]	@ (80050a4 <_vfiprintf_r+0x234>)
 8005054:	9803      	ldr	r0, [sp, #12]
 8005056:	e000      	b.n	800505a <_vfiprintf_r+0x1ea>
 8005058:	bf00      	nop
 800505a:	9004      	str	r0, [sp, #16]
 800505c:	9b04      	ldr	r3, [sp, #16]
 800505e:	3301      	adds	r3, #1
 8005060:	d1d6      	bne.n	8005010 <_vfiprintf_r+0x1a0>
 8005062:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005064:	07db      	lsls	r3, r3, #31
 8005066:	d405      	bmi.n	8005074 <_vfiprintf_r+0x204>
 8005068:	89bb      	ldrh	r3, [r7, #12]
 800506a:	059b      	lsls	r3, r3, #22
 800506c:	d402      	bmi.n	8005074 <_vfiprintf_r+0x204>
 800506e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8005070:	f7ff fcce 	bl	8004a10 <__retarget_lock_release_recursive>
 8005074:	89bb      	ldrh	r3, [r7, #12]
 8005076:	065b      	lsls	r3, r3, #25
 8005078:	d500      	bpl.n	800507c <_vfiprintf_r+0x20c>
 800507a:	e71e      	b.n	8004eba <_vfiprintf_r+0x4a>
 800507c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800507e:	e71e      	b.n	8004ebe <_vfiprintf_r+0x4e>
 8005080:	aa07      	add	r2, sp, #28
 8005082:	9200      	str	r2, [sp, #0]
 8005084:	0021      	movs	r1, r4
 8005086:	003a      	movs	r2, r7
 8005088:	4b06      	ldr	r3, [pc, #24]	@ (80050a4 <_vfiprintf_r+0x234>)
 800508a:	9803      	ldr	r0, [sp, #12]
 800508c:	f000 f87c 	bl	8005188 <_printf_i>
 8005090:	e7e3      	b.n	800505a <_vfiprintf_r+0x1ea>
 8005092:	46c0      	nop			@ (mov r8, r8)
 8005094:	080057ab 	.word	0x080057ab
 8005098:	080057b1 	.word	0x080057b1
 800509c:	080057b5 	.word	0x080057b5
 80050a0:	00000000 	.word	0x00000000
 80050a4:	08004e4d 	.word	0x08004e4d

080050a8 <_printf_common>:
 80050a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80050aa:	0016      	movs	r6, r2
 80050ac:	9301      	str	r3, [sp, #4]
 80050ae:	688a      	ldr	r2, [r1, #8]
 80050b0:	690b      	ldr	r3, [r1, #16]
 80050b2:	000c      	movs	r4, r1
 80050b4:	9000      	str	r0, [sp, #0]
 80050b6:	4293      	cmp	r3, r2
 80050b8:	da00      	bge.n	80050bc <_printf_common+0x14>
 80050ba:	0013      	movs	r3, r2
 80050bc:	0022      	movs	r2, r4
 80050be:	6033      	str	r3, [r6, #0]
 80050c0:	3243      	adds	r2, #67	@ 0x43
 80050c2:	7812      	ldrb	r2, [r2, #0]
 80050c4:	2a00      	cmp	r2, #0
 80050c6:	d001      	beq.n	80050cc <_printf_common+0x24>
 80050c8:	3301      	adds	r3, #1
 80050ca:	6033      	str	r3, [r6, #0]
 80050cc:	6823      	ldr	r3, [r4, #0]
 80050ce:	069b      	lsls	r3, r3, #26
 80050d0:	d502      	bpl.n	80050d8 <_printf_common+0x30>
 80050d2:	6833      	ldr	r3, [r6, #0]
 80050d4:	3302      	adds	r3, #2
 80050d6:	6033      	str	r3, [r6, #0]
 80050d8:	6822      	ldr	r2, [r4, #0]
 80050da:	2306      	movs	r3, #6
 80050dc:	0015      	movs	r5, r2
 80050de:	401d      	ands	r5, r3
 80050e0:	421a      	tst	r2, r3
 80050e2:	d027      	beq.n	8005134 <_printf_common+0x8c>
 80050e4:	0023      	movs	r3, r4
 80050e6:	3343      	adds	r3, #67	@ 0x43
 80050e8:	781b      	ldrb	r3, [r3, #0]
 80050ea:	1e5a      	subs	r2, r3, #1
 80050ec:	4193      	sbcs	r3, r2
 80050ee:	6822      	ldr	r2, [r4, #0]
 80050f0:	0692      	lsls	r2, r2, #26
 80050f2:	d430      	bmi.n	8005156 <_printf_common+0xae>
 80050f4:	0022      	movs	r2, r4
 80050f6:	9901      	ldr	r1, [sp, #4]
 80050f8:	9800      	ldr	r0, [sp, #0]
 80050fa:	9d08      	ldr	r5, [sp, #32]
 80050fc:	3243      	adds	r2, #67	@ 0x43
 80050fe:	47a8      	blx	r5
 8005100:	3001      	adds	r0, #1
 8005102:	d025      	beq.n	8005150 <_printf_common+0xa8>
 8005104:	2206      	movs	r2, #6
 8005106:	6823      	ldr	r3, [r4, #0]
 8005108:	2500      	movs	r5, #0
 800510a:	4013      	ands	r3, r2
 800510c:	2b04      	cmp	r3, #4
 800510e:	d105      	bne.n	800511c <_printf_common+0x74>
 8005110:	6833      	ldr	r3, [r6, #0]
 8005112:	68e5      	ldr	r5, [r4, #12]
 8005114:	1aed      	subs	r5, r5, r3
 8005116:	43eb      	mvns	r3, r5
 8005118:	17db      	asrs	r3, r3, #31
 800511a:	401d      	ands	r5, r3
 800511c:	68a3      	ldr	r3, [r4, #8]
 800511e:	6922      	ldr	r2, [r4, #16]
 8005120:	4293      	cmp	r3, r2
 8005122:	dd01      	ble.n	8005128 <_printf_common+0x80>
 8005124:	1a9b      	subs	r3, r3, r2
 8005126:	18ed      	adds	r5, r5, r3
 8005128:	2600      	movs	r6, #0
 800512a:	42b5      	cmp	r5, r6
 800512c:	d120      	bne.n	8005170 <_printf_common+0xc8>
 800512e:	2000      	movs	r0, #0
 8005130:	e010      	b.n	8005154 <_printf_common+0xac>
 8005132:	3501      	adds	r5, #1
 8005134:	68e3      	ldr	r3, [r4, #12]
 8005136:	6832      	ldr	r2, [r6, #0]
 8005138:	1a9b      	subs	r3, r3, r2
 800513a:	42ab      	cmp	r3, r5
 800513c:	ddd2      	ble.n	80050e4 <_printf_common+0x3c>
 800513e:	0022      	movs	r2, r4
 8005140:	2301      	movs	r3, #1
 8005142:	9901      	ldr	r1, [sp, #4]
 8005144:	9800      	ldr	r0, [sp, #0]
 8005146:	9f08      	ldr	r7, [sp, #32]
 8005148:	3219      	adds	r2, #25
 800514a:	47b8      	blx	r7
 800514c:	3001      	adds	r0, #1
 800514e:	d1f0      	bne.n	8005132 <_printf_common+0x8a>
 8005150:	2001      	movs	r0, #1
 8005152:	4240      	negs	r0, r0
 8005154:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005156:	2030      	movs	r0, #48	@ 0x30
 8005158:	18e1      	adds	r1, r4, r3
 800515a:	3143      	adds	r1, #67	@ 0x43
 800515c:	7008      	strb	r0, [r1, #0]
 800515e:	0021      	movs	r1, r4
 8005160:	1c5a      	adds	r2, r3, #1
 8005162:	3145      	adds	r1, #69	@ 0x45
 8005164:	7809      	ldrb	r1, [r1, #0]
 8005166:	18a2      	adds	r2, r4, r2
 8005168:	3243      	adds	r2, #67	@ 0x43
 800516a:	3302      	adds	r3, #2
 800516c:	7011      	strb	r1, [r2, #0]
 800516e:	e7c1      	b.n	80050f4 <_printf_common+0x4c>
 8005170:	0022      	movs	r2, r4
 8005172:	2301      	movs	r3, #1
 8005174:	9901      	ldr	r1, [sp, #4]
 8005176:	9800      	ldr	r0, [sp, #0]
 8005178:	9f08      	ldr	r7, [sp, #32]
 800517a:	321a      	adds	r2, #26
 800517c:	47b8      	blx	r7
 800517e:	3001      	adds	r0, #1
 8005180:	d0e6      	beq.n	8005150 <_printf_common+0xa8>
 8005182:	3601      	adds	r6, #1
 8005184:	e7d1      	b.n	800512a <_printf_common+0x82>
	...

08005188 <_printf_i>:
 8005188:	b5f0      	push	{r4, r5, r6, r7, lr}
 800518a:	b08b      	sub	sp, #44	@ 0x2c
 800518c:	9206      	str	r2, [sp, #24]
 800518e:	000a      	movs	r2, r1
 8005190:	3243      	adds	r2, #67	@ 0x43
 8005192:	9307      	str	r3, [sp, #28]
 8005194:	9005      	str	r0, [sp, #20]
 8005196:	9203      	str	r2, [sp, #12]
 8005198:	7e0a      	ldrb	r2, [r1, #24]
 800519a:	000c      	movs	r4, r1
 800519c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800519e:	2a78      	cmp	r2, #120	@ 0x78
 80051a0:	d809      	bhi.n	80051b6 <_printf_i+0x2e>
 80051a2:	2a62      	cmp	r2, #98	@ 0x62
 80051a4:	d80b      	bhi.n	80051be <_printf_i+0x36>
 80051a6:	2a00      	cmp	r2, #0
 80051a8:	d100      	bne.n	80051ac <_printf_i+0x24>
 80051aa:	e0bc      	b.n	8005326 <_printf_i+0x19e>
 80051ac:	497b      	ldr	r1, [pc, #492]	@ (800539c <_printf_i+0x214>)
 80051ae:	9104      	str	r1, [sp, #16]
 80051b0:	2a58      	cmp	r2, #88	@ 0x58
 80051b2:	d100      	bne.n	80051b6 <_printf_i+0x2e>
 80051b4:	e090      	b.n	80052d8 <_printf_i+0x150>
 80051b6:	0025      	movs	r5, r4
 80051b8:	3542      	adds	r5, #66	@ 0x42
 80051ba:	702a      	strb	r2, [r5, #0]
 80051bc:	e022      	b.n	8005204 <_printf_i+0x7c>
 80051be:	0010      	movs	r0, r2
 80051c0:	3863      	subs	r0, #99	@ 0x63
 80051c2:	2815      	cmp	r0, #21
 80051c4:	d8f7      	bhi.n	80051b6 <_printf_i+0x2e>
 80051c6:	f7fa ff9f 	bl	8000108 <__gnu_thumb1_case_shi>
 80051ca:	0016      	.short	0x0016
 80051cc:	fff6001f 	.word	0xfff6001f
 80051d0:	fff6fff6 	.word	0xfff6fff6
 80051d4:	001ffff6 	.word	0x001ffff6
 80051d8:	fff6fff6 	.word	0xfff6fff6
 80051dc:	fff6fff6 	.word	0xfff6fff6
 80051e0:	003600a1 	.word	0x003600a1
 80051e4:	fff60080 	.word	0xfff60080
 80051e8:	00b2fff6 	.word	0x00b2fff6
 80051ec:	0036fff6 	.word	0x0036fff6
 80051f0:	fff6fff6 	.word	0xfff6fff6
 80051f4:	0084      	.short	0x0084
 80051f6:	0025      	movs	r5, r4
 80051f8:	681a      	ldr	r2, [r3, #0]
 80051fa:	3542      	adds	r5, #66	@ 0x42
 80051fc:	1d11      	adds	r1, r2, #4
 80051fe:	6019      	str	r1, [r3, #0]
 8005200:	6813      	ldr	r3, [r2, #0]
 8005202:	702b      	strb	r3, [r5, #0]
 8005204:	2301      	movs	r3, #1
 8005206:	e0a0      	b.n	800534a <_printf_i+0x1c2>
 8005208:	6818      	ldr	r0, [r3, #0]
 800520a:	6809      	ldr	r1, [r1, #0]
 800520c:	1d02      	adds	r2, r0, #4
 800520e:	060d      	lsls	r5, r1, #24
 8005210:	d50b      	bpl.n	800522a <_printf_i+0xa2>
 8005212:	6806      	ldr	r6, [r0, #0]
 8005214:	601a      	str	r2, [r3, #0]
 8005216:	2e00      	cmp	r6, #0
 8005218:	da03      	bge.n	8005222 <_printf_i+0x9a>
 800521a:	232d      	movs	r3, #45	@ 0x2d
 800521c:	9a03      	ldr	r2, [sp, #12]
 800521e:	4276      	negs	r6, r6
 8005220:	7013      	strb	r3, [r2, #0]
 8005222:	4b5e      	ldr	r3, [pc, #376]	@ (800539c <_printf_i+0x214>)
 8005224:	270a      	movs	r7, #10
 8005226:	9304      	str	r3, [sp, #16]
 8005228:	e018      	b.n	800525c <_printf_i+0xd4>
 800522a:	6806      	ldr	r6, [r0, #0]
 800522c:	601a      	str	r2, [r3, #0]
 800522e:	0649      	lsls	r1, r1, #25
 8005230:	d5f1      	bpl.n	8005216 <_printf_i+0x8e>
 8005232:	b236      	sxth	r6, r6
 8005234:	e7ef      	b.n	8005216 <_printf_i+0x8e>
 8005236:	6808      	ldr	r0, [r1, #0]
 8005238:	6819      	ldr	r1, [r3, #0]
 800523a:	c940      	ldmia	r1!, {r6}
 800523c:	0605      	lsls	r5, r0, #24
 800523e:	d402      	bmi.n	8005246 <_printf_i+0xbe>
 8005240:	0640      	lsls	r0, r0, #25
 8005242:	d500      	bpl.n	8005246 <_printf_i+0xbe>
 8005244:	b2b6      	uxth	r6, r6
 8005246:	6019      	str	r1, [r3, #0]
 8005248:	4b54      	ldr	r3, [pc, #336]	@ (800539c <_printf_i+0x214>)
 800524a:	270a      	movs	r7, #10
 800524c:	9304      	str	r3, [sp, #16]
 800524e:	2a6f      	cmp	r2, #111	@ 0x6f
 8005250:	d100      	bne.n	8005254 <_printf_i+0xcc>
 8005252:	3f02      	subs	r7, #2
 8005254:	0023      	movs	r3, r4
 8005256:	2200      	movs	r2, #0
 8005258:	3343      	adds	r3, #67	@ 0x43
 800525a:	701a      	strb	r2, [r3, #0]
 800525c:	6863      	ldr	r3, [r4, #4]
 800525e:	60a3      	str	r3, [r4, #8]
 8005260:	2b00      	cmp	r3, #0
 8005262:	db03      	blt.n	800526c <_printf_i+0xe4>
 8005264:	2104      	movs	r1, #4
 8005266:	6822      	ldr	r2, [r4, #0]
 8005268:	438a      	bics	r2, r1
 800526a:	6022      	str	r2, [r4, #0]
 800526c:	2e00      	cmp	r6, #0
 800526e:	d102      	bne.n	8005276 <_printf_i+0xee>
 8005270:	9d03      	ldr	r5, [sp, #12]
 8005272:	2b00      	cmp	r3, #0
 8005274:	d00c      	beq.n	8005290 <_printf_i+0x108>
 8005276:	9d03      	ldr	r5, [sp, #12]
 8005278:	0030      	movs	r0, r6
 800527a:	0039      	movs	r1, r7
 800527c:	f7fa ffd4 	bl	8000228 <__aeabi_uidivmod>
 8005280:	9b04      	ldr	r3, [sp, #16]
 8005282:	3d01      	subs	r5, #1
 8005284:	5c5b      	ldrb	r3, [r3, r1]
 8005286:	702b      	strb	r3, [r5, #0]
 8005288:	0033      	movs	r3, r6
 800528a:	0006      	movs	r6, r0
 800528c:	429f      	cmp	r7, r3
 800528e:	d9f3      	bls.n	8005278 <_printf_i+0xf0>
 8005290:	2f08      	cmp	r7, #8
 8005292:	d109      	bne.n	80052a8 <_printf_i+0x120>
 8005294:	6823      	ldr	r3, [r4, #0]
 8005296:	07db      	lsls	r3, r3, #31
 8005298:	d506      	bpl.n	80052a8 <_printf_i+0x120>
 800529a:	6862      	ldr	r2, [r4, #4]
 800529c:	6923      	ldr	r3, [r4, #16]
 800529e:	429a      	cmp	r2, r3
 80052a0:	dc02      	bgt.n	80052a8 <_printf_i+0x120>
 80052a2:	2330      	movs	r3, #48	@ 0x30
 80052a4:	3d01      	subs	r5, #1
 80052a6:	702b      	strb	r3, [r5, #0]
 80052a8:	9b03      	ldr	r3, [sp, #12]
 80052aa:	1b5b      	subs	r3, r3, r5
 80052ac:	6123      	str	r3, [r4, #16]
 80052ae:	9b07      	ldr	r3, [sp, #28]
 80052b0:	0021      	movs	r1, r4
 80052b2:	9300      	str	r3, [sp, #0]
 80052b4:	9805      	ldr	r0, [sp, #20]
 80052b6:	9b06      	ldr	r3, [sp, #24]
 80052b8:	aa09      	add	r2, sp, #36	@ 0x24
 80052ba:	f7ff fef5 	bl	80050a8 <_printf_common>
 80052be:	3001      	adds	r0, #1
 80052c0:	d148      	bne.n	8005354 <_printf_i+0x1cc>
 80052c2:	2001      	movs	r0, #1
 80052c4:	4240      	negs	r0, r0
 80052c6:	b00b      	add	sp, #44	@ 0x2c
 80052c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80052ca:	2220      	movs	r2, #32
 80052cc:	6809      	ldr	r1, [r1, #0]
 80052ce:	430a      	orrs	r2, r1
 80052d0:	6022      	str	r2, [r4, #0]
 80052d2:	2278      	movs	r2, #120	@ 0x78
 80052d4:	4932      	ldr	r1, [pc, #200]	@ (80053a0 <_printf_i+0x218>)
 80052d6:	9104      	str	r1, [sp, #16]
 80052d8:	0021      	movs	r1, r4
 80052da:	3145      	adds	r1, #69	@ 0x45
 80052dc:	700a      	strb	r2, [r1, #0]
 80052de:	6819      	ldr	r1, [r3, #0]
 80052e0:	6822      	ldr	r2, [r4, #0]
 80052e2:	c940      	ldmia	r1!, {r6}
 80052e4:	0610      	lsls	r0, r2, #24
 80052e6:	d402      	bmi.n	80052ee <_printf_i+0x166>
 80052e8:	0650      	lsls	r0, r2, #25
 80052ea:	d500      	bpl.n	80052ee <_printf_i+0x166>
 80052ec:	b2b6      	uxth	r6, r6
 80052ee:	6019      	str	r1, [r3, #0]
 80052f0:	07d3      	lsls	r3, r2, #31
 80052f2:	d502      	bpl.n	80052fa <_printf_i+0x172>
 80052f4:	2320      	movs	r3, #32
 80052f6:	4313      	orrs	r3, r2
 80052f8:	6023      	str	r3, [r4, #0]
 80052fa:	2e00      	cmp	r6, #0
 80052fc:	d001      	beq.n	8005302 <_printf_i+0x17a>
 80052fe:	2710      	movs	r7, #16
 8005300:	e7a8      	b.n	8005254 <_printf_i+0xcc>
 8005302:	2220      	movs	r2, #32
 8005304:	6823      	ldr	r3, [r4, #0]
 8005306:	4393      	bics	r3, r2
 8005308:	6023      	str	r3, [r4, #0]
 800530a:	e7f8      	b.n	80052fe <_printf_i+0x176>
 800530c:	681a      	ldr	r2, [r3, #0]
 800530e:	680d      	ldr	r5, [r1, #0]
 8005310:	1d10      	adds	r0, r2, #4
 8005312:	6949      	ldr	r1, [r1, #20]
 8005314:	6018      	str	r0, [r3, #0]
 8005316:	6813      	ldr	r3, [r2, #0]
 8005318:	062e      	lsls	r6, r5, #24
 800531a:	d501      	bpl.n	8005320 <_printf_i+0x198>
 800531c:	6019      	str	r1, [r3, #0]
 800531e:	e002      	b.n	8005326 <_printf_i+0x19e>
 8005320:	066d      	lsls	r5, r5, #25
 8005322:	d5fb      	bpl.n	800531c <_printf_i+0x194>
 8005324:	8019      	strh	r1, [r3, #0]
 8005326:	2300      	movs	r3, #0
 8005328:	9d03      	ldr	r5, [sp, #12]
 800532a:	6123      	str	r3, [r4, #16]
 800532c:	e7bf      	b.n	80052ae <_printf_i+0x126>
 800532e:	681a      	ldr	r2, [r3, #0]
 8005330:	1d11      	adds	r1, r2, #4
 8005332:	6019      	str	r1, [r3, #0]
 8005334:	6815      	ldr	r5, [r2, #0]
 8005336:	2100      	movs	r1, #0
 8005338:	0028      	movs	r0, r5
 800533a:	6862      	ldr	r2, [r4, #4]
 800533c:	f000 f91c 	bl	8005578 <memchr>
 8005340:	2800      	cmp	r0, #0
 8005342:	d001      	beq.n	8005348 <_printf_i+0x1c0>
 8005344:	1b40      	subs	r0, r0, r5
 8005346:	6060      	str	r0, [r4, #4]
 8005348:	6863      	ldr	r3, [r4, #4]
 800534a:	6123      	str	r3, [r4, #16]
 800534c:	2300      	movs	r3, #0
 800534e:	9a03      	ldr	r2, [sp, #12]
 8005350:	7013      	strb	r3, [r2, #0]
 8005352:	e7ac      	b.n	80052ae <_printf_i+0x126>
 8005354:	002a      	movs	r2, r5
 8005356:	6923      	ldr	r3, [r4, #16]
 8005358:	9906      	ldr	r1, [sp, #24]
 800535a:	9805      	ldr	r0, [sp, #20]
 800535c:	9d07      	ldr	r5, [sp, #28]
 800535e:	47a8      	blx	r5
 8005360:	3001      	adds	r0, #1
 8005362:	d0ae      	beq.n	80052c2 <_printf_i+0x13a>
 8005364:	6823      	ldr	r3, [r4, #0]
 8005366:	079b      	lsls	r3, r3, #30
 8005368:	d415      	bmi.n	8005396 <_printf_i+0x20e>
 800536a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800536c:	68e0      	ldr	r0, [r4, #12]
 800536e:	4298      	cmp	r0, r3
 8005370:	daa9      	bge.n	80052c6 <_printf_i+0x13e>
 8005372:	0018      	movs	r0, r3
 8005374:	e7a7      	b.n	80052c6 <_printf_i+0x13e>
 8005376:	0022      	movs	r2, r4
 8005378:	2301      	movs	r3, #1
 800537a:	9906      	ldr	r1, [sp, #24]
 800537c:	9805      	ldr	r0, [sp, #20]
 800537e:	9e07      	ldr	r6, [sp, #28]
 8005380:	3219      	adds	r2, #25
 8005382:	47b0      	blx	r6
 8005384:	3001      	adds	r0, #1
 8005386:	d09c      	beq.n	80052c2 <_printf_i+0x13a>
 8005388:	3501      	adds	r5, #1
 800538a:	68e3      	ldr	r3, [r4, #12]
 800538c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800538e:	1a9b      	subs	r3, r3, r2
 8005390:	42ab      	cmp	r3, r5
 8005392:	dcf0      	bgt.n	8005376 <_printf_i+0x1ee>
 8005394:	e7e9      	b.n	800536a <_printf_i+0x1e2>
 8005396:	2500      	movs	r5, #0
 8005398:	e7f7      	b.n	800538a <_printf_i+0x202>
 800539a:	46c0      	nop			@ (mov r8, r8)
 800539c:	080057bc 	.word	0x080057bc
 80053a0:	080057cd 	.word	0x080057cd

080053a4 <__swbuf_r>:
 80053a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053a6:	0006      	movs	r6, r0
 80053a8:	000d      	movs	r5, r1
 80053aa:	0014      	movs	r4, r2
 80053ac:	2800      	cmp	r0, #0
 80053ae:	d004      	beq.n	80053ba <__swbuf_r+0x16>
 80053b0:	6a03      	ldr	r3, [r0, #32]
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d101      	bne.n	80053ba <__swbuf_r+0x16>
 80053b6:	f7ff fa1b 	bl	80047f0 <__sinit>
 80053ba:	69a3      	ldr	r3, [r4, #24]
 80053bc:	60a3      	str	r3, [r4, #8]
 80053be:	89a3      	ldrh	r3, [r4, #12]
 80053c0:	071b      	lsls	r3, r3, #28
 80053c2:	d502      	bpl.n	80053ca <__swbuf_r+0x26>
 80053c4:	6923      	ldr	r3, [r4, #16]
 80053c6:	2b00      	cmp	r3, #0
 80053c8:	d109      	bne.n	80053de <__swbuf_r+0x3a>
 80053ca:	0021      	movs	r1, r4
 80053cc:	0030      	movs	r0, r6
 80053ce:	f000 f82b 	bl	8005428 <__swsetup_r>
 80053d2:	2800      	cmp	r0, #0
 80053d4:	d003      	beq.n	80053de <__swbuf_r+0x3a>
 80053d6:	2501      	movs	r5, #1
 80053d8:	426d      	negs	r5, r5
 80053da:	0028      	movs	r0, r5
 80053dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80053de:	6923      	ldr	r3, [r4, #16]
 80053e0:	6820      	ldr	r0, [r4, #0]
 80053e2:	b2ef      	uxtb	r7, r5
 80053e4:	1ac0      	subs	r0, r0, r3
 80053e6:	6963      	ldr	r3, [r4, #20]
 80053e8:	b2ed      	uxtb	r5, r5
 80053ea:	4283      	cmp	r3, r0
 80053ec:	dc05      	bgt.n	80053fa <__swbuf_r+0x56>
 80053ee:	0021      	movs	r1, r4
 80053f0:	0030      	movs	r0, r6
 80053f2:	f7ff fcc1 	bl	8004d78 <_fflush_r>
 80053f6:	2800      	cmp	r0, #0
 80053f8:	d1ed      	bne.n	80053d6 <__swbuf_r+0x32>
 80053fa:	68a3      	ldr	r3, [r4, #8]
 80053fc:	3001      	adds	r0, #1
 80053fe:	3b01      	subs	r3, #1
 8005400:	60a3      	str	r3, [r4, #8]
 8005402:	6823      	ldr	r3, [r4, #0]
 8005404:	1c5a      	adds	r2, r3, #1
 8005406:	6022      	str	r2, [r4, #0]
 8005408:	701f      	strb	r7, [r3, #0]
 800540a:	6963      	ldr	r3, [r4, #20]
 800540c:	4283      	cmp	r3, r0
 800540e:	d004      	beq.n	800541a <__swbuf_r+0x76>
 8005410:	89a3      	ldrh	r3, [r4, #12]
 8005412:	07db      	lsls	r3, r3, #31
 8005414:	d5e1      	bpl.n	80053da <__swbuf_r+0x36>
 8005416:	2d0a      	cmp	r5, #10
 8005418:	d1df      	bne.n	80053da <__swbuf_r+0x36>
 800541a:	0021      	movs	r1, r4
 800541c:	0030      	movs	r0, r6
 800541e:	f7ff fcab 	bl	8004d78 <_fflush_r>
 8005422:	2800      	cmp	r0, #0
 8005424:	d0d9      	beq.n	80053da <__swbuf_r+0x36>
 8005426:	e7d6      	b.n	80053d6 <__swbuf_r+0x32>

08005428 <__swsetup_r>:
 8005428:	4b2d      	ldr	r3, [pc, #180]	@ (80054e0 <__swsetup_r+0xb8>)
 800542a:	b570      	push	{r4, r5, r6, lr}
 800542c:	0005      	movs	r5, r0
 800542e:	6818      	ldr	r0, [r3, #0]
 8005430:	000c      	movs	r4, r1
 8005432:	2800      	cmp	r0, #0
 8005434:	d004      	beq.n	8005440 <__swsetup_r+0x18>
 8005436:	6a03      	ldr	r3, [r0, #32]
 8005438:	2b00      	cmp	r3, #0
 800543a:	d101      	bne.n	8005440 <__swsetup_r+0x18>
 800543c:	f7ff f9d8 	bl	80047f0 <__sinit>
 8005440:	230c      	movs	r3, #12
 8005442:	5ee2      	ldrsh	r2, [r4, r3]
 8005444:	0713      	lsls	r3, r2, #28
 8005446:	d423      	bmi.n	8005490 <__swsetup_r+0x68>
 8005448:	06d3      	lsls	r3, r2, #27
 800544a:	d407      	bmi.n	800545c <__swsetup_r+0x34>
 800544c:	2309      	movs	r3, #9
 800544e:	602b      	str	r3, [r5, #0]
 8005450:	2340      	movs	r3, #64	@ 0x40
 8005452:	2001      	movs	r0, #1
 8005454:	4313      	orrs	r3, r2
 8005456:	81a3      	strh	r3, [r4, #12]
 8005458:	4240      	negs	r0, r0
 800545a:	e03a      	b.n	80054d2 <__swsetup_r+0xaa>
 800545c:	0752      	lsls	r2, r2, #29
 800545e:	d513      	bpl.n	8005488 <__swsetup_r+0x60>
 8005460:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005462:	2900      	cmp	r1, #0
 8005464:	d008      	beq.n	8005478 <__swsetup_r+0x50>
 8005466:	0023      	movs	r3, r4
 8005468:	3344      	adds	r3, #68	@ 0x44
 800546a:	4299      	cmp	r1, r3
 800546c:	d002      	beq.n	8005474 <__swsetup_r+0x4c>
 800546e:	0028      	movs	r0, r5
 8005470:	f7ff faf6 	bl	8004a60 <_free_r>
 8005474:	2300      	movs	r3, #0
 8005476:	6363      	str	r3, [r4, #52]	@ 0x34
 8005478:	2224      	movs	r2, #36	@ 0x24
 800547a:	89a3      	ldrh	r3, [r4, #12]
 800547c:	4393      	bics	r3, r2
 800547e:	81a3      	strh	r3, [r4, #12]
 8005480:	2300      	movs	r3, #0
 8005482:	6063      	str	r3, [r4, #4]
 8005484:	6923      	ldr	r3, [r4, #16]
 8005486:	6023      	str	r3, [r4, #0]
 8005488:	2308      	movs	r3, #8
 800548a:	89a2      	ldrh	r2, [r4, #12]
 800548c:	4313      	orrs	r3, r2
 800548e:	81a3      	strh	r3, [r4, #12]
 8005490:	6923      	ldr	r3, [r4, #16]
 8005492:	2b00      	cmp	r3, #0
 8005494:	d10b      	bne.n	80054ae <__swsetup_r+0x86>
 8005496:	21a0      	movs	r1, #160	@ 0xa0
 8005498:	2280      	movs	r2, #128	@ 0x80
 800549a:	89a3      	ldrh	r3, [r4, #12]
 800549c:	0089      	lsls	r1, r1, #2
 800549e:	0092      	lsls	r2, r2, #2
 80054a0:	400b      	ands	r3, r1
 80054a2:	4293      	cmp	r3, r2
 80054a4:	d003      	beq.n	80054ae <__swsetup_r+0x86>
 80054a6:	0021      	movs	r1, r4
 80054a8:	0028      	movs	r0, r5
 80054aa:	f000 f89b 	bl	80055e4 <__smakebuf_r>
 80054ae:	230c      	movs	r3, #12
 80054b0:	5ee2      	ldrsh	r2, [r4, r3]
 80054b2:	2101      	movs	r1, #1
 80054b4:	0013      	movs	r3, r2
 80054b6:	400b      	ands	r3, r1
 80054b8:	420a      	tst	r2, r1
 80054ba:	d00b      	beq.n	80054d4 <__swsetup_r+0xac>
 80054bc:	2300      	movs	r3, #0
 80054be:	60a3      	str	r3, [r4, #8]
 80054c0:	6963      	ldr	r3, [r4, #20]
 80054c2:	425b      	negs	r3, r3
 80054c4:	61a3      	str	r3, [r4, #24]
 80054c6:	2000      	movs	r0, #0
 80054c8:	6923      	ldr	r3, [r4, #16]
 80054ca:	4283      	cmp	r3, r0
 80054cc:	d101      	bne.n	80054d2 <__swsetup_r+0xaa>
 80054ce:	0613      	lsls	r3, r2, #24
 80054d0:	d4be      	bmi.n	8005450 <__swsetup_r+0x28>
 80054d2:	bd70      	pop	{r4, r5, r6, pc}
 80054d4:	0791      	lsls	r1, r2, #30
 80054d6:	d400      	bmi.n	80054da <__swsetup_r+0xb2>
 80054d8:	6963      	ldr	r3, [r4, #20]
 80054da:	60a3      	str	r3, [r4, #8]
 80054dc:	e7f3      	b.n	80054c6 <__swsetup_r+0x9e>
 80054de:	46c0      	nop			@ (mov r8, r8)
 80054e0:	2000002c 	.word	0x2000002c

080054e4 <_raise_r>:
 80054e4:	b570      	push	{r4, r5, r6, lr}
 80054e6:	0004      	movs	r4, r0
 80054e8:	000d      	movs	r5, r1
 80054ea:	291f      	cmp	r1, #31
 80054ec:	d904      	bls.n	80054f8 <_raise_r+0x14>
 80054ee:	2316      	movs	r3, #22
 80054f0:	6003      	str	r3, [r0, #0]
 80054f2:	2001      	movs	r0, #1
 80054f4:	4240      	negs	r0, r0
 80054f6:	bd70      	pop	{r4, r5, r6, pc}
 80054f8:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80054fa:	2b00      	cmp	r3, #0
 80054fc:	d004      	beq.n	8005508 <_raise_r+0x24>
 80054fe:	008a      	lsls	r2, r1, #2
 8005500:	189b      	adds	r3, r3, r2
 8005502:	681a      	ldr	r2, [r3, #0]
 8005504:	2a00      	cmp	r2, #0
 8005506:	d108      	bne.n	800551a <_raise_r+0x36>
 8005508:	0020      	movs	r0, r4
 800550a:	f000 f831 	bl	8005570 <_getpid_r>
 800550e:	002a      	movs	r2, r5
 8005510:	0001      	movs	r1, r0
 8005512:	0020      	movs	r0, r4
 8005514:	f000 f81a 	bl	800554c <_kill_r>
 8005518:	e7ed      	b.n	80054f6 <_raise_r+0x12>
 800551a:	2a01      	cmp	r2, #1
 800551c:	d009      	beq.n	8005532 <_raise_r+0x4e>
 800551e:	1c51      	adds	r1, r2, #1
 8005520:	d103      	bne.n	800552a <_raise_r+0x46>
 8005522:	2316      	movs	r3, #22
 8005524:	6003      	str	r3, [r0, #0]
 8005526:	2001      	movs	r0, #1
 8005528:	e7e5      	b.n	80054f6 <_raise_r+0x12>
 800552a:	2100      	movs	r1, #0
 800552c:	0028      	movs	r0, r5
 800552e:	6019      	str	r1, [r3, #0]
 8005530:	4790      	blx	r2
 8005532:	2000      	movs	r0, #0
 8005534:	e7df      	b.n	80054f6 <_raise_r+0x12>
	...

08005538 <raise>:
 8005538:	b510      	push	{r4, lr}
 800553a:	4b03      	ldr	r3, [pc, #12]	@ (8005548 <raise+0x10>)
 800553c:	0001      	movs	r1, r0
 800553e:	6818      	ldr	r0, [r3, #0]
 8005540:	f7ff ffd0 	bl	80054e4 <_raise_r>
 8005544:	bd10      	pop	{r4, pc}
 8005546:	46c0      	nop			@ (mov r8, r8)
 8005548:	2000002c 	.word	0x2000002c

0800554c <_kill_r>:
 800554c:	2300      	movs	r3, #0
 800554e:	b570      	push	{r4, r5, r6, lr}
 8005550:	4d06      	ldr	r5, [pc, #24]	@ (800556c <_kill_r+0x20>)
 8005552:	0004      	movs	r4, r0
 8005554:	0008      	movs	r0, r1
 8005556:	0011      	movs	r1, r2
 8005558:	602b      	str	r3, [r5, #0]
 800555a:	f7fc fb45 	bl	8001be8 <_kill>
 800555e:	1c43      	adds	r3, r0, #1
 8005560:	d103      	bne.n	800556a <_kill_r+0x1e>
 8005562:	682b      	ldr	r3, [r5, #0]
 8005564:	2b00      	cmp	r3, #0
 8005566:	d000      	beq.n	800556a <_kill_r+0x1e>
 8005568:	6023      	str	r3, [r4, #0]
 800556a:	bd70      	pop	{r4, r5, r6, pc}
 800556c:	2000041c 	.word	0x2000041c

08005570 <_getpid_r>:
 8005570:	b510      	push	{r4, lr}
 8005572:	f7fc fb33 	bl	8001bdc <_getpid>
 8005576:	bd10      	pop	{r4, pc}

08005578 <memchr>:
 8005578:	b2c9      	uxtb	r1, r1
 800557a:	1882      	adds	r2, r0, r2
 800557c:	4290      	cmp	r0, r2
 800557e:	d101      	bne.n	8005584 <memchr+0xc>
 8005580:	2000      	movs	r0, #0
 8005582:	4770      	bx	lr
 8005584:	7803      	ldrb	r3, [r0, #0]
 8005586:	428b      	cmp	r3, r1
 8005588:	d0fb      	beq.n	8005582 <memchr+0xa>
 800558a:	3001      	adds	r0, #1
 800558c:	e7f6      	b.n	800557c <memchr+0x4>
	...

08005590 <__swhatbuf_r>:
 8005590:	b570      	push	{r4, r5, r6, lr}
 8005592:	000e      	movs	r6, r1
 8005594:	001d      	movs	r5, r3
 8005596:	230e      	movs	r3, #14
 8005598:	5ec9      	ldrsh	r1, [r1, r3]
 800559a:	0014      	movs	r4, r2
 800559c:	b096      	sub	sp, #88	@ 0x58
 800559e:	2900      	cmp	r1, #0
 80055a0:	da0c      	bge.n	80055bc <__swhatbuf_r+0x2c>
 80055a2:	89b2      	ldrh	r2, [r6, #12]
 80055a4:	2380      	movs	r3, #128	@ 0x80
 80055a6:	0011      	movs	r1, r2
 80055a8:	4019      	ands	r1, r3
 80055aa:	421a      	tst	r2, r3
 80055ac:	d114      	bne.n	80055d8 <__swhatbuf_r+0x48>
 80055ae:	2380      	movs	r3, #128	@ 0x80
 80055b0:	00db      	lsls	r3, r3, #3
 80055b2:	2000      	movs	r0, #0
 80055b4:	6029      	str	r1, [r5, #0]
 80055b6:	6023      	str	r3, [r4, #0]
 80055b8:	b016      	add	sp, #88	@ 0x58
 80055ba:	bd70      	pop	{r4, r5, r6, pc}
 80055bc:	466a      	mov	r2, sp
 80055be:	f000 f853 	bl	8005668 <_fstat_r>
 80055c2:	2800      	cmp	r0, #0
 80055c4:	dbed      	blt.n	80055a2 <__swhatbuf_r+0x12>
 80055c6:	23f0      	movs	r3, #240	@ 0xf0
 80055c8:	9901      	ldr	r1, [sp, #4]
 80055ca:	021b      	lsls	r3, r3, #8
 80055cc:	4019      	ands	r1, r3
 80055ce:	4b04      	ldr	r3, [pc, #16]	@ (80055e0 <__swhatbuf_r+0x50>)
 80055d0:	18c9      	adds	r1, r1, r3
 80055d2:	424b      	negs	r3, r1
 80055d4:	4159      	adcs	r1, r3
 80055d6:	e7ea      	b.n	80055ae <__swhatbuf_r+0x1e>
 80055d8:	2100      	movs	r1, #0
 80055da:	2340      	movs	r3, #64	@ 0x40
 80055dc:	e7e9      	b.n	80055b2 <__swhatbuf_r+0x22>
 80055de:	46c0      	nop			@ (mov r8, r8)
 80055e0:	ffffe000 	.word	0xffffe000

080055e4 <__smakebuf_r>:
 80055e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80055e6:	2602      	movs	r6, #2
 80055e8:	898b      	ldrh	r3, [r1, #12]
 80055ea:	0005      	movs	r5, r0
 80055ec:	000c      	movs	r4, r1
 80055ee:	b085      	sub	sp, #20
 80055f0:	4233      	tst	r3, r6
 80055f2:	d007      	beq.n	8005604 <__smakebuf_r+0x20>
 80055f4:	0023      	movs	r3, r4
 80055f6:	3347      	adds	r3, #71	@ 0x47
 80055f8:	6023      	str	r3, [r4, #0]
 80055fa:	6123      	str	r3, [r4, #16]
 80055fc:	2301      	movs	r3, #1
 80055fe:	6163      	str	r3, [r4, #20]
 8005600:	b005      	add	sp, #20
 8005602:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005604:	ab03      	add	r3, sp, #12
 8005606:	aa02      	add	r2, sp, #8
 8005608:	f7ff ffc2 	bl	8005590 <__swhatbuf_r>
 800560c:	9f02      	ldr	r7, [sp, #8]
 800560e:	9001      	str	r0, [sp, #4]
 8005610:	0039      	movs	r1, r7
 8005612:	0028      	movs	r0, r5
 8005614:	f7ff fa9a 	bl	8004b4c <_malloc_r>
 8005618:	2800      	cmp	r0, #0
 800561a:	d108      	bne.n	800562e <__smakebuf_r+0x4a>
 800561c:	220c      	movs	r2, #12
 800561e:	5ea3      	ldrsh	r3, [r4, r2]
 8005620:	059a      	lsls	r2, r3, #22
 8005622:	d4ed      	bmi.n	8005600 <__smakebuf_r+0x1c>
 8005624:	2203      	movs	r2, #3
 8005626:	4393      	bics	r3, r2
 8005628:	431e      	orrs	r6, r3
 800562a:	81a6      	strh	r6, [r4, #12]
 800562c:	e7e2      	b.n	80055f4 <__smakebuf_r+0x10>
 800562e:	2380      	movs	r3, #128	@ 0x80
 8005630:	89a2      	ldrh	r2, [r4, #12]
 8005632:	6020      	str	r0, [r4, #0]
 8005634:	4313      	orrs	r3, r2
 8005636:	81a3      	strh	r3, [r4, #12]
 8005638:	9b03      	ldr	r3, [sp, #12]
 800563a:	6120      	str	r0, [r4, #16]
 800563c:	6167      	str	r7, [r4, #20]
 800563e:	2b00      	cmp	r3, #0
 8005640:	d00c      	beq.n	800565c <__smakebuf_r+0x78>
 8005642:	0028      	movs	r0, r5
 8005644:	230e      	movs	r3, #14
 8005646:	5ee1      	ldrsh	r1, [r4, r3]
 8005648:	f000 f820 	bl	800568c <_isatty_r>
 800564c:	2800      	cmp	r0, #0
 800564e:	d005      	beq.n	800565c <__smakebuf_r+0x78>
 8005650:	2303      	movs	r3, #3
 8005652:	89a2      	ldrh	r2, [r4, #12]
 8005654:	439a      	bics	r2, r3
 8005656:	3b02      	subs	r3, #2
 8005658:	4313      	orrs	r3, r2
 800565a:	81a3      	strh	r3, [r4, #12]
 800565c:	89a3      	ldrh	r3, [r4, #12]
 800565e:	9a01      	ldr	r2, [sp, #4]
 8005660:	4313      	orrs	r3, r2
 8005662:	81a3      	strh	r3, [r4, #12]
 8005664:	e7cc      	b.n	8005600 <__smakebuf_r+0x1c>
	...

08005668 <_fstat_r>:
 8005668:	2300      	movs	r3, #0
 800566a:	b570      	push	{r4, r5, r6, lr}
 800566c:	4d06      	ldr	r5, [pc, #24]	@ (8005688 <_fstat_r+0x20>)
 800566e:	0004      	movs	r4, r0
 8005670:	0008      	movs	r0, r1
 8005672:	0011      	movs	r1, r2
 8005674:	602b      	str	r3, [r5, #0]
 8005676:	f7fc fb17 	bl	8001ca8 <_fstat>
 800567a:	1c43      	adds	r3, r0, #1
 800567c:	d103      	bne.n	8005686 <_fstat_r+0x1e>
 800567e:	682b      	ldr	r3, [r5, #0]
 8005680:	2b00      	cmp	r3, #0
 8005682:	d000      	beq.n	8005686 <_fstat_r+0x1e>
 8005684:	6023      	str	r3, [r4, #0]
 8005686:	bd70      	pop	{r4, r5, r6, pc}
 8005688:	2000041c 	.word	0x2000041c

0800568c <_isatty_r>:
 800568c:	2300      	movs	r3, #0
 800568e:	b570      	push	{r4, r5, r6, lr}
 8005690:	4d06      	ldr	r5, [pc, #24]	@ (80056ac <_isatty_r+0x20>)
 8005692:	0004      	movs	r4, r0
 8005694:	0008      	movs	r0, r1
 8005696:	602b      	str	r3, [r5, #0]
 8005698:	f7fc fb14 	bl	8001cc4 <_isatty>
 800569c:	1c43      	adds	r3, r0, #1
 800569e:	d103      	bne.n	80056a8 <_isatty_r+0x1c>
 80056a0:	682b      	ldr	r3, [r5, #0]
 80056a2:	2b00      	cmp	r3, #0
 80056a4:	d000      	beq.n	80056a8 <_isatty_r+0x1c>
 80056a6:	6023      	str	r3, [r4, #0]
 80056a8:	bd70      	pop	{r4, r5, r6, pc}
 80056aa:	46c0      	nop			@ (mov r8, r8)
 80056ac:	2000041c 	.word	0x2000041c

080056b0 <_init>:
 80056b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056b2:	46c0      	nop			@ (mov r8, r8)
 80056b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056b6:	bc08      	pop	{r3}
 80056b8:	469e      	mov	lr, r3
 80056ba:	4770      	bx	lr

080056bc <_fini>:
 80056bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056be:	46c0      	nop			@ (mov r8, r8)
 80056c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056c2:	bc08      	pop	{r3}
 80056c4:	469e      	mov	lr, r3
 80056c6:	4770      	bx	lr
